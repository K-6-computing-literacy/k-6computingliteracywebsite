[
  {
    "objectID": "activities/01activity/01activity.html",
    "href": "activities/01activity/01activity.html",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "",
    "text": "In this activity, students will learn the fundamentals of if-else-if else (elif) statements through a hands-on lesson involving a model car and a programmable robot (GoPiGo). Students will explore decision-making using block code processes by programming the robot to navigate a multi-way road with a barricade, simulating real-life scenarios where alternate routes must be taken when the primary route is blocked."
  },
  {
    "objectID": "activities/01activity/01activity.html#description",
    "href": "activities/01activity/01activity.html#description",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "",
    "text": "In this activity, students will learn the fundamentals of if-else-if else (elif) statements through a hands-on lesson involving a model car and a programmable robot (GoPiGo). Students will explore decision-making using block code processes by programming the robot to navigate a multi-way road with a barricade, simulating real-life scenarios where alternate routes must be taken when the primary route is blocked."
  },
  {
    "objectID": "activities/01activity/01activity.html#materials-required",
    "href": "activities/01activity/01activity.html#materials-required",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Materials Required",
    "text": "Materials Required\n\nModel car\nTwo-/three-way road setup. Picture of demo map is shown below.\nBarricade (mini yellow cones)\nGoPiGo robot\nLaptop configured for GoPiGo"
  },
  {
    "objectID": "activities/01activity/01activity.html#steps-to-conduct-the-activity",
    "href": "activities/01activity/01activity.html#steps-to-conduct-the-activity",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Topic Explanation\n\nUse simple examples to illustrate the concept of if-else statements, such as deciding whether to bring an umbrella based on whether it is raining.\n\n\n\nStep 2: Explain the Problem\n\nShow the students a model car on a three-way road. Place a barricade on one of the roads, explaining that the primary route is blocked due to construction.\nIllustrate how and why the car needs to decide to take an alternative route if the primary route is blocked.\nBlock another route, and ask students what they would do now since two main routes are blocked.\n\n\n\nStep 3: Interactive Time\n\nAsk students what they would do if they were in this situation. Would they take the other route? How would they do it? Are there any other options they would prefer?\nDivide the class into two groups, each group with a laptop under supervision.\nUsing block code, guide each group to set up their robot (which will serve as the car) to reenact the two situations.\nAllow the students to test their code by running the robot on the road setup."
  },
  {
    "objectID": "activities/01activity/01activity.html#reflection",
    "href": "activities/01activity/01activity.html#reflection",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Reflection",
    "text": "Reflection\n\nBring the groups together to discuss their experiences. Ask each group to share their challenges and solutions."
  },
  {
    "objectID": "activities/01activity/01activity.html#learning-outcomes",
    "href": "activities/01activity/01activity.html#learning-outcomes",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nComprehend the basic structure and function of if-else-elif statements in programming.\nUse conditional statements to create decision-making processes in block coding.\nSimulate real-life problem-solving by programming a robot to navigate alternate routes when the primary path is blocked.\nEnhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.\nTest their block code in a practical setup and debug any issues that arise to ensure the robot navigates correctly."
  },
  {
    "objectID": "activities/01activity/01activity.html#picture-of-the-map",
    "href": "activities/01activity/01activity.html#picture-of-the-map",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Picture of the Map",
    "text": "Picture of the Map\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/08activity/08activity.html",
    "href": "activities/08activity/08activity.html",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "",
    "text": "This activity aims to encourage students to reflect on their experiences with robots, foster creativity through drawing, and develop critical thinking skills through an engaging online coding exercise."
  },
  {
    "objectID": "activities/08activity/08activity.html#objective",
    "href": "activities/08activity/08activity.html#objective",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "",
    "text": "This activity aims to encourage students to reflect on their experiences with robots, foster creativity through drawing, and develop critical thinking skills through an engaging online coding exercise."
  },
  {
    "objectID": "activities/08activity/08activity.html#materials-needed",
    "href": "activities/08activity/08activity.html#materials-needed",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Materials Needed",
    "text": "Materials Needed\n\nPaper and pencils for drawing\nComputers or tablets with internet access for the online activity"
  },
  {
    "objectID": "activities/08activity/08activity.html#instructions",
    "href": "activities/08activity/08activity.html#instructions",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Instructions",
    "text": "Instructions\n\nStep 1: Reflection and Observation\n\nProvide each student with a piece of paper.\nAsk students to reflect on their experiences with robots, especially what they observed during their time at the camp. This includes features like distance sensors, speakers, and cameras.\nEncourage them to list as many features and details as they can remember.\n\n\n\nStep 2: Creative Drawing\n\nBased on their reflections, instruct students to draw their own robot.\nThis drawing session allows students to express their creativity and apply what they have learned about the various parts and functions of robots.\n\n\n\nStep 3: Online Coding Activity - RodoCode\n\nAfter the drawing session, introduce students to the online activity called RodoCode on Code.org.\nRodoCode is an interactive coding exercise where students use blocks to program a robot to reach its destination.\nEmphasize that this activity will enhance critical thinking and problem-solving skills while reinforcing their understanding of robotics concepts."
  },
  {
    "objectID": "activities/08activity/08activity.html#summary",
    "href": "activities/08activity/08activity.html#summary",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Summary",
    "text": "Summary\nThis activity engages students in reflecting on their robot experiences, expressing creativity through drawing, and developing coding skills through an online exercise. It combines observation, artistic expression, and computational thinking in a fun and educational manner."
  },
  {
    "objectID": "activities/10activity/activity10.html",
    "href": "activities/10activity/activity10.html",
    "title": "Activity 10: Internet Safety Routes",
    "section": "",
    "text": "This activity teaches students how to practice internet safety by identifying safe and unsafe actions on the internet. Students will watch a video about internet safety and then engage in an activity using Spheros to create and navigate routes based on safe and unsafe terms."
  },
  {
    "objectID": "activities/10activity/activity10.html#description",
    "href": "activities/10activity/activity10.html#description",
    "title": "Activity 10: Internet Safety Routes",
    "section": "",
    "text": "This activity teaches students how to practice internet safety by identifying safe and unsafe actions on the internet. Students will watch a video about internet safety and then engage in an activity using Spheros to create and navigate routes based on safe and unsafe terms."
  },
  {
    "objectID": "activities/10activity/activity10.html#materials-required",
    "href": "activities/10activity/activity10.html#materials-required",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Materials Required",
    "text": "Materials Required\n\nInternet safety flashcards\nWooden blocks\nSpheros\niPad"
  },
  {
    "objectID": "activities/10activity/activity10.html#steps-to-conduct-the-activity",
    "href": "activities/10activity/activity10.html#steps-to-conduct-the-activity",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Internet Safety Video\n\nStart by discussing with students their experiences using the internet and activities they have done online.\nExplain the importance of learning safe practices for internet use.\nPlay the Twinkl video on internet safety: Twinkl Internet Safety Video.\nAfter watching, ask students what they learned from the video.\n\n\n\nStep 2: Flashcards\n\nDivide students into two groups and provide them with flashcards containing safe and unsafe terms/actions.\nInstruct students to sort the flashcards into safe and unsafe categories.\nReview the sorted flashcards to ensure understanding before proceeding.\n\n\n\nStep 3: Creating Routes\n\nUsing wooden blocks and the sorted flashcards, have students create two routes: one for safe terms/actions and one for unsafe terms/actions that their Sphero can navigate through.\nKindergarteners will focus on creating routes without the flashcard sorting component.\n\n\n\nStep 4: Using Spheros\n\nAllow students to use Spheros to navigate through the routes they created.\nEncourage students to create new routes for their Spheros after completing the initial ones."
  },
  {
    "objectID": "activities/10activity/activity10.html#reflection",
    "href": "activities/10activity/activity10.html#reflection",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Reflection",
    "text": "Reflection\n\nConduct a reflection session after watching the video.\nAsk students what they learned about internet safety and what actions they might do differently online after watching the video."
  },
  {
    "objectID": "activities/10activity/activity10.html#summary",
    "href": "activities/10activity/activity10.html#summary",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Summary",
    "text": "Summary\nThis activity aims to enhance students’ understanding of internet safety by actively engaging them in identifying safe and unsafe online behaviors. By using Spheros to navigate through created routes, students apply their knowledge in a practical and interactive manner, reinforcing internet safety practices."
  },
  {
    "objectID": "activities/10activity/activity10.html#examples-of-flashcards",
    "href": "activities/10activity/activity10.html#examples-of-flashcards",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Examples of Flashcards",
    "text": "Examples of Flashcards\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/12activity/activity12.html",
    "href": "activities/12activity/activity12.html",
    "title": "Activity 12: Blue-Blocs",
    "section": "",
    "text": "Students will use the Blue-Bot robots to play with the Blue-Bloc app. The activity incorperates the use of blocking coding, a ataic used to simply the understading of code for students. The activity will also include the use of conditional statements that require new ays of thinking and improve skills in computational thinking."
  },
  {
    "objectID": "activities/12activity/activity12.html#description",
    "href": "activities/12activity/activity12.html#description",
    "title": "Activity 12: Blue-Blocs",
    "section": "",
    "text": "Students will use the Blue-Bot robots to play with the Blue-Bloc app. The activity incorperates the use of blocking coding, a ataic used to simply the understading of code for students. The activity will also include the use of conditional statements that require new ays of thinking and improve skills in computational thinking."
  },
  {
    "objectID": "activities/12activity/activity12.html#time-required",
    "href": "activities/12activity/activity12.html#time-required",
    "title": "Activity 12: Blue-Blocs",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 4th grade: 35min, 5th & 6th: 30min"
  },
  {
    "objectID": "activities/12activity/activity12.html#materials-required",
    "href": "activities/12activity/activity12.html#materials-required",
    "title": "Activity 12: Blue-Blocs",
    "section": "Materials Required",
    "text": "Materials Required\n\nBlue-Bot\nBlue-Bot Map\nFlashcards\nIPAD\nPencil\n\nPaper\n\n\nStep 1: Forming Groups\n\nPut students in groups of two at each Map, giving them each three rows of space to put down blank flashcards for obstacles and one picture flashcard as their goal.\nEach student needs a paper, pencil and IPAD to connect to their Blue-Bot\n\n\n\nStep 2: Creating Routes\n\nEncourage students to play around with Bee Bot to see the different blocks available to them for 5 minutes max.\nUsing the flashcards and three rows avaliable to them, tell students to create routes they can run their Blue-Bots through. Give students up to 10 minutes to complete this\n\n\n\nStep 3: Creating Conditions\n\nWith the paper and pencil tell students to create two restictions based upon the avaiable blocks on Blue-Blocs, they cannot have the same restrictions as their partner on the map\n\nExamples: No forward block, No turning 45 degrees, Only 45 degree blocks for turns, Can only turn left etc…\n\n\n\n\nStep 4: Completing Routes and Switching\n\nHave the students run through their own routes with conditions and once completed, switch with their partner and abide by their restrictions.\nOnce both students have done each other routes wait for another group to be done so they can switch places.\nHave the students keep their paper at their original map and use the new ones they find when switching\nKeep the students switching until they have done all the diffrent routes avaliable."
  },
  {
    "objectID": "activities/12activity/activity12.html#reflection",
    "href": "activities/12activity/activity12.html#reflection",
    "title": "Activity 12: Blue-Blocs",
    "section": "Reflection",
    "text": "Reflection\n\nLeave at least 5 minutes of the activity to ask questions about what they did\nExplore with students how easy or hard they found the activity\nAsk the students what they found were the hardest conditions to abide by.\nAsk them if there were any conditions they tried making but weren’t able to."
  },
  {
    "objectID": "activities/12activity/activity12.html#summary",
    "href": "activities/12activity/activity12.html#summary",
    "title": "Activity 12: Blue-Blocs",
    "section": "Summary",
    "text": "Summary\n\nParticipation in the activity is meant to improve students computational thinking. Block coding helps students get a better understanding of how coding works and can help them improve their skills in programming. Encouraging students to create and solve obstacles for block coding will greatly improve their coding skills."
  },
  {
    "objectID": "activities/03activity/03activity.html",
    "href": "activities/03activity/03activity.html",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "",
    "text": "Kids will learn about sorting by arranging numbered paper strips in order and using different sorting approaches that a computer can take."
  },
  {
    "objectID": "activities/03activity/03activity.html#description",
    "href": "activities/03activity/03activity.html#description",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "",
    "text": "Kids will learn about sorting by arranging numbered paper strips in order and using different sorting approaches that a computer can take."
  },
  {
    "objectID": "activities/03activity/03activity.html#materials-required",
    "href": "activities/03activity/03activity.html#materials-required",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Materials Required",
    "text": "Materials Required\n\nPaper pieces labelled 1-10\nNotebook & pen"
  },
  {
    "objectID": "activities/03activity/03activity.html#steps-to-conduct-the-activity",
    "href": "activities/03activity/03activity.html#steps-to-conduct-the-activity",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Introduction\n\nUsing paper pieces, label them from 1 to 10.\nInteract with students and ask why they think having things sorted and arranged can be useful.\nExplain the three different sorting methods we will be using: Bubble Sort, Selection Sort, and Insertion Sort.\n\n\n\nStep 2: How Each Sorting Method Works\n\nBubble Sort\n\nBubble Sort: Takes two adjacent pieces and compares them together, arranging them by swapping if they are in the wrong order.\nLay out the numbered paper strips in a random order.\nCompare each pair of adjacent strips and swap them if they are in the wrong order.\nRepeat this process until the strips are sorted.\n\nReference video to be played before activity: Bubble Sort Algorithm\n\n\nSelection Sort\n\nSelection Sort: Repeatedly finds the smallest item in the unsorted part and moves it to the end of the sorted part.\nLay out the numbered paper strips in a random order.\nFind the smallest number among all the strips and move it to the first position.\nFind the next smallest number from the remaining strips and place it next to the first.\nRepeat until all strips are sorted.\n\nReference video to be played before activity: Selection Sort Algorithm\n\n\nInsertion Sort\n\nInsertion Sort: Involves sorting one item at a time by comparing each new item with the items already sorted and inserting it in the correct position.\nLay out the numbered paper strips in a random order.\nStart with the second strip and compare it to the first. Insert it in the correct position (before or after the first strip).\nTake the third strip and compare it to the already sorted strips, inserting it in the correct position.\nRepeat the process until all strips are sorted.\n\nReference video to be played before activity: Insertion Sort Algorithm"
  },
  {
    "objectID": "activities/03activity/03activity.html#reflection",
    "href": "activities/03activity/03activity.html#reflection",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Reflection",
    "text": "Reflection\n\nGather back as a class and ask students which method took them the least amount of time to complete.\nIf the answers vary, ask them why they felt that way.\n\n\nAnswers on Which Algorithm is Usually Faster\n\nBubble Sort: Slow because it has to compare and swap a lot.\nSelection Sort: A little better than bubble sort but still has to make many comparisons.\nInsertion Sort: Often the fastest of the three for small lists because it finds the right spot for each item without many unnecessary moves."
  },
  {
    "objectID": "activities/03activity/03activity.html#learning-outcomes",
    "href": "activities/03activity/03activity.html#learning-outcomes",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should:\n\nUnderstand the basic concepts of sorting and why it is useful.\nLearn how to perform Bubble Sort, Selection Sort, and Insertion Sort.\nRecognize the differences in efficiency between the three sorting methods."
  },
  {
    "objectID": "activities/06activity/06activity.html",
    "href": "activities/06activity/06activity.html",
    "title": "Activity 6: Debugging",
    "section": "",
    "text": "This activity is designed to educate students on debugging and the various manifestations of bugs in code. The lesson will encompass an activity that assists students in identifying the presence of a bug, methods for resolving it, and distinguishing between syntax errors and logic errors. Syntax errors occur due to grammatical or indentation mistakes in the code, which prevent the program from running correctly. These errors are akin to misspellings or improper punctuation in written language. On the other hand, logic errors arise when the lines of code, while syntactically correct, do not produce the intended outcome. These errors are caused by flawed logic that the computer cannot interpret as intended, leading to incorrect or unexpected results. The activity will use instructions to represent syntax and logic errors that the student will need to identify. It is crucial to highlight what each example represents to ensure a clear understanding of these concepts."
  },
  {
    "objectID": "activities/06activity/06activity.html#description",
    "href": "activities/06activity/06activity.html#description",
    "title": "Activity 6: Debugging",
    "section": "",
    "text": "This activity is designed to educate students on debugging and the various manifestations of bugs in code. The lesson will encompass an activity that assists students in identifying the presence of a bug, methods for resolving it, and distinguishing between syntax errors and logic errors. Syntax errors occur due to grammatical or indentation mistakes in the code, which prevent the program from running correctly. These errors are akin to misspellings or improper punctuation in written language. On the other hand, logic errors arise when the lines of code, while syntactically correct, do not produce the intended outcome. These errors are caused by flawed logic that the computer cannot interpret as intended, leading to incorrect or unexpected results. The activity will use instructions to represent syntax and logic errors that the student will need to identify. It is crucial to highlight what each example represents to ensure a clear understanding of these concepts."
  },
  {
    "objectID": "activities/06activity/06activity.html#materials-required",
    "href": "activities/06activity/06activity.html#materials-required",
    "title": "Activity 6: Debugging",
    "section": "Materials Required",
    "text": "Materials Required\n\nDebugging Video: Bugs!\nDebugging Scenarios\nPencil\nPaper"
  },
  {
    "objectID": "activities/06activity/06activity.html#steps-to-conduct-the-activity",
    "href": "activities/06activity/06activity.html#steps-to-conduct-the-activity",
    "title": "Activity 6: Debugging",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Printing out Debugging Sheets\n\nPrint out debugging sheet before activity starts or during debugging video if you are running activity with someone else\n\nDEBUGGING SHEET: Debugging Sheet\nDEBUGGING ANSWER SHEET: Answer Sheet\n\n\nStep 2: Watching Debugging Video\n\nShow students Debugging video Bugs!\nAfter the video is done ask them about what they think bugs in coding will look like\nAlso ask them if they think bugs can show up in different ways or only one.\n\nFollowing this, it is important to emphasize to the students the types of errors they may encounter while learning to code. Syntax errors occur due to grammatical or indentation mistakes in the code, which prevent the program from running correctly. These errors are akin to misspellings or improper punctuation in written language. On the other hand, logic errors arise when the lines of code, while syntactically correct, do not produce the intended outcome. These errors are caused by flawed logic that the computer cannot interpret as intended, leading to incorrect or unexpected results.\n\n\n\n\nStep 1: Identifying Bugs\n\nHand out the Sheets of paper with the identifying bugs side first\nWith the written examples in the first part of the sheet explain to students that instructions that do not make sense or are grammatically incorrect can be identified as bugs\n\n\n\nStep 2: Categorizing Bugs\n\nThe second part of the sheet has all bugs, direct the students to identify if the instruction be would syntax errors or logic errors\n\n\n\nStep 3: Practice\n\nHave students create instructions that contain Bugs , no Bugs, syntax errors, and logic errors.\nThis exercise will improve their understanding of how to identify bugs and the different types they might encounter."
  },
  {
    "objectID": "activities/06activity/06activity.html#reflection",
    "href": "activities/06activity/06activity.html#reflection",
    "title": "Activity 6: Debugging",
    "section": "Reflection",
    "text": "Reflection\n\nExplain the similarity between actual code and the activity, emphasizing how debugging requires the skills practiced in the activity.\nAsk students if they found the activity challenging and what new concepts they learned.\nInquire which was harder: identifying bugs or categorizing them."
  },
  {
    "objectID": "activities/06activity/06activity.html#summary",
    "href": "activities/06activity/06activity.html#summary",
    "title": "Activity 6: Debugging",
    "section": "Summary",
    "text": "Summary\nThis activity introduces students to the basics of debugging. It highlights common errors in code and methods for addressing them. Engagement in these activities can better prepare students for coding by providing a solid understanding of how to handle errors."
  },
  {
    "objectID": "activities/05activity/05activity.html",
    "href": "activities/05activity/05activity.html",
    "title": "Activity 5: Ozobots",
    "section": "",
    "text": "Students will receive Ozobots and directional mats to collaboratively create intersecting paths. They will be instructed not to allow the Ozobots to collide during the activity. It’s crucial to ensure they start their paths simultaneously to maintain the challenge of avoiding collisions effectively. Initially straightforward, the activity aims to gradually increase complexity. As students master the task, consider removing mats strategically to constrain movement further, promoting continuous skill development and engagement."
  },
  {
    "objectID": "activities/05activity/05activity.html#description",
    "href": "activities/05activity/05activity.html#description",
    "title": "Activity 5: Ozobots",
    "section": "",
    "text": "Students will receive Ozobots and directional mats to collaboratively create intersecting paths. They will be instructed not to allow the Ozobots to collide during the activity. It’s crucial to ensure they start their paths simultaneously to maintain the challenge of avoiding collisions effectively. Initially straightforward, the activity aims to gradually increase complexity. As students master the task, consider removing mats strategically to constrain movement further, promoting continuous skill development and engagement."
  },
  {
    "objectID": "activities/05activity/05activity.html#materials-required",
    "href": "activities/05activity/05activity.html#materials-required",
    "title": "Activity 5: Ozobots",
    "section": "Materials Required",
    "text": "Materials Required\n\nOzo bot\nDirectional Mats"
  },
  {
    "objectID": "activities/05activity/05activity.html#steps-to-conduct-the-activity",
    "href": "activities/05activity/05activity.html#steps-to-conduct-the-activity",
    "title": "Activity 5: Ozobots",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Forming groups\n\nSplit the students into groups of three\nIf there is an uneven amount of students create groups of four\nIf there is not enough Ozobots for everyone try to create groups that have at least two Ozobots\n\n\n\nStep 2: Creating their Paths\n\nAllow students for up to 10 minutes to create their paths with the option of creating intersections if they want too\nOnce it has hit the 10 minute mark they must all create paths that are intersecting with on another\n\n\n\nStep 3: Restriction\n\nIf students have successfully run through paths at least three times, require them to remove at least one of the directional mats they have. This could be forward, back, stop, dance etc.\nRemove only a maximum of two mats at a time. Do not remove mats that will not allow them to be able to move effectively at all -Example: Removing the forward and back mat at the same time"
  },
  {
    "objectID": "activities/05activity/05activity.html#reflection",
    "href": "activities/05activity/05activity.html#reflection",
    "title": "Activity 5: Ozobots",
    "section": "Reflection",
    "text": "Reflection\n\nAsk students what they found challenging about creating their paths with one another\nAsk if they found it harder or easier to work with people or to make paths by themselves\nAsk them if there was anything they wanted to do but didn’t have the time to do."
  },
  {
    "objectID": "activities/05activity/05activity.html#learning-outcomes",
    "href": "activities/05activity/05activity.html#learning-outcomes",
    "title": "Activity 5: Ozobots",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nThis activity is designed to enhance students’ computational skills by fostering adaptability and problem-solving in response to varying conditions. It promotes the development of critical thinking abilities crucial for early learners. This simplified introduction to conditional statements is particularly beneficial for kindergarteners, laying a foundational understanding essential for their initial encounters with coding concepts."
  },
  {
    "objectID": "activities/14activity/14activity.html",
    "href": "activities/14activity/14activity.html",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "",
    "text": "Students will engage with the Code.org platform to play an interactive coding game inspired by the movie “Frozen.” Through this activity, they will utilize block-based coding to deepen their comprehension of fundamental programming concepts. As they progress through the game, students will learn how to construct sequences, loops, and conditional statements, and observe how these elements interact to produce the desired outcomes. This hands-on experience aims to enhance their understanding of how coding works in a fun and educational environment, fostering their problem-solving skills and creativity"
  },
  {
    "objectID": "activities/14activity/14activity.html#description",
    "href": "activities/14activity/14activity.html#description",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "",
    "text": "Students will engage with the Code.org platform to play an interactive coding game inspired by the movie “Frozen.” Through this activity, they will utilize block-based coding to deepen their comprehension of fundamental programming concepts. As they progress through the game, students will learn how to construct sequences, loops, and conditional statements, and observe how these elements interact to produce the desired outcomes. This hands-on experience aims to enhance their understanding of how coding works in a fun and educational environment, fostering their problem-solving skills and creativity"
  },
  {
    "objectID": "activities/14activity/14activity.html#materials-required",
    "href": "activities/14activity/14activity.html#materials-required",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "Materials required",
    "text": "Materials required\n\nIPAD\nCode.org platform: Code with Anna and Elsa"
  },
  {
    "objectID": "activities/14activity/14activity.html#steps-to-conduct-the-activity",
    "href": "activities/14activity/14activity.html#steps-to-conduct-the-activity",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nStep 1: Setup and Introduction\n\nOpen the Code.org platform on iPads.\nShow students the introductory video provided before starting the activity.\n\n\n\nStep 2: Engaging with Minecraft Blocks\n\nGuide students through the initial stages of the Frozen block coding game.\nDisable subsequent instructional videos to encourage independent exploration."
  },
  {
    "objectID": "activities/14activity/14activity.html#reflection",
    "href": "activities/14activity/14activity.html#reflection",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 30-minute mark to discuss progress and challenges.\nAsk students to describe what they observed Minecraft mobs doing with the block codes.\nRelate the activity to game development, emphasizing how coding principles translate into interactive gameplay experiences."
  },
  {
    "objectID": "activities/14activity/14activity.html#learning-outcomes",
    "href": "activities/14activity/14activity.html#learning-outcomes",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nBy introducing them to basic coding principles, students will develop a stronger grasp of programming, leading to improved comprehension when they encounter more complex coding tasks in the future. This early exposure aims to build their confidence and proficiency in understanding and applying code effectively."
  },
  {
    "objectID": "technical-leader-guide/index.html",
    "href": "technical-leader-guide/index.html",
    "title": "Guide for Computing Outreach Fellows",
    "section": "",
    "text": "Computing outreach involves engaging K-6 students in regular, hands-on computing activities to foster interest and competency in computational skills. This includes introducing students to computational thinking and problem-solving through events, workshops, and classroom activities, and using technologies. The goal is to provide consistent exposure in the computing field in a fun way."
  },
  {
    "objectID": "technical-leader-guide/index.html#what-is-the-computing-outreach-program",
    "href": "technical-leader-guide/index.html#what-is-the-computing-outreach-program",
    "title": "Guide for Computing Outreach Fellows",
    "section": "",
    "text": "Computing outreach involves engaging K-6 students in regular, hands-on computing activities to foster interest and competency in computational skills. This includes introducing students to computational thinking and problem-solving through events, workshops, and classroom activities, and using technologies. The goal is to provide consistent exposure in the computing field in a fun way."
  },
  {
    "objectID": "technical-leader-guide/index.html#what-to-expect-as-a-computing-outreach-fellow",
    "href": "technical-leader-guide/index.html#what-to-expect-as-a-computing-outreach-fellow",
    "title": "Guide for Computing Outreach Fellows",
    "section": "What to Expect as a Computing Outreach Fellow",
    "text": "What to Expect as a Computing Outreach Fellow\n\nYou will be tasked with activities that will vary depending on the grades you are working with\nAll activities will be held in groups that can vary depending on the size of the class\nWorking with younger students ranging from K to 2nd grade, will require to participate in activities that are more based in reading and explain methods of computational skills\nOlder students from 5th to 6th grade will involve the use of more robotics in activities, requiring fellows to understand how the robots work and how they fit into the activities\nYou will be given outlines that will guide you through the necessary steps to doing activities"
  },
  {
    "objectID": "technical-leader-guide/index.html#key-responsibilities",
    "href": "technical-leader-guide/index.html#key-responsibilities",
    "title": "Guide for Computing Outreach Fellows",
    "section": "Key Responsibilities",
    "text": "Key Responsibilities\n\nWorking with children\nCollaborating with faculty at Meadville public schools\nRunning through and understanding activities beforehand\nReading books that improve students understanding of computational skills"
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "About",
    "section": "",
    "text": "Our goal is to foster an ongoing collaboration between the Department of Computer and Information Science at Allegheny College and Crawford Central elementary schools. This initiative introduces K-6 students to computing concepts, ensuring consistent exposure to STEM from early education."
  },
  {
    "objectID": "about/index.html#our-mission-and-goal",
    "href": "about/index.html#our-mission-and-goal",
    "title": "About",
    "section": "",
    "text": "Our goal is to foster an ongoing collaboration between the Department of Computer and Information Science at Allegheny College and Crawford Central elementary schools. This initiative introduces K-6 students to computing concepts, ensuring consistent exposure to STEM from early education."
  },
  {
    "objectID": "about/index.html#pennsylvania-education",
    "href": "about/index.html#pennsylvania-education",
    "title": "About",
    "section": "Pennsylvania Education",
    "text": "Pennsylvania Education\n\nSTEM In Pennsylvania\nSTEM education in Pennslyvania is bulit on the foundational beliefs that all students are capable of STEM literacy, iteration and relfection are an important part of the STEM learning process, STEM education should transcends the classroom walls by intergrating into the community and success depends upon the patnership between educators students, families, postsecondary providers etc.\n\n\nComputer Science Literacy in Pennslyvania Schools\nThe existing framework for computer science literacy in Pennsylvania schools places a significantly greater emphasis on grades 7 through 12. This is primarily because the current content and programs available are not feasible for implementation in kindergarten through sixth grade.\nA critical component of teaching computer science in schools is the development of programs that equip teachers to deliver effective lessons. The PA board of education states “all programs are expected to have course content aligned with state standards. All teacher preparation programs are expected to provide all candidates with the knowledge and skills to teach a standards-based curriculum effectively and successfully. Through university coursework and extensive, well-designed clinical experiences, all candidates for the profession are expected to learn how to use materials and resources for instruction (including technology) to meet the individual needs of each student in their classroom”.\n\nSources\nPA Department of Education STEM Guidelines\nThe Framework for Computer Science 7-12 Program Guidelines"
  },
  {
    "objectID": "template/(number)activity.html",
    "href": "template/(number)activity.html",
    "title": "Activity _ :",
    "section": "",
    "text": "Please ensure you are creating an activity as a PR and getting it reviewed by the team before merging it to the main branch. Thank you!"
  },
  {
    "objectID": "template/(number)activity.html#important-remove-later",
    "href": "template/(number)activity.html#important-remove-later",
    "title": "Activity _ :",
    "section": "",
    "text": "Please ensure you are creating an activity as a PR and getting it reviewed by the team before merging it to the main branch. Thank you!"
  },
  {
    "objectID": "template/(number)activity.html#description",
    "href": "template/(number)activity.html#description",
    "title": "Activity _ :",
    "section": "Description",
    "text": "Description\nAdd description of the activity"
  },
  {
    "objectID": "template/(number)activity.html#materials-required",
    "href": "template/(number)activity.html#materials-required",
    "title": "Activity _ :",
    "section": "Materials Required",
    "text": "Materials Required"
  },
  {
    "objectID": "template/(number)activity.html#steps-to-conduct-the-activity",
    "href": "template/(number)activity.html#steps-to-conduct-the-activity",
    "title": "Activity _ :",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1:\n\n\n\n\n\nStep 2:\n\n\nStep 3\nAdd more steps, if required."
  },
  {
    "objectID": "template/(number)activity.html#reflection",
    "href": "template/(number)activity.html#reflection",
    "title": "Activity _ :",
    "section": "Reflection",
    "text": "Reflection"
  },
  {
    "objectID": "template/(number)activity.html#learning-outcomes",
    "href": "template/(number)activity.html#learning-outcomes",
    "title": "Activity _ :",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:"
  },
  {
    "objectID": "template/(number)activity.html#pictures-if-required",
    "href": "template/(number)activity.html#pictures-if-required",
    "title": "Activity _ :",
    "section": "Pictures (if required)",
    "text": "Pictures (if required)\n\n\n\nPicture"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\nCode with Chompers\n",
    "section": "",
    "text": "Inspiring future technologists to think computationally!\n\n\nExplore our engaging and educational activities designed for young digital learners. Learn more about our exciting initiatives on the About page.\n\n\n\n\n\n\n\n\n\nFor Teachers\n\n\nLearn about how you can bring Outreach Fellows into your classroom and explore our Activities which can be conducted in classes.\n\nRegister to become an Outreach Fellow! Find Activities\n\n\n\n\n\n\n\n\nFor Outreach Fellows\n\n\nAs a Computing Outreach Fellow, you’ll guide engaging activities for students of all ages. Don’t worry—clear, step-by-step guides will be at your side to help you throughout the process. Get ready for a rewarding experience!\n\n Check out the Outreach Fellow Guide! Apply to be a Fellow!\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "activities/04activity/04activity.html",
    "href": "activities/04activity/04activity.html",
    "title": "Activity 4: Bee Bots",
    "section": "",
    "text": "In this activity, students will create obstacles through conditional actions using the Bee Bot app. Students will pair up and create routes that require block coding to navigate. Block coding is a hands-on way for children to learn the basics of coding. This activity will help students understand coding concepts and the creative ways they can be applied."
  },
  {
    "objectID": "activities/04activity/04activity.html#description",
    "href": "activities/04activity/04activity.html#description",
    "title": "Activity 4: Bee Bots",
    "section": "",
    "text": "In this activity, students will create obstacles through conditional actions using the Bee Bot app. Students will pair up and create routes that require block coding to navigate. Block coding is a hands-on way for children to learn the basics of coding. This activity will help students understand coding concepts and the creative ways they can be applied."
  },
  {
    "objectID": "activities/04activity/04activity.html#grades-time-required",
    "href": "activities/04activity/04activity.html#grades-time-required",
    "title": "Activity 4: Bee Bots",
    "section": "Grades & Time Required",
    "text": "Grades & Time Required\n\nKindergarten: 45 minutes\n2nd - 4th Grade: 30 minutes\n5th & 6th Grade: 25 minutes"
  },
  {
    "objectID": "activities/04activity/04activity.html#materials-required",
    "href": "activities/04activity/04activity.html#materials-required",
    "title": "Activity 4: Bee Bots",
    "section": "Materials Required",
    "text": "Materials Required\n\nBee Bot\nPencil\nPaper\nBee Bot Map (optional)"
  },
  {
    "objectID": "activities/04activity/04activity.html#steps-to-conduct-the-activity",
    "href": "activities/04activity/04activity.html#steps-to-conduct-the-activity",
    "title": "Activity 4: Bee Bots",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Forming Groups\n\nThe activity can be done individually or in groups.\nStart with individual competition to allow all students to practice creating routes independently. This will enhance their understanding of the game.\nAfter individual practice, move to group activities to foster collaboration and teamwork.\n\n\n\nStep 2: Creating Routes and Conditions\n\nEncourage students to explore Bee Bot and the different blocks available.\nExplain that they need to create a route with specific rules. For example, they could create a rule that the Bee Bot cannot move backwards.\nOn a separate sheet of paper, have students write down the rules they have created, specifying what their opponents are not allowed to do.\n\n\n\nStep 3: Completing Routes\n\nOnce students have created their routes and conditions, have them swap with their partners.\nTime the students to see who can create a route first, conducting multiple rounds with different partners.\nEnsure that only group members collaborate, with no assistance from opposing teams.\nIf a student is struggling, provide guidance on the initial steps to help them succeed."
  },
  {
    "objectID": "activities/04activity/04activity.html#reflection",
    "href": "activities/04activity/04activity.html#reflection",
    "title": "Activity 4: Bee Bots",
    "section": "Reflection",
    "text": "Reflection\n\nDiscuss with students how easy or difficult they found the activity.\nAsk them which conditions were the hardest to follow.\nInquire if there were any conditions they wanted to create but couldn’t implement."
  },
  {
    "objectID": "activities/04activity/04activity.html#summary",
    "href": "activities/04activity/04activity.html#summary",
    "title": "Activity 4: Bee Bots",
    "section": "Summary",
    "text": "Summary\nParticipating in this activity will enhance students’ computational thinking. Block coding with Bee Bots helps students understand basic coding principles and improves their programming skills. Encouraging students to create and solve obstacles in block coding will significantly boost their coding proficiency."
  },
  {
    "objectID": "activities/15activity/15activity.html",
    "href": "activities/15activity/15activity.html",
    "title": "Activity 15: Arduino",
    "section": "",
    "text": "Students will be introduced to the basics of electronics using Arduino, an open-source microcontroller. They will learn to control the flow of current through LEDs, programming them to turn on and off at specified intervals. This hands-on experience with Arduino will provide them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "activities/15activity/15activity.html#description",
    "href": "activities/15activity/15activity.html#description",
    "title": "Activity 15: Arduino",
    "section": "",
    "text": "Students will be introduced to the basics of electronics using Arduino, an open-source microcontroller. They will learn to control the flow of current through LEDs, programming them to turn on and off at specified intervals. This hands-on experience with Arduino will provide them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "activities/15activity/15activity.html#materials-required",
    "href": "activities/15activity/15activity.html#materials-required",
    "title": "Activity 15: Arduino",
    "section": "Materials required",
    "text": "Materials required\n\nArduino Instructions: Intro to Basic Electronics with Arduino\nArduino Board and program\nArduino USB connector cable\n3 LEDs\n3 1k ohm resistor\nConnecting Wire"
  },
  {
    "objectID": "activities/15activity/15activity.html#steps-to-conduct-the-activity",
    "href": "activities/15activity/15activity.html#steps-to-conduct-the-activity",
    "title": "Activity 15: Arduino",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nStep 1: Accessesing Arduino Instructions\n\nAcssess insturction in order to run activity Intro to Basic Electronics with Arduino"
  },
  {
    "objectID": "activities/15activity/15activity.html#reflection",
    "href": "activities/15activity/15activity.html#reflection",
    "title": "Activity 15: Arduino",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 50-minute mark to discuss progress and challenges\nAsk students to describe what they observed from trying to get the LEDs to light up\nRelate the activity to everday use of certain electironic that work with simalr electonics like LED lights."
  },
  {
    "objectID": "activities/15activity/15activity.html#learning-outcomes",
    "href": "activities/15activity/15activity.html#learning-outcomes",
    "title": "Activity 15: Arduino",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nIntroducing students to the fundamentals of electronics equips them with a deeper understanding of how we interact with and manipulate electronic devices. By gaining this foundational knowledge, they can comprehend the essential processes and steps required to make electronic components function effectively. This early exposure not only explains the workings of everyday technology but also fosters curiosity and encourages hands-on experimentation."
  },
  {
    "objectID": "activities/07activity/07activity.html",
    "href": "activities/07activity/07activity.html",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "",
    "text": "Children will identify, analyze, and create simple patterns using shapes, colors, or numbers."
  },
  {
    "objectID": "activities/07activity/07activity.html#objectives",
    "href": "activities/07activity/07activity.html#objectives",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "",
    "text": "Children will identify, analyze, and create simple patterns using shapes, colors, or numbers."
  },
  {
    "objectID": "activities/07activity/07activity.html#materials-needed",
    "href": "activities/07activity/07activity.html#materials-needed",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Materials Needed",
    "text": "Materials Needed\n\nPaper and colored pencils/crayons\nPattern blocks or cut-out shapes\nOptional: A whiteboard and markers"
  },
  {
    "objectID": "activities/07activity/07activity.html#instructions",
    "href": "activities/07activity/07activity.html#instructions",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Instructions",
    "text": "Instructions\n\nStep 1: Introduction to Patterns\n\nBegin with a brief discussion about patterns, explaining that patterns are sequences that repeat in a certain order.\nShow examples of simple patterns using shapes and colors:\n\nShapes: ⬛⬛🔴⬛⬛🔴… (Two squares, one circle, repeat)\nColors: 🔵🟢🔵🟢🔵…(Blue, green, repeat)\nNumbers: 1, 2, 1, 2, 1, 2… (Alternating 1 and 2)\n\n\n\n\nStep 2: Identify the Pattern\n\nProvide students with sets of simple sequences and ask them to identify the pattern. Examples:\n\nShapes: 🔺🔺⚫️🔺🔺⚫️…\nColors: 🟡🟡🟠🟡🟡🟠…\nNumbers: 3, 3, 6, 3, 3, 6…\n\n\n\n\nStep 3: Extend the Pattern\n\nOnce students identify the pattern, challenge them to continue the sequence by adding the next few elements.\n\nExample: Sequence: 🔵🔵🟢🔵🔵🟢… (They add 🔵🔵🟢 next)\n\n\n\n\nStep 4: Create Your Own Pattern\n\nInstruct students to create their own simple patterns using shapes, colors, or numbers on paper.\nEncourage them to share their patterns with a partner and see if their partner can identify and extend the pattern.\n\n\n\nStep 5: Pattern Puzzles\n\nCreate “pattern puzzles” where some elements in the sequence are missing, and ask students to fill in the blanks.\n\nExample: Sequence: 🟣, 🟣, 🟤, ___, 🟣, 🟣, 🟤, ___(They fill in with 🟣, 🟣, 🟤)\n\n\n\n\nExtensions\n\nFor students who complete the exercises, introduce them to the coding challenge on Blockly Turtle. This program prompts students to code shapes."
  },
  {
    "objectID": "activities/07activity/07activity.html#reflection",
    "href": "activities/07activity/07activity.html#reflection",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Reflection",
    "text": "Reflection\n\nHave students display their patterns and share them with the class to foster pride in their work and appreciation for the diversity of patterns created.\nAfter completing the Blockly Turtle challenge, discuss with students the challenges they faced and how they solved coding problems."
  },
  {
    "objectID": "activities/07activity/07activity.html#learning-outcomes",
    "href": "activities/07activity/07activity.html#learning-outcomes",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nStudents will develop the ability to recognize and extend patterns.\nStudents will enhance critical thinking and problem-solving skills.\nStudents will learn to create their own patterns and communicate them effectively."
  },
  {
    "objectID": "activities/index.html",
    "href": "activities/index.html",
    "title": "Activities",
    "section": "",
    "text": "Welcome to the page where you can find all the activities that have already been implemented. Use the categories to find activities based on grade and time required.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nActivity 1: Navigating Decisions with If-Else-Elif Statements\n\n\nTeaching students the fundamentals of if-else-elif statements through hands-on activities.\n\n\n\nGrade: 5\n\n\nTime: 1 Hour\n\n\n\n\n\n\n5th Grade\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 2: Binary & Balloons\n\n\nIntroducing students to binary numbers through interactive and fun activities.\n\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n2nd Grade onwards\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 3: Different Ways a Computer Sorts\n\n\nTeaching students about sorting algorithms through hands-on activities.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st Grade onwards\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 4: Bee Bots\n\n\nEngaging students in creating obstacles and routes through block coding with Bee Bots.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten - 6th Grade\n\n\nVaries by grade\n\n\n\n\n\n\n\nActivity 5: Ozobots\n\n\nImproving students computational thinking skills through an conditional activity.\n\n\n\nGrade: Kindergarten\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten\n\n\n30 mintues\n\n\n\n\n\n\n\nActivity 6: Debugging\n\n\nTeaching students to identify and fix bugs in code through hands-on activities.\n\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n4th - 6th Grade\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 7: Pattern Recognition Activity - Pattern Detectives\n\n\nEngaging students in identifying, analyzing, and creating simple patterns using shapes, colors, or numbers.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\n1st Grade onwards\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 8: Designing and Programming Robots\n\n\nEncouraging creativity and critical thinking through robot design and online coding.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarden - 5th grade\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 9: Maze Navigation Activity\n\n\nIntroducing computational thinking through maze navigation and algorithmic planning.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten and beyond (Adaptable Complexity)\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 10: Internet Safety Routes\n\n\nTeaching internet safety through identifying safe and unsafe actions online using Spheros.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\n1st grade onwards\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 11: Minecraft Designer\n\n\nExploring Minecraft through Block Coding on Code.org\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nAll Grades\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 12: Blue-Blocs\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: Varies\n\n\n\n\n\n\n4th, 5th, and 6th grade\n\n\nVaries by grade\n\n\n\n\n\n\n\nActivity 13: Sphero Exploration\n\n\nProviding students with practice using Sphero robots through a fun and engaging competition.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st Grade onwards\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 14: Code with Anna and Elsa\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nAll grades\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 15: Arduino\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\nAll grades\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 16: Protect Your Password\n\n\nLearning the Importance of Strong Passwords\n\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\n3rd Grade onwards\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 17: Facts and Questions\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 45 Minutes\n\n\n\n\n\n\nAll grades\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 18: Play Doh Lights\n\n\nEnhancing Knowledge of Electricity and Inspiring Creativity.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nAll grades\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 19: Paper Pattern Recognition\n\n\nLearn more about pattern recognition by creating your own patterns!\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten, 1st, 2nd, 3rd\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 20: Conditional Color Coding with Blue-Bots\n\n\nComplete the Blue-Bot maps but make sure to follow the color code.\n\n\n\nGrade: Grade: 2\n\n\nGrade: 3\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n2nd, 3rd\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 21: Shapes and A-to-B Movements with Blue-Bots\n\n\nUse the Blue-Bot to create squares and various A-to-B pathways, making sure to test different combinations of movements.\n\n\n\nGrade: Grade: 1\n\n\nGrade: 2\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st, 2nd\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 24: Dash Bots Pathway Challenge and Free Play\n\n\nUse the Dash Bot to create unique pathways, making sure to test various directional movements, sounds, and light changes.\n\n\n\nGrade: Grade: 1\n\n\nGrade: 2\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st, 2nd\n\n\n30 minutes\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n Back to top"
  },
  {
    "objectID": "activities/13activity/activity13.html",
    "href": "activities/13activity/activity13.html",
    "title": "Activity 13: Sphero Exploration",
    "section": "",
    "text": "Students will utilize Sphero robots to create trails with wooden blocks. This activity is designed to provide them with better practice using the devices in preparation for future activities. To maintain engagement and control, a competition involving the Spheros will be organized, as they can be challenging to maneuver initially."
  },
  {
    "objectID": "activities/13activity/activity13.html#description",
    "href": "activities/13activity/activity13.html#description",
    "title": "Activity 13: Sphero Exploration",
    "section": "",
    "text": "Students will utilize Sphero robots to create trails with wooden blocks. This activity is designed to provide them with better practice using the devices in preparation for future activities. To maintain engagement and control, a competition involving the Spheros will be organized, as they can be challenging to maneuver initially."
  },
  {
    "objectID": "activities/13activity/activity13.html#materials-required",
    "href": "activities/13activity/activity13.html#materials-required",
    "title": "Activity 13: Sphero Exploration",
    "section": "Materials Required",
    "text": "Materials Required\n\nSpheros\niPads\nWooden Blocks"
  },
  {
    "objectID": "activities/13activity/activity13.html#steps-to-conduct-the-activity",
    "href": "activities/13activity/activity13.html#steps-to-conduct-the-activity",
    "title": "Activity 13: Sphero Exploration",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Creating Trails\n\nStart by giving students wooden blocks and direct them to create trails they can use for the Spheros.\nAllow this part to last for at least 10 minutes.\n\n\n\nStep 2: Distributing Spheros\n\nSpheros need iPads to work. Open the Sphero app on the iPad, which will start by trying to find a Sphero to connect to.\nOnce connected, distribute the Spheros to the students. If there are not enough for all the students, create pairs.\n\n\n\nStep 3: Racing Spheros\n\nAfter students have used the Spheros on their own or in pairs for 5 minutes, direct them towards making trails that will allow space for two Spheros to race one another to see who will finish first.\nKeep this part of the activity going until there are 3 minutes left."
  },
  {
    "objectID": "activities/13activity/activity13.html#reflection",
    "href": "activities/13activity/activity13.html#reflection",
    "title": "Activity 13: Sphero Exploration",
    "section": "Reflection",
    "text": "Reflection\n\nAfter students have finished cleaning up the wooden blocks, ask them if they found it hard to maneuver the Spheros."
  },
  {
    "objectID": "activities/13activity/activity13.html#summary",
    "href": "activities/13activity/activity13.html#summary",
    "title": "Activity 13: Sphero Exploration",
    "section": "Summary",
    "text": "Summary\nThis activity helps students get a better understanding of the device and exposes them to some areas of computer science."
  },
  {
    "objectID": "activities/02activity/02activity.html",
    "href": "activities/02activity/02activity.html",
    "title": "Activity 2: Binary & Balloons",
    "section": "",
    "text": "This activity is suitable for younger kids as it involves simpler tasks but can also be adjusted to be more challenging. It involves students mixing and matching a set of balloons with binary numbers (0 and 1) on them and decoding these sequences into decimal numbers. Additionally, it introduces students to how different binary sequences can represent different decimal numbers.\nFor students unfamiliar with the powers of 2, a reference sheet will be provided to guide them."
  },
  {
    "objectID": "activities/02activity/02activity.html#description",
    "href": "activities/02activity/02activity.html#description",
    "title": "Activity 2: Binary & Balloons",
    "section": "",
    "text": "This activity is suitable for younger kids as it involves simpler tasks but can also be adjusted to be more challenging. It involves students mixing and matching a set of balloons with binary numbers (0 and 1) on them and decoding these sequences into decimal numbers. Additionally, it introduces students to how different binary sequences can represent different decimal numbers.\nFor students unfamiliar with the powers of 2, a reference sheet will be provided to guide them."
  },
  {
    "objectID": "activities/02activity/02activity.html#materials-required",
    "href": "activities/02activity/02activity.html#materials-required",
    "title": "Activity 2: Binary & Balloons",
    "section": "Materials Required",
    "text": "Materials Required\n\n3-4 Balloons\nMarkers\nA sheet with the powers of 2\nPiece of paper and pens for calculations / Whiteboards and markers"
  },
  {
    "objectID": "activities/02activity/02activity.html#steps-to-conduct-the-activity",
    "href": "activities/02activity/02activity.html#steps-to-conduct-the-activity",
    "title": "Activity 2: Binary & Balloons",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Preparation\n\nInflate 3 balloons and secure them. Blow up one more in case an additional example is needed.\nWrite the binary digits 0 and 1 on the balloons using a permanent marker. Example provided in this folder: .\n\n\n\nStep 2: Implementation\n\nArrange the balloons in a line. You can use string or tape to ensure they stay in place.\nPrepare several different sequences for demonstration and practice (e.g., 000, 010, 011, 100, 110, 111).\nHave the extra balloon ready to be added to the activity so students can experiment with different examples.\n\n\n\nStep 3: Explanation\n\nExplain to the students that each balloon represents a binary digit (bit), and the position of the balloon determines its value in the binary number system.\nExplain that the index of the first balloon is always zero and increases from there.\nExplain the formula for decoding binary into decimal numbers.\nProvide examples of how binary is used in real life.\n\n\n\nStep 4: Implementation\n\nDivide students into different groups and ask them to solve the binary code.\nMix up their balloons with those of another group.\nAfter solving, bring the groups together to compare their answers. If they got the same answer, discuss how they arrived at it."
  },
  {
    "objectID": "activities/02activity/02activity.html#reflection",
    "href": "activities/02activity/02activity.html#reflection",
    "title": "Activity 2: Binary & Balloons",
    "section": "Reflection",
    "text": "Reflection\nAsk the following questions to stimulate discussion:\n\nWhat was the most challenging part of the activity?\nDid you find it easier to understand binary numbers after the activity? Why or why not?\nCan you think of other ways binary numbers might be used in the real world?"
  },
  {
    "objectID": "activities/02activity/02activity.html#learning-outcomes",
    "href": "activities/02activity/02activity.html#learning-outcomes",
    "title": "Activity 2: Binary & Balloons",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should:\n\nHave a basic understanding of binary numbers and their positional value.\nBe able to convert simple binary numbers to decimal numbers.\nDevelop problem-solving and teamwork skills through group activities."
  },
  {
    "objectID": "activities/09activity/09activity.html",
    "href": "activities/09activity/09activity.html",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "",
    "text": "This activity introduces students to computational thinking by guiding a “robot” through a maze using basic commands. It helps students develop skills in problem-solving, pattern recognition, and algorithmic thinking."
  },
  {
    "objectID": "activities/09activity/09activity.html#description",
    "href": "activities/09activity/09activity.html#description",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "",
    "text": "This activity introduces students to computational thinking by guiding a “robot” through a maze using basic commands. It helps students develop skills in problem-solving, pattern recognition, and algorithmic thinking."
  },
  {
    "objectID": "activities/09activity/09activity.html#materials-required",
    "href": "activities/09activity/09activity.html#materials-required",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "Materials Required",
    "text": "Materials Required\n\nA printed or drawn maze on paper\nA small car figure or token\nA set of command cards (e.g., move forward, turn left, turn right)"
  },
  {
    "objectID": "activities/09activity/09activity.html#activity-steps",
    "href": "activities/09activity/09activity.html#activity-steps",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "Activity Steps",
    "text": "Activity Steps\n\nIntroduction\n\nExplain the concept of computational thinking, which involves breaking down problems into manageable steps, recognizing patterns, and creating algorithms to solve problems.\nIntroduce the maze activity and its goal: to navigate the robot from the start to the finish.\n\n\n\nStep 1: Setting Up\n\nProvide each student or group with a maze, a robot token, and command cards.\nClearly show the starting position and the goal on the maze.\n\n\n\nStep 2: Planning the Route\n\nAsk students to analyze the maze and plan a route for the robot.\nEncourage them to use the command cards to create a sequence of instructions that will guide the robot through the maze.\nHave students lay out the sequence of commands in order.\n\n\n\nStep 3: Executing the Plan\n\nStudents place their robot token at the starting position.\nThey follow their planned sequence of commands to navigate the robot through the maze.\nIf the robot encounters an obstacle or reaches a dead end, students should revise their plan and try again.\n\n\n\nExtension: Blockly Maze Game\n\nOnce students successfully complete the maze activity, they can advance to a more challenging and interactive coding game using an iPad, such as the Blockly Maze Game."
  },
  {
    "objectID": "activities/09activity/09activity.html#reflection",
    "href": "activities/09activity/09activity.html#reflection",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "Reflection",
    "text": "Reflection\n\nAfter completing the maze activity, gather students into a group and discuss:\n\nWhat challenges did you face?\nHow did you solve any problems that arose?\nWhat strategies helped you find the correct path?\nDiscuss how this activity relates to real-world computational thinking and problem-solving."
  },
  {
    "objectID": "activities/09activity/09activity.html#learning-outcomes",
    "href": "activities/09activity/09activity.html#learning-outcomes",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nDevelop computational thinking skills through planning and executing a sequence of steps.\nEnhance problem-solving abilities by identifying patterns and applying appropriate strategies.\n\n\nPicture of the Map\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/11activity/activity11.html",
    "href": "activities/11activity/activity11.html",
    "title": "Activity 11: Minecraft Designer",
    "section": "",
    "text": "Students will use the Code.org platform to play the Minecraft block coding game. This activity introduces various uses of block coding, making it easier for students to grasp coding concepts through interactive gameplay."
  },
  {
    "objectID": "activities/11activity/activity11.html#description",
    "href": "activities/11activity/activity11.html#description",
    "title": "Activity 11: Minecraft Designer",
    "section": "",
    "text": "Students will use the Code.org platform to play the Minecraft block coding game. This activity introduces various uses of block coding, making it easier for students to grasp coding concepts through interactive gameplay."
  },
  {
    "objectID": "activities/11activity/activity11.html#materials-required",
    "href": "activities/11activity/activity11.html#materials-required",
    "title": "Activity 11: Minecraft Designer",
    "section": "Materials Required",
    "text": "Materials Required\n\niPad\nCode.org platform: Minecraft Designer"
  },
  {
    "objectID": "activities/11activity/activity11.html#steps-to-conduct-the-activity",
    "href": "activities/11activity/activity11.html#steps-to-conduct-the-activity",
    "title": "Activity 11: Minecraft Designer",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Setup and Introduction\n\nOpen the Code.org platform on iPads.\nShow students the introductory video provided before starting the activity.\n\n\n\nStep 2: Engaging with Minecraft Blocks\n\nGuide students through the initial stages of the Minecraft block coding game.\nDisable subsequent instructional videos to encourage independent exploration."
  },
  {
    "objectID": "activities/11activity/activity11.html#reflection",
    "href": "activities/11activity/activity11.html#reflection",
    "title": "Activity 11: Minecraft Designer",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 30-minute mark to discuss progress and challenges.\nAsk students to describe what they observed Minecraft mobs doing with the block codes.\nRelate the activity to game development, emphasizing how coding principles translate into interactive gameplay experiences."
  },
  {
    "objectID": "activities/11activity/activity11.html#learning-outcomes",
    "href": "activities/11activity/activity11.html#learning-outcomes",
    "title": "Activity 11: Minecraft Designer",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nThis activity demonstrates the foundational steps in creating video games using Minecraft block coding. It explores fundamental computer science concepts, such as the use of loops in game mechanics. Students will gain insights into coding’s role in everyday activities like gaming, fostering a deeper understanding of computational thinking."
  },
  {
    "objectID": "activities/16activity/16activity.html",
    "href": "activities/16activity/16activity.html",
    "title": "Activity 16: Protect Your Password",
    "section": "",
    "text": "In this activity, students will learn about the importance of creating strong passwords to protect their online accounts. Through interactive games and discussions, students will understand the concept of a strong password, learn why weak passwords can be easily guessed, and practice creating secure passwords using a mix of characters. This hands-on activity helps introduce cybersecurity concepts and promotes safe online behavior."
  },
  {
    "objectID": "activities/16activity/16activity.html#description",
    "href": "activities/16activity/16activity.html#description",
    "title": "Activity 16: Protect Your Password",
    "section": "",
    "text": "In this activity, students will learn about the importance of creating strong passwords to protect their online accounts. Through interactive games and discussions, students will understand the concept of a strong password, learn why weak passwords can be easily guessed, and practice creating secure passwords using a mix of characters. This hands-on activity helps introduce cybersecurity concepts and promotes safe online behavior."
  },
  {
    "objectID": "activities/16activity/16activity.html#materials-required",
    "href": "activities/16activity/16activity.html#materials-required",
    "title": "Activity 16: Protect Your Password",
    "section": "Materials Required",
    "text": "Materials Required\n\nWhiteboard or digital presentation for demonstrating concepts\nPaper and pencils for password creation practice\nPrintouts or projector for displaying examples of strong and weak passwords\nOnline password strength meter"
  },
  {
    "objectID": "activities/16activity/16activity.html#steps-to-conduct-the-activity",
    "href": "activities/16activity/16activity.html#steps-to-conduct-the-activity",
    "title": "Activity 16: Protect Your Password",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Introduction to Passwords\n\nStart by asking students what passwords are and why they are used.\nExplain that passwords help protect personal information from being accessed by others online.\nDiscuss the importance of using passwords that are hard to guess, and introduce the term “strong password.”\n\n\n\nStep 2: What Makes a Strong Password?\n\nWrite examples of weak passwords on the board (e.g., 123456, password, abc123) and explain why these are easy to guess.\nDiscuss what makes a strong password, including:\n\nA mix of uppercase and lowercase letters\nNumbers\nSymbols (e.g., @, #, $, etc.)\nAvoiding common words or personal information (like names and birthdays)\n\n\n\n\nStep 3: Password Creation Game\n\nDivide the students into small groups.\nChallenge each group to come up with a easy password and a strong password following the rules discussed.\nGive them a reason to come up with this idea (Like a treasure password).\nOnce groups have created their passwords, have them test their passwords using an online password strength meter\nThen have a game play out where different group guess each of their passwords to see if it is easy to guess the passwords.\n\n\n\nStep 4: Password Protection Tips\n\nDiscuss how to keep passwords safe:\n\nDon’t share passwords with others.\nUse different passwords for different websites.\nChange passwords regularly.\nUse a password manager.\n\n\n\n\nStep 5: Reflection and Wrap-Up\n\nAsk students why it’s important to use strong passwords and how they can protect themselves online.\nLet them share their own tips for staying safe online."
  },
  {
    "objectID": "activities/16activity/16activity.html#learning-outcomes",
    "href": "activities/16activity/16activity.html#learning-outcomes",
    "title": "Activity 16: Protect Your Password",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should:\n\nUnderstand the importance of strong passwords in cybersecurity.\nLearn how to create secure passwords using a combination of letters, numbers, and symbols.\nRecognize the risks of using weak passwords and sharing them with others.\nGain confidence in protecting their personal information online."
  },
  {
    "objectID": "activities/17activity/17activity.html",
    "href": "activities/17activity/17activity.html",
    "title": "Activity 17: Facts and Questions",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of prompt engineering. Prompt engineering involves creating well-structured inputs, or prompts, that effectively guide generative AI models to produce desired outputs. Students will be presented with specific facts on various topics and tasked with matching them to corresponding questions. These questions will range from vague, incomplete inquiries to more precise, well-defined ones that align closely with the provided facts. Following this, students will create their own facts and formulate both vague and specific questions based on those facts. Other students will then review these questions and determine whether they are vague or specific. This exercise encourages critical thinking and reinforces the importance of clarity in question formulation."
  },
  {
    "objectID": "activities/17activity/17activity.html#description",
    "href": "activities/17activity/17activity.html#description",
    "title": "Activity 17: Facts and Questions",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of prompt engineering. Prompt engineering involves creating well-structured inputs, or prompts, that effectively guide generative AI models to produce desired outputs. Students will be presented with specific facts on various topics and tasked with matching them to corresponding questions. These questions will range from vague, incomplete inquiries to more precise, well-defined ones that align closely with the provided facts. Following this, students will create their own facts and formulate both vague and specific questions based on those facts. Other students will then review these questions and determine whether they are vague or specific. This exercise encourages critical thinking and reinforces the importance of clarity in question formulation."
  },
  {
    "objectID": "activities/17activity/17activity.html#materials-required",
    "href": "activities/17activity/17activity.html#materials-required",
    "title": "Activity 17: Facts and Questions",
    "section": "Materials required",
    "text": "Materials required\n\nPROMPT ENGINNERING SHEET\nPencil"
  },
  {
    "objectID": "activities/17activity/17activity.html#steps-to-conduct-the-activity",
    "href": "activities/17activity/17activity.html#steps-to-conduct-the-activity",
    "title": "Activity 17: Facts and Questions",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nStudents will first complete the prompt enginnering sheet\nDirect the students to create 2 facts based on one a topic of thier choosing, then prompt then to create two question for each fact one being vauge the other being specific\nPair students in groups of two to switch sheets to ideinfity which question are vauge and specific.\nKeep switching groups until students have rotated at least three times."
  },
  {
    "objectID": "activities/17activity/17activity.html#reflection",
    "href": "activities/17activity/17activity.html#reflection",
    "title": "Activity 17: Facts and Questions",
    "section": "Reflection",
    "text": "Reflection\n\nAsk students what part of the actvity they found the hardest. Then ask if they found identifying question or creating them to be harder."
  },
  {
    "objectID": "activities/17activity/17activity.html#learning-outcomes",
    "href": "activities/17activity/17activity.html#learning-outcomes",
    "title": "Activity 17: Facts and Questions",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nAs advancements in AI technology continue to grow, prompt engineering has emerged as a critical skill, with increasing demand in the job market. Introducing students to these concepts at an early age will enhance their understanding of how prompt engineering works and how it connects to their existing curriculum, fostering essential skills for the future of technology and innovation. Requiring students to formulate more specific and detailed questions will enhance their ability to identify and construct clear, precise prompts, an essential skill in prompt engineering. This practice not only deepens their understanding of the subject matter but also strengthens their critical thinking and problem-solving abilities, which are vital for success in the evolving field of AI and technology."
  },
  {
    "objectID": "about/index.html#pennsylvania-education-framework",
    "href": "about/index.html#pennsylvania-education-framework",
    "title": "About",
    "section": "Pennsylvania Education Framework",
    "text": "Pennsylvania Education Framework\n\nSTEM in Pennsylvania\nSTEM education in Pennsylvania emphasizes literacy for all students, reflection, iteration, community integration, and partnerships between educators, families, and institutions.\n\n\nComputer Science Literacy\nThe current Pennsylvania framework prioritizes grades 7-12, but we aim to bridge this gap by introducing computer science concepts to younger students, aligned with state standards.\n\nSources\n\nPA Department of Education STEM Guidelines\nThe Framework for Computer Science 7-12 Program Guidelines"
  },
  {
    "objectID": "activities/19activity/index.html",
    "href": "activities/19activity/index.html",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "",
    "text": "In this fun and interactive activity, students will explore pattern recognition by first learning how to identify different patterns using shapes. After practicing identifying patterns, students will play a creative game where they can mix and match shapes to create their own unique patterns and challenge their peers to figure out how their patterns work!"
  },
  {
    "objectID": "activities/18activity/18activity.html",
    "href": "activities/18activity/18activity.html",
    "title": "Activity 18: Play Doh Lights",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of electronics by making a simple circuit. The Play Doh conducts electricity and can be used to turn the LEDs on."
  },
  {
    "objectID": "activities/18activity/18activity.html#description",
    "href": "activities/18activity/18activity.html#description",
    "title": "Activity 18: Play Doh Lights",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of electronics by making a simple circuit. The Play Doh conducts electricity and can be used to turn the LEDs on."
  },
  {
    "objectID": "activities/18activity/18activity.html#materials-required",
    "href": "activities/18activity/18activity.html#materials-required",
    "title": "Activity 18: Play Doh Lights",
    "section": "Materials required",
    "text": "Materials required\n\nPlay Doh in a variety of colors\nLEDs in a variety of colors\n5V Batteries with 5V Battery Holders (Alternative option is an Arduino with a laptop)\nNon-conductive Clay (optional)\nPrint out this Worksheet"
  },
  {
    "objectID": "activities/18activity/18activity.html#steps-to-conduct-the-activity",
    "href": "activities/18activity/18activity.html#steps-to-conduct-the-activity",
    "title": "Activity 18: Play Doh Lights",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nShow this video to the class on playdoh circuits YouTube Link\nSet up the station by organizing the materials\nExplain to the students that batteries have both a positive (red) and negative (black) side and in order to turn anything on a circuit needs to connect these two sides using the lights and the play doh. A circuit is like a trail and the negative needs to be able to walk back to the battery through the postive.\nDemonstrate the creation of a playdoh light system. Start by creating two blobs of playdough connect the red end of the battery to one and the black end to the other blob. Explain that the light has a long leg and a short leg. The short leg always has to be on the negative (black) side and the long leg always has to be towards the postive (red) side. Then connect the light to the blobs. Explain that the blobs can not touch out the electricity will skip past the light and not turn it on (this is called a short circuit). After connecting the light correctly the light should turn on. Explain if the light does not turn on when they try the first thing to test is to switch the direction of the legs (this is the most common mistake).\n\n\n\n\nLED_pins\n\n\n\n\n\nsingle_circuit\n\n\n\nShow the students it is possible to connect two lights by creating 3 blobs of playdoh and the outer blobs should be the postivie and negative ends connected to the play dough. Then use a light to connect the blobs with the long leg always facing the postive side. This is a series circuit.\n\n\n\n\nseries_circuit\n\n\n\nShow the students it is possible to connect more than one light in the same section. Connect a second LED in the same direction as the one next to it. This is called a parallel circuit.\n\n\n\n\nparellel_circuit\n\n\n\nNon-conductive clay can be used to block current and connect the creations. Try not to mix the play doh with the clay.\nNow give each of the students their materials to make their own. Here are some example challengegs to give them to try\n\nCan you follow the path that electricity takes to light up starting with the black wire?\nCan you get all the different colors to light up?\nCan you get more than 3 blobs of playdoh connected in a circuit?\n\nAn alternative method of this activity is using an arduino. Set up an Arduino with the following blink code using the Arduino IDE changing the pin 13 to whatever pin/s you plan to use. The Arduino IDE can be used on any laptop. An Arduino can run more than one playdoh circuit at a time by adding more pins. You can also try to add the pins to light up at different times to create a christmas light display. Make sure the black wire is connected to the GND on the Ardunio and the red wire is connected to the digital pin number.\n\n\n\n\narduino_blink\n\n\n\n\n\narduino_pins\n\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(13, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  digitalWrite(13, LOW);\n  delay(1000);\n  digitalWrite(13, HIGH); \n}"
  },
  {
    "objectID": "activities/18activity/18activity.html#reflection",
    "href": "activities/18activity/18activity.html#reflection",
    "title": "Activity 18: Play Doh Lights",
    "section": "Reflection",
    "text": "Reflection\n\nAsk students what part of the actvity they found the hardest.\nAsk them what their favorite part of the activity was."
  },
  {
    "objectID": "activities/18activity/18activity.html#learning-outcomes",
    "href": "activities/18activity/18activity.html#learning-outcomes",
    "title": "Activity 18: Play Doh Lights",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nThis activity is a foundation for learning simple circuits. Understanding how electricity works is vital to working with electronic equipment and making electronic circuits. This activity requires creativity to be able to make different versions of the circuit while also understanding logic and electrical component relationships."
  },
  {
    "objectID": "activities/19activity/index.html#description",
    "href": "activities/19activity/index.html#description",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "",
    "text": "In this fun and interactive activity, students will explore pattern recognition by first learning how to identify different patterns using shapes. After practicing identifying patterns, students will play a creative game where they can mix and match shapes to create their own unique patterns and challenge their peers to figure out how their patterns work!"
  },
  {
    "objectID": "activities/19activity/index.html#time-required",
    "href": "activities/19activity/index.html#time-required",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "activities/19activity/index.html#materials-required",
    "href": "activities/19activity/index.html#materials-required",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Materials Required",
    "text": "Materials Required\n\nShape cutouts (linked below!)\n\n\nStep 1: Learning the Basics of Patterns\n\nBegin by introducing the students to different types of patterns, such as alternating shapes (e.g., circle, square, circle, square), repeating sequences (e.g., red, blue, red, blue), or growing patterns (e.g., one, two, three, four).\nUse a large whiteboard or paper to draw out simple examples of each type of pattern, explaining how each pattern works and how to identify what comes next.\n\n\n\nStep 2: Practice Identifying Patterns\n\nHand out shape cutouts to the students and ask them to identify the next shape in a given sequence.\nFor example, if the pattern is circle, square, circle, square, ask them to identify what shape comes next. You can also introduce variations such as color patterns or number patterns.\nGive the students a few different sequences to practice with, reinforcing how to spot and predict the next part of a pattern.\n\n\n\nStep 3: Creating Their Own Patterns\n\nEncourage students to mix and match the shape cutouts to create their own patterns on the paper or whiteboard.\nAs they work, ask them to think about how their patterns work—whether they repeat, alternate, or grow.\nAllow the students to share their patterns with the class and ask their peers to guess how the patterns work.\n\n\n\nStep 4: Peer Challenge Game\n\nOnce each student has created their pattern, let them challenge their peers to identify the pattern they made.\nStudents will take turns presenting their patterns to the group, while the rest of the class tries to figure out how the pattern works. This encourages teamwork and sharpens their pattern recognition skills."
  },
  {
    "objectID": "activities/19activity/index.html#reflection",
    "href": "activities/19activity/index.html#reflection",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask them about the patterns they created. Discuss the following questions:\n\nHow did you come up with your pattern?\nWas it easy or hard to guess how your peer’s pattern worked? Why?\nWhat kinds of patterns did you like creating the most?"
  },
  {
    "objectID": "activities/19activity/index.html#summary",
    "href": "activities/19activity/index.html#summary",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Summary",
    "text": "Summary\n\nBy creating and identifying patterns, students will strengthen their logical thinking and problem-solving skills. This activity fosters creativity while also helping young learners develop an understanding of sequences, repetition, and structure—key skills in both mathematics and everyday life."
  },
  {
    "objectID": "activities/19activity/index.html#link-to-the-sheets-of-patterns.",
    "href": "activities/19activity/index.html#link-to-the-sheets-of-patterns.",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Link to the sheets of patterns.",
    "text": "Link to the sheets of patterns.\nSave the sheets of patterns that can be used for the session!"
  },
  {
    "objectID": "activities/21activity/index.html",
    "href": "activities/21activity/index.html",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "",
    "text": "In this activity, students will use Blue-Bots to create squares made up of forward movements and left or right turns. After students progress through the sqaure challenge, they will attempt more complex challenges of driving the BlueBot from one point to another starting from various points. This approach fosters critical thinking and problem-solving skills while enhancing their understanding of the relationship between input and output in programming."
  },
  {
    "objectID": "activities/21activity/index.html#description",
    "href": "activities/21activity/index.html#description",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "",
    "text": "In this activity, students will use Blue-Bots to create squares made up of forward movements and left or right turns. After students progress through the sqaure challenge, they will attempt more complex challenges of driving the BlueBot from one point to another starting from various points. This approach fosters critical thinking and problem-solving skills while enhancing their understanding of the relationship between input and output in programming."
  },
  {
    "objectID": "activities/21activity/index.html#time-required",
    "href": "activities/21activity/index.html#time-required",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "activities/21activity/index.html#materials-required",
    "href": "activities/21activity/index.html#materials-required",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "Materials Required",
    "text": "Materials Required\n\nBlue-Bots\nBlue-Bot App: Blue’s Bloc (IPAD)\nBlue-Bots Map\nSquare Challenge Paper Instructions\n\n\nStep 1: Setting Up a Grid Map\n\nEach map should have at least two students, an ipad, a Blue Bot, and two copies of the paper instructions.\nEnsure there is one Blue-Bot for every Blue Bots map. If there are more students than available maps or Blue-Bots, pairing them is the best option.\n\nWhen pairing students, ensure they take equal turns using the device.\n\nUse the ipad to generate random A-to-B pathways for the students to drive the Blue Bot through and place the bot on the starting place shown on the app.\n\n\n\nStep 2: Explaining the Conditional Sheet\n\nStudents should be familiar with the Blue-Bots application, which uses code blocks or buttons to control movement. To refresh their awareness and with the help of the instruction paper, have them attempt to move the Blue Bot in two square rotations. Make one with only forward and left movements, and one with only forward and right movements.\nOnce the sqaure challenge has been completed, set up the map to resemble the A-to-B generated by the ipad. Have the students use the ipad directions to traverse the bot using different direction cobinations.\n\n\n\nStep 3: Completing the Map\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student finishes their pathway, have them reposition the Blue Bot as designated by the ipad’s new pathway.\nAfter meeting their marked goals twice, allow them to modify the A-to-B pathways and provide guidance if their courses are not conditionally possible.\nOnce modifying their courses, ask them to keep track of how many times they meet their goal."
  },
  {
    "objectID": "activities/21activity/index.html#reflection",
    "href": "activities/21activity/index.html#reflection",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask how many of them were able to create their squares and where, if applicable, they had any troubles. Additionally, for those who kept count, ask how many times they were able to complete their pathways.\n\nWhat directional combinations were tricky and why?\nWere there any pathways you found to be easy?\nHow many times were you able to finish your A-to-B pathways?"
  },
  {
    "objectID": "activities/21activity/index.html#summary",
    "href": "activities/21activity/index.html#summary",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "Summary",
    "text": "Summary\n\nBy programming Blue-Bots to navigate maps with specific constraints, students develop an understanding of how conditions affect movement and decision-making. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different coding sequences."
  },
  {
    "objectID": "activities/20activity/index.html",
    "href": "activities/20activity/index.html",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "",
    "text": "In this activity, students will use Blue-Bots to navigate maps filled with conditional statements that require them to adhere to specific constraints. Each student will receive a color-coded reference sheet outlining the conditions that must be followed when standing on a particular color. As students progress through the obstacles, they will gradually encounter more complex challenges incorporating additional conditional statements. This structured approach fosters critical thinking and problem-solving skills while enhancing their understanding of conditional logic in programming."
  },
  {
    "objectID": "activities/20activity/index.html#description",
    "href": "activities/20activity/index.html#description",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "",
    "text": "In this activity, students will use Blue-Bots to navigate maps filled with conditional statements that require them to adhere to specific constraints. Each student will receive a color-coded reference sheet outlining the conditions that must be followed when standing on a particular color. As students progress through the obstacles, they will gradually encounter more complex challenges incorporating additional conditional statements. This structured approach fosters critical thinking and problem-solving skills while enhancing their understanding of conditional logic in programming."
  },
  {
    "objectID": "activities/20activity/index.html#time-required",
    "href": "activities/20activity/index.html#time-required",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "activities/20activity/index.html#materials-required",
    "href": "activities/20activity/index.html#materials-required",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "Materials Required",
    "text": "Materials Required\n\nBlue-Bots\nBlue-Bot App: Blue’s Bloc (IPAD)\nBlue-Bots Map\nConditional Color Sheet () Condtional Color Sheet\nColored Flashcards\n\n\nStep 1: Setting Up a Conditional Map\n\nEach map should have at least two students, with each assigned three columns for their obstacle course. A fifth colored flashcard should mark the end goal in the top row.\nEnsure there is one Blue-Bot for every three columns. If there are more students than available maps or Blue-Bots, pairing them is the best option.\n\nWhen pairing students, ensure they take equal turns using the device.\n\nDesign the course using flashcards so that students encounter at least five conditions regardless of their chosen path to the goal.\n\n\n\nStep 2: Explaining the Conditional Sheet\n\nStudents should be familiar with the Blue-Bots application, which uses code blocks to control movement. If unfamiliar, they may complete up to four condition-free obstacles before progressing.\nIntroduce the color-coded sheet, which specifies conditions requiring either the use or restriction of certain code blocks.\nSince some conditions involve turning at specific angles, ensure students understand the difference between 45-degree and 90-degree turns.\nClearly state each color used and the required action when landing on it.\n\n\n\nStep 3: Completing the Map\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student achieves their goal, have them reposition the marked goal within the top row of their three columns.\nAfter meeting their marked goals twice, allow them to modify the flashcards and provide guidance if their courses are not conditionally possible.\nOnce modifying their courses, ask them to keep track of how many times they meet their goal."
  },
  {
    "objectID": "activities/20activity/index.html#reflection",
    "href": "activities/20activity/index.html#reflection",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask them which conditional color they had the hardest time passing and why. Additionally, for those who kept count, ask how many times they were able to complete their obstacles.\n\nWhat color did you find the hardest to pass and why?\nWere there any colors you found too easy to pass by?\nHow many times were you able to finish your obstacle courses?"
  },
  {
    "objectID": "activities/20activity/index.html#summary",
    "href": "activities/20activity/index.html#summary",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "Summary",
    "text": "Summary\n\nBy programming Blue-Bots to navigate maps with specific constraints, students develop an understanding of how conditions affect movement and decision-making. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different coding sequences."
  },
  {
    "objectID": "activities/19activity/index.html#important-note",
    "href": "activities/19activity/index.html#important-note",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Important Note",
    "text": "Important Note\nThis activity is similar to Activity 7. While both activities focus on identifying, creating, and extending patterns, Activity 7 is more comprehensive, incorporating pattern analysis, puzzle solving, and a coding extension using Blockly Turtle. On the other hand, Activity 19 offers a shorter, more interactive experience, where students create patterns and engage in a fun game of guessing each other’s patterns, making it more suitable for younger students."
  },
  {
    "objectID": "activities/24activity/index.html",
    "href": "activities/24activity/index.html",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "",
    "text": "Instructions given on how to use the app to control the dash bots. Have the students create a path on a whiteboard and use the app to move the Dash bot to said path. Free play for rest of time."
  },
  {
    "objectID": "activities/24activity/index.html#description",
    "href": "activities/24activity/index.html#description",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Description",
    "text": "Description\nIn this activity, students will use Dash Bots to create various paths made up of different movements, sounds, and light changes. Students will create a plan for their Dash on a whiteboard, and then take turns driving the Dash through their created path. After students progress through the unique pathways challenge, they will be free to attempt more complex challenges or experiment with free play. This approach fosters a natural creativity the students may have, and will allow them to learn more about the Dash’s abilities through firsthand experience."
  },
  {
    "objectID": "activities/24activity/index.html#time-required",
    "href": "activities/24activity/index.html#time-required",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "activities/24activity/index.html#materials-required",
    "href": "activities/24activity/index.html#materials-required",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Materials Required",
    "text": "Materials Required\n\nDash Bots\nDash Bot App: Wonder (IPAD)\nWhiteboard\nDry Erase Marker\n\n\nStep 1: Distribution of Materials\n\nStudents will be split into groups of two. Each group will be given an IPAD, a Dash bot, a dry erase marker, and a whiteboard.\nEnsure there is one Dash bot for every group of students. If there are more students than available Dash bots or IPADS, increasing the number of students per group is the best option.\n\nWhen pairing students, ensure they take equal turns using the device.\n\n\n\n\nStep 2: Making the Pathway\n\nStudents should be familiar with the Dash bot application, which uses buttons to control movement. To refresh their awareness and to help with the lesson, have them attempt to mess the Dash Bot for 2 minutes. Now that they are refreshed, have the students use their whiteboard materials to create a pathway utilizing the different aspects of the Dash bot.\nOnce the pathway has been created, have the students use the ipad to traverse the bot through the pathway they made. Make sure both students get a turn to try.\n\n\n\nStep 3: Follow-up Challenge or Free Play\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student finishes their pathway, have them reposition the Blue Bot as designated by the ipad’s new pathway.\nAfter meeting their marked goals, allow them the chpice to create another pathway or engage in free play with te Dash bot.\n\nIf partaking in another path, ask them to keep track of how many times they meet their goal."
  },
  {
    "objectID": "activities/24activity/index.html#reflection",
    "href": "activities/24activity/index.html#reflection",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask how many of them were able to complete their pathways and, if applicable, they had any troubles. Additionally, for those who kept count, ask how many times they were able to complete their pathways.\n\nWhat directional combinations were tricky and why?\nWere there any pathways you found to be easy?\nHow many times were you able to finish your pathways?"
  },
  {
    "objectID": "activities/24activity/index.html#summary",
    "href": "activities/24activity/index.html#summary",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Summary",
    "text": "Summary\n\nBy programming Dash bots to navigate pathways with various movement, audio, and visual cues, students develop an understanding of how different condition combinations affect the final result of a program. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different sequence combinations."
  }
]