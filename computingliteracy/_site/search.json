[
  {
<<<<<<< HEAD
    "objectID": "activities/01activity/01activity.html",
    "href": "activities/01activity/01activity.html",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "",
    "text": "In this activity, students will learn the fundamentals of if-else-if else (elif) statements through a hands-on lesson involving a model car and a programmable robot. Students will explore decision-making using block code processes by programming the robot to navigate a multi-way road with a barricade, simulating real-life scenarios where alternate routes must be taken when the primary route is blocked."
  },
  {
    "objectID": "activities/01activity/01activity.html#description",
    "href": "activities/01activity/01activity.html#description",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "",
    "text": "In this activity, students will learn the fundamentals of if-else-if else (elif) statements through a hands-on lesson involving a model car and a programmable robot. Students will explore decision-making using block code processes by programming the robot to navigate a multi-way road with a barricade, simulating real-life scenarios where alternate routes must be taken when the primary route is blocked."
  },
  {
    "objectID": "activities/01activity/01activity.html#materials-required",
    "href": "activities/01activity/01activity.html#materials-required",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Materials Required",
    "text": "Materials Required\n\nModel car\nTwo-/three-way road setup. Picture of demo map is shown below.\nBarricade (mini yellow cones)\nProgrammable & Drivable Robot\nLaptop or IPAD configured for the robot"
  },
  {
    "objectID": "activities/01activity/01activity.html#steps-to-conduct-the-activity",
    "href": "activities/01activity/01activity.html#steps-to-conduct-the-activity",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nSplit students into groups of two. Have them spread out throughout the room, ensuring each group has room to run the activity.\n\nEach group should recieve one model car, one programmable robot, one road setup, some barricades, and one laptop or IPAD.\nHave the students set up the barricades at different spots in the road setup.\nDepending on previous experience, students can work with pre-made or self-designed paths.\n\n\n\nDificulty Breakdown\n\nBeginner\n\nUse simple examples to illustrate the concept of if-else statements, such as deciding whether to bring an umbrella based on whether it is raining.\nModel an example barricade situation using the model car and map.\nUse a guided road setup for the robot to use.\nLimit the number of barricades on the map to 1.\n🔍 Focus Skills: real-life simulation, block coding basics, problem-solving\n\n\n\nIntermediate\n\nUse simple examples to illustrate the concept of if-else statements, such as deciding whether to bring an umbrella based on whether it is raining.\nModel an example barricade situation using the model car and map.\nUse a guided road setup for the robot to use.\nStart with one barricade. Once students have grasped the concept with one barricade, increase to two and ask the students what they would do in the new situation.\n🔍 Focus Skills: real-life simulation, problem-solving, conditional programming"
  },
  {
    "objectID": "activities/01activity/01activity.html#reflection",
    "href": "activities/01activity/01activity.html#reflection",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Reflection",
    "text": "Reflection\n\nBring the groups together to discuss their experiences. Ask each group to share their challenges and solutions."
  },
  {
    "objectID": "activities/01activity/01activity.html#learning-outcomes",
    "href": "activities/01activity/01activity.html#learning-outcomes",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nComprehend the basic structure and function of if-else-elif statements in programming.\nUse conditional statements to create decision-making processes in block coding.\nSimulate real-life problem-solving by programming a robot to navigate alternate routes when the primary path is blocked.\nEnhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.\nTest their block code in a practical setup and debug any issues that arise to ensure the robot navigates correctly."
  },
  {
    "objectID": "activities/01activity/01activity.html#picture-of-the-map",
    "href": "activities/01activity/01activity.html#picture-of-the-map",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Picture of the Map",
    "text": "Picture of the Map\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/08activity/08activity.html",
    "href": "activities/08activity/08activity.html",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "",
    "text": "This activity aims to encourage students to reflect on their experiences with robots, foster creativity through drawing, and develop critical thinking skills through an engaging online coding exercise."
  },
  {
    "objectID": "activities/08activity/08activity.html#objective",
    "href": "activities/08activity/08activity.html#objective",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "",
    "text": "This activity aims to encourage students to reflect on their experiences with robots, foster creativity through drawing, and develop critical thinking skills through an engaging online coding exercise."
  },
  {
    "objectID": "activities/08activity/08activity.html#materials-needed",
    "href": "activities/08activity/08activity.html#materials-needed",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Materials Needed",
    "text": "Materials Needed\n\nPaper and pencils for drawing\nComputers or tablets with internet access for the online activity"
  },
  {
    "objectID": "activities/08activity/08activity.html#instructions",
    "href": "activities/08activity/08activity.html#instructions",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Instructions",
    "text": "Instructions\n\nStep 1: Reflection and Observation\n\nProvide each student with a piece of paper.\nAsk students to reflect on their experiences with robots, especially what they observed during their time at the camp. This includes features like distance sensors, speakers, and cameras.\nEncourage them to list as many features and details as they can remember.\n\n\n\nStep 2: Creative Drawing\n\nBased on their reflections, instruct students to draw their own robot.\nThis drawing session allows students to express their creativity and apply what they have learned about the various parts and functions of robots.\n\n\n\nStep 3: Online Coding Activity - RodoCode\n\nAfter the drawing session, introduce students to the online activity called RodoCode on Code.org.\nRodoCode is an interactive coding exercise where students use blocks to program a robot to reach its destination.\nEmphasize that this activity will enhance critical thinking and problem-solving skills while reinforcing their understanding of robotics concepts."
  },
  {
    "objectID": "activities/08activity/08activity.html#summary",
    "href": "activities/08activity/08activity.html#summary",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Summary",
    "text": "Summary\nThis activity engages students in reflecting on their robot experiences, expressing creativity through drawing, and developing coding skills through an online exercise. It combines observation, artistic expression, and computational thinking in a fun and educational manner."
  },
  {
    "objectID": "activities/10activity/activity10.html",
    "href": "activities/10activity/activity10.html",
    "title": "Activity 10: Internet Safety Routes",
    "section": "",
    "text": "This activity teaches students how to practice internet safety by identifying safe and unsafe actions on the internet. Students will watch a video about internet safety and then engage in an activity using Spheros to create and navigate routes based on safe and unsafe terms."
  },
  {
    "objectID": "activities/10activity/activity10.html#description",
    "href": "activities/10activity/activity10.html#description",
    "title": "Activity 10: Internet Safety Routes",
    "section": "",
    "text": "This activity teaches students how to practice internet safety by identifying safe and unsafe actions on the internet. Students will watch a video about internet safety and then engage in an activity using Spheros to create and navigate routes based on safe and unsafe terms."
  },
  {
    "objectID": "activities/10activity/activity10.html#materials-required",
    "href": "activities/10activity/activity10.html#materials-required",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Materials Required",
    "text": "Materials Required\n\nInternet safety flashcards\nWooden blocks\nSpheros\niPad"
  },
  {
    "objectID": "activities/10activity/activity10.html#steps-to-conduct-the-activity",
    "href": "activities/10activity/activity10.html#steps-to-conduct-the-activity",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Internet Safety Video\n\nStart by discussing with students their experiences using the internet and activities they have done online.\nExplain the importance of learning safe practices for internet use.\nPlay the Twinkl video on internet safety: Twinkl Internet Safety Video.\nAfter watching, ask students what they learned from the video.\n\n\n\nStep 2: Flashcards\n\nDivide students into two groups and provide them with flashcards containing safe and unsafe terms/actions.\nInstruct students to sort the flashcards into safe and unsafe categories.\nReview the sorted flashcards to ensure understanding before proceeding.\n\n\n\nStep 3: Creating Routes\n\nUsing wooden blocks and the sorted flashcards, have students create two routes: one for safe terms/actions and one for unsafe terms/actions that their Sphero can navigate through.\nKindergarteners will focus on creating routes without the flashcard sorting component.\n\n\n\nStep 4: Using Spheros\n\nAllow students to use Spheros to navigate through the routes they created.\nEncourage students to create new routes for their Spheros after completing the initial ones."
  },
  {
    "objectID": "activities/10activity/activity10.html#reflection",
    "href": "activities/10activity/activity10.html#reflection",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Reflection",
    "text": "Reflection\n\nConduct a reflection session after watching the video.\nAsk students what they learned about internet safety and what actions they might do differently online after watching the video."
  },
  {
    "objectID": "activities/10activity/activity10.html#summary",
    "href": "activities/10activity/activity10.html#summary",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Summary",
    "text": "Summary\nThis activity aims to enhance students’ understanding of internet safety by actively engaging them in identifying safe and unsafe online behaviors. By using Spheros to navigate through created routes, students apply their knowledge in a practical and interactive manner, reinforcing internet safety practices."
  },
  {
    "objectID": "activities/10activity/activity10.html#examples-of-flashcards",
    "href": "activities/10activity/activity10.html#examples-of-flashcards",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Examples of Flashcards",
    "text": "Examples of Flashcards\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/12activity/activity12.html",
    "href": "activities/12activity/activity12.html",
    "title": "Activity 12: Blue-Blocs",
    "section": "",
    "text": "Students will use the Blue-Bot robots to play with the Blue-Bloc app. The activity incorperates the use of blocking coding, a ataic used to simply the understading of code for students. The activity will also include the use of conditional statements that require new ays of thinking and improve skills in computational thinking."
  },
  {
    "objectID": "activities/12activity/activity12.html#description",
    "href": "activities/12activity/activity12.html#description",
    "title": "Activity 12: Blue-Blocs",
    "section": "",
    "text": "Students will use the Blue-Bot robots to play with the Blue-Bloc app. The activity incorperates the use of blocking coding, a ataic used to simply the understading of code for students. The activity will also include the use of conditional statements that require new ays of thinking and improve skills in computational thinking."
  },
  {
    "objectID": "activities/12activity/activity12.html#time-required",
    "href": "activities/12activity/activity12.html#time-required",
    "title": "Activity 12: Blue-Blocs",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 4th grade: 35min, 5th & 6th: 30min"
  },
  {
    "objectID": "activities/12activity/activity12.html#materials-required",
    "href": "activities/12activity/activity12.html#materials-required",
    "title": "Activity 12: Blue-Blocs",
    "section": "Materials Required",
    "text": "Materials Required\n\nBlue-Bot\nBlue-Bot Map\nFlashcards\nIPAD\nPencil\n\nPaper\n\n\nStep 1: Forming Groups\n\nPut students in groups of two at each Map, giving them each three rows of space to put down blank flashcards for obstacles and one picture flashcard as their goal.\nEach student needs a paper, pencil and IPAD to connect to their Blue-Bot\n\n\n\nStep 2: Creating Routes\n\nEncourage students to play around with Bee Bot to see the different blocks available to them for 5 minutes max.\nUsing the flashcards and three rows avaliable to them, tell students to create routes they can run their Blue-Bots through. Give students up to 10 minutes to complete this\n\n\n\nStep 3: Creating Conditions\n\nWith the paper and pencil tell students to create two restictions based upon the avaiable blocks on Blue-Blocs, they cannot have the same restrictions as their partner on the map\n\nExamples: No forward block, No turning 45 degrees, Only 45 degree blocks for turns, Can only turn left etc…\n\n\n\n\nStep 4: Completing Routes and Switching\n\nHave the students run through their own routes with conditions and once completed, switch with their partner and abide by their restrictions.\nOnce both students have done each other routes wait for another group to be done so they can switch places.\nHave the students keep their paper at their original map and use the new ones they find when switching\nKeep the students switching until they have done all the diffrent routes avaliable."
  },
  {
    "objectID": "activities/12activity/activity12.html#reflection",
    "href": "activities/12activity/activity12.html#reflection",
    "title": "Activity 12: Blue-Blocs",
    "section": "Reflection",
    "text": "Reflection\n\nLeave at least 5 minutes of the activity to ask questions about what they did\nExplore with students how easy or hard they found the activity\nAsk the students what they found were the hardest conditions to abide by.\nAsk them if there were any conditions they tried making but weren’t able to."
  },
  {
    "objectID": "activities/12activity/activity12.html#summary",
    "href": "activities/12activity/activity12.html#summary",
    "title": "Activity 12: Blue-Blocs",
    "section": "Summary",
    "text": "Summary\n\nParticipation in the activity is meant to improve students computational thinking. Block coding helps students get a better understanding of how coding works and can help them improve their skills in programming. Encouraging students to create and solve obstacles for block coding will greatly improve their coding skills."
  },
  {
    "objectID": "activities/03activity/03activity.html",
    "href": "activities/03activity/03activity.html",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "",
    "text": "In this activity, students will learn about sorting methods by arranging numbered paper strips in order using the different approaches a computer can take."
  },
  {
    "objectID": "activities/03activity/03activity.html#description",
    "href": "activities/03activity/03activity.html#description",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "",
    "text": "In this activity, students will learn about sorting methods by arranging numbered paper strips in order using the different approaches a computer can take."
  },
  {
    "objectID": "activities/03activity/03activity.html#materials-required",
    "href": "activities/03activity/03activity.html#materials-required",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Materials Required",
    "text": "Materials Required\n\nPaper pieces labelled 1-10\nNotebook & pen"
  },
  {
    "objectID": "activities/03activity/03activity.html#steps-to-conduct-the-activity",
    "href": "activities/03activity/03activity.html#steps-to-conduct-the-activity",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nThe Sorting Methods\n\nBubble Sorting\nTakes two adjacent pieces and compares them together, arranging them by swapping if they are in the wrong order.\nSet-Up: - Lay out the numbered paper strips in a random order. - Compare each pair of adjacent strips and swap them if they are in the wrong order. - Repeat this process until the strips are sorted.\nReference video: Bubble Sort Algorithm\n\n\nSelection Sorting\nRepeatedly finds the smallest item in the unsorted part and moves it to the end of the sorted part.\nSet-Up: - Lay out the numbered paper strips in a random order. - Find the smallest number among all the strips and move it to the first position. - Find the next smallest number from the remaining strips and place it next to the first. - Repeat until all strips are sorted.\nReference video: Selection Sort Algorithm\n\n\nInsertion Sorting\nInvolves sorting one item at a time by comparing each new item with the items already sorted and inserting it in the correct position.\nSet-Up: - Lay out the numbered paper strips in a random order. - Start with the second strip and compare it to the first. Insert it in the correct position (before or after the first strip). - Take the third strip and compare it to the already sorted strips, inserting it in the correct position. - Repeat the process until all strips are sorted.\nReference video: Insertion Sort Algorithm\n\n\n\nDifficulty Breakdown\n\nIntroduction\n\nInteract with students and ask why they think having things sorted and arranged can be useful.\nExplain the three different sorting methods we will be using: Bubble Sort, Selection Sort, and Insertion Sort.\n\n\n\nBeginner\n\nOnly use the paper strips labeled 1-5.\nRun through each of the sorting methods at least once.\n🔍 Focus Skills: computational thinking, problem-solving\n\n\n\nIntermediate\n\nUse all paper strips.\nRun through each of the sorting methods at least once.\n🔍 Focus Skills: computational thinking, problem-solving"
  },
  {
    "objectID": "activities/03activity/03activity.html#reflection",
    "href": "activities/03activity/03activity.html#reflection",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Reflection",
    "text": "Reflection\n\nGather back as a class and ask students which method took them the least amount of time to complete.\nIf the answers vary, ask them why they felt that way.\n\n\nAnswers on Which Algorithm is Usually Faster\n\nBubble Sort: Slow because it has to compare and swap a lot.\nSelection Sort: A little better than bubble sort but still has to make many comparisons.\nInsertion Sort: Often the fastest of the three for small lists because it finds the right spot for each item without many unnecessary moves."
  },
  {
    "objectID": "activities/03activity/03activity.html#learning-outcomes",
    "href": "activities/03activity/03activity.html#learning-outcomes",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should:\n\nUnderstand the basic concepts of sorting and why it is useful.\nLearn how to perform Bubble Sort, Selection Sort, and Insertion Sort.\nRecognize the differences in efficiency between the three sorting methods."
  },
  {
    "objectID": "activities/06activity/06activity.html",
    "href": "activities/06activity/06activity.html",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "",
    "text": "In this activity, students will identify, analyze, and create simple patterns using shapes, colors, or numbers. The activity is designed with increasing difficulty based on previous coding experience, allowing students to build their programming logic as they play."
  },
  {
    "objectID": "activities/06activity/06activity.html#description",
    "href": "activities/06activity/06activity.html#description",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "",
    "text": "In this activity, students will identify, analyze, and create simple patterns using shapes, colors, or numbers. The activity is designed with increasing difficulty based on previous coding experience, allowing students to build their programming logic as they play."
  },
  {
    "objectID": "activities/06activity/06activity.html#materials-required",
    "href": "activities/06activity/06activity.html#materials-required",
    "title": "Activity 6: Debugging",
    "section": "Materials Required",
    "text": "Materials Required\n\nDebugging Video: Bugs!\nDebugging Scenarios\nPencil\nPaper"
  },
  {
    "objectID": "activities/06activity/06activity.html#steps-to-conduct-the-activity",
    "href": "activities/06activity/06activity.html#steps-to-conduct-the-activity",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nSplit students into small roups. Have them spread out throughout the room, ensuring each group has enough room to run the activity.\nEach group should recieve one paper, some colored pencils or crayons, and some pattern materials.\n\n\n\nDifficulty Breakdown\n\nIntroduction\n\nBegin with a brief discussion about patterns, explaining that patterns are sequences that repeat in a certain order.\nShow examples of simple patterns using shapes, colors, and numbers:\n\nShapes: ⬛⬛🔴⬛⬛🔴… (Two squares, one circle, repeat)\nColors: 🔵🟢🔵🟢🔵…(Blue, green, repeat)\nNumbers: 1, 2, 1, 2, 1, 2… (Alternating 1 and 2)\n\n\n\n\nBeginner\n\nProvide students with sets of simple sequences and ask them to identify the pattern. Examples:\n\nShapes: 🔺🔺⚫️🔺🔺⚫️…\nColors: 🟡🟡🟠🟡🟡🟠…\nNumbers: 3, 3, 6, 3, 3, 6…\n\nOnce students can identify the pattern, challenge them to continue the sequence by adding the next few elements.\n\nExample: Sequence: 🔵🔵🟢🔵🔵🟢… (They add 🔵🔵🟢 next)\n\nInstruct students to create their own simple patterns using shapes, colors, or numbers on paper. Encourage them to share their patterns with a partner and see if their partner can identify and extend the pattern.\n🔍 Focus Skills: critical thinking, problem-solving, pattern recognition\n\n\n\nIntermediate\n\nProvide students with sets of simple sequences and ask them to identify the pattern. Examples:\n\nShapes: 🔺🔺⚫️🔺🔺⚫️…\nColors: 🟡🟡🟠🟡🟡🟠…\nNumbers: 3, 3, 6, 3, 3, 6…\n\nOnce students can identify the pattern, challenge them to continue the sequence by adding the next few elements.\n\nExample: Sequence: 🔵🔵🟢🔵🔵🟢… (They add 🔵🔵🟢 next)\n\nInstruct students to create their own simple patterns using shapes, colors, or numbers on paper. Encourage them to share their patterns with a partner and see if their partner can identify and extend the pattern.\nIf students complete all the previous challenges, create a ‘pattern puzzle’ where some elements from the sequence are missing. Have the students attempt to fill in the blanks.\n\nExample: 🟣, 🟣, 🟤, __, __, __, 🟣, 🟣, 🟤 (They fill in with 🟣, 🟣, 🟤)\nExample: 🔺⚫️, __, ⚫️, 🔺, __ (They fill in with 🔺,⚫️)\n\n🔍 Focus Skills: critical thinking, problem-solving, pattern recognition"
  },
  {
    "objectID": "activities/06activity/06activity.html#reflection",
    "href": "activities/06activity/06activity.html#reflection",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "Reflection",
    "text": "Reflection\n\nHave students display their patterns and share them with the class to foster pride in their work and appreciation for the diversity of patterns created.\nAfter completing the Blockly Turtle challenge, discuss with students the challenges they faced and how they solved coding problems."
  },
  {
    "objectID": "activities/06activity/06activity.html#summary",
    "href": "activities/06activity/06activity.html#summary",
    "title": "Activity 6: Debugging",
    "section": "Summary",
    "text": "Summary\nThis activity introduces students to the basics of debugging. It highlights common errors in code and methods for addressing them. Engagement in these activities can better prepare students for coding by providing a solid understanding of how to handle errors."
  },
  {
    "objectID": "activities/05activity/05activity.html",
    "href": "activities/05activity/05activity.html",
    "title": "Activity 5: Debugging",
    "section": "",
    "text": "In this activity, students will learn about debugging and the various manifestations of bugs in code. Students will learn how to identify a bug’s presence, methods of resolving it, and distinguishing between different error outputs."
  },
  {
    "objectID": "activities/05activity/05activity.html#description",
    "href": "activities/05activity/05activity.html#description",
    "title": "Activity 5: Debugging",
    "section": "",
    "text": "In this activity, students will learn about debugging and the various manifestations of bugs in code. Students will learn how to identify a bug’s presence, methods of resolving it, and distinguishing between different error outputs."
  },
  {
    "objectID": "activities/05activity/05activity.html#materials-required",
    "href": "activities/05activity/05activity.html#materials-required",
    "title": "Activity 5: Debugging",
    "section": "Materials Required",
    "text": "Materials Required\n\nDebugging Video: Bugs!\nDebugging Sheet: Debugging Sheet\nDebugging Answer Sheet: Answer Sheet\nPencil"
  },
  {
    "objectID": "activities/05activity/05activity.html#steps-to-conduct-the-activity",
    "href": "activities/05activity/05activity.html#steps-to-conduct-the-activity",
    "title": "Activity 5: Debugging",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity"
  },
  {
    "objectID": "activities/05activity/05activity.html#reflection",
    "href": "activities/05activity/05activity.html#reflection",
    "title": "Activity 5: Debugging",
    "section": "Reflection",
    "text": "Reflection\n\nExplain the similarity between actual code and the activity, emphasizing how debugging requires the skills practiced in the activity.\nAsk students if they found the activity challenging and what new concepts they learned.\nInquire which was harder: identifying bugs or categorizing them."
  },
  {
    "objectID": "activities/05activity/05activity.html#learning-outcomes",
    "href": "activities/05activity/05activity.html#learning-outcomes",
    "title": "Activity 5: Debugging",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand the difference between syntax and logic errors.\nBe able to identify bugs in code and correctly categorize them as syntax or logic errors.\nSimulate real-life problem-solving by providing the framework of debugging code and handling errors."
  },
  {
    "objectID": "activities/14activity/14activity.html",
    "href": "activities/14activity/14activity.html",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "",
    "text": "In this activity, students will use a robot to create squares made up of forward movements and left or right turns. After students progress through the sqaure challenge, they will attempt more complex challenges of driving the robot from one point to another starting from various points. This approach fosters critical thinking and problem-solving skills while enhancing their understanding of the relationship between input and output in programming."
  },
  {
    "objectID": "activities/14activity/14activity.html#description",
    "href": "activities/14activity/14activity.html#description",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "",
    "text": "In this activity, students will use a robot to create squares made up of forward movements and left or right turns. After students progress through the sqaure challenge, they will attempt more complex challenges of driving the robot from one point to another starting from various points. This approach fosters critical thinking and problem-solving skills while enhancing their understanding of the relationship between input and output in programming."
  },
  {
    "objectID": "activities/14activity/14activity.html#materials-required",
    "href": "activities/14activity/14activity.html#materials-required",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Materials Required",
    "text": "Materials Required\n\nProgrammable and driveable robot\nIPAD\nMap\nSquare Challenge Paper Instructions"
  },
  {
    "objectID": "activities/14activity/14activity.html#steps-to-conduct-the-activity",
    "href": "activities/14activity/14activity.html#steps-to-conduct-the-activity",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nDivide students into small groups. Have them spread out throughout the room, ensuring each group has room to run the activity.\nEach group should recieve a map, an IPAD, a robot, and at least one copy of the paper instructions.\n\n\n\nDifficulty Breakdown\n\nBeginner\n\nStudents should be familiar with the robot application, which uses code blocks or buttons to control movement. To refresh their awareness and with the help of the instruction paper, have them attempt to move the robot in two square rotations. Make one with only forward and left movements, and one with only forward and right movements.\nOnce the sqaure challenge has been completed, set up the map to resemble the A-to-B generated by the IPAD. Have the students use the ipad directions to traverse the bot using different direction cobinations.\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nOnce a student finishes their pathway, have them reposition the Blue Bot as designated by the ipad’s new pathway.\n🔍 Focus Skills: critical thinking, input and output relationships\n\n\n\nIntermediate\n\nStudents should be familiar with the robot application, which uses code blocks or buttons to control movement. To refresh their awareness and with the help of the instruction paper, have them attempt to move the robot in two square rotations. Make one with only forward and left movements, and one with only forward and right movements.\nOnce the sqaure challenge has been completed, set up the map to resemble the A-to-B generated by the IPAD. Have the students use the ipad directions to traverse the bot using different direction cobinations.\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nOnce a student finishes their pathway, have them reposition the Blue Bot as designated by the ipad’s new pathway.\nAfter meeting their marked goals twice, allow them to modify the A-to-B pathways and provide guidance if their courses are not conditionally possible.\nOnce modifying their courses, ask them to keep track of how many times they meet their goal.\n🔍 Focus Skills: critical thinking, input and output relationships"
  },
  {
    "objectID": "activities/14activity/14activity.html#reflection",
    "href": "activities/14activity/14activity.html#reflection",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Reflection",
    "text": "Reflection\nAt the end of the activity, gather the students and ask how many of them were able to create their squares and where, if applicable, they had any troubles. Additionally, for those who kept count, ask how many times they were able to complete their pathways. - What directional combinations were tricky and why? - Were there any pathways you found to be easy? - How many times were you able to finish your A-to-B pathways?"
  },
  {
    "objectID": "activities/14activity/14activity.html#learning-outcomes",
    "href": "activities/14activity/14activity.html#learning-outcomes",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand basic coding principles.\nEnhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.\nTest their block code in a practical setup and debug any issues that arise to ensure the robot navigates correctly."
  },
  {
    "objectID": "technical-leader-guide/index.html",
    "href": "technical-leader-guide/index.html",
    "title": "Guide for Computing Outreach Fellows",
    "section": "",
    "text": "Computing outreach involves engaging K-6 students in regular, hands-on computing activities to foster interest and competency in computational skills. This includes introducing students to computational thinking and problem-solving through events, workshops, and classroom activities, and using technologies. The goal is to provide consistent exposure in the computing field in a fun way."
  },
  {
    "objectID": "technical-leader-guide/index.html#what-is-the-computing-outreach-program",
    "href": "technical-leader-guide/index.html#what-is-the-computing-outreach-program",
    "title": "Guide for Computing Outreach Fellows",
    "section": "",
    "text": "Computing outreach involves engaging K-6 students in regular, hands-on computing activities to foster interest and competency in computational skills. This includes introducing students to computational thinking and problem-solving through events, workshops, and classroom activities, and using technologies. The goal is to provide consistent exposure in the computing field in a fun way."
  },
  {
    "objectID": "technical-leader-guide/index.html#what-to-expect-as-a-computing-outreach-fellow",
    "href": "technical-leader-guide/index.html#what-to-expect-as-a-computing-outreach-fellow",
    "title": "Guide for Computing Outreach Fellows",
    "section": "What to Expect as a Computing Outreach Fellow",
    "text": "What to Expect as a Computing Outreach Fellow\n\nYou will be tasked with activities that will vary depending on the grades you are working with\nAll activities will be held in groups that can vary depending on the size of the class\nWorking with younger students ranging from K to 2nd grade, will require to participate in activities that are more based in reading and explain methods of computational skills\nOlder students from 5th to 6th grade will involve the use of more robotics in activities, requiring fellows to understand how the robots work and how they fit into the activities\nYou will be given outlines that will guide you through the necessary steps to doing activities"
  },
  {
    "objectID": "technical-leader-guide/index.html#key-responsibilities",
    "href": "technical-leader-guide/index.html#key-responsibilities",
    "title": "Guide for Computing Outreach Fellows",
    "section": "Key Responsibilities",
    "text": "Key Responsibilities\n\nWorking with children\nCollaborating with faculty at Meadville public schools\nRunning through and understanding activities beforehand\nReading books that improve students understanding of computational skills"
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "About",
    "section": "",
    "text": "Our goal is to foster an ongoing collaboration between the Department of Computer and Information Science at Allegheny College and Crawford Central elementary schools. This initiative introduces K-6 students to computing concepts, ensuring consistent exposure to STEM from early education."
  },
  {
    "objectID": "about/index.html#our-mission-and-goal",
    "href": "about/index.html#our-mission-and-goal",
    "title": "About",
    "section": "",
    "text": "Our goal is to foster an ongoing collaboration between the Department of Computer and Information Science at Allegheny College and Crawford Central elementary schools. This initiative introduces K-6 students to computing concepts, ensuring consistent exposure to STEM from early education."
  },
  {
    "objectID": "about/index.html#pennsylvania-education",
    "href": "about/index.html#pennsylvania-education",
    "title": "About",
    "section": "Pennsylvania Education",
    "text": "Pennsylvania Education\n\nSTEM In Pennsylvania\nSTEM education in Pennslyvania is bulit on the foundational beliefs that all students are capable of STEM literacy, iteration and relfection are an important part of the STEM learning process, STEM education should transcends the classroom walls by intergrating into the community and success depends upon the patnership between educators students, families, postsecondary providers etc.\n\n\nComputer Science Literacy in Pennslyvania Schools\nThe existing framework for computer science literacy in Pennsylvania schools places a significantly greater emphasis on grades 7 through 12. This is primarily because the current content and programs available are not feasible for implementation in kindergarten through sixth grade.\nA critical component of teaching computer science in schools is the development of programs that equip teachers to deliver effective lessons. The PA board of education states “all programs are expected to have course content aligned with state standards. All teacher preparation programs are expected to provide all candidates with the knowledge and skills to teach a standards-based curriculum effectively and successfully. Through university coursework and extensive, well-designed clinical experiences, all candidates for the profession are expected to learn how to use materials and resources for instruction (including technology) to meet the individual needs of each student in their classroom”.\n\nSources\nPA Department of Education STEM Guidelines\nThe Framework for Computer Science 7-12 Program Guidelines"
  },
  {
=======
>>>>>>> main
    "objectID": "template/(number)activity.html",
    "href": "template/(number)activity.html",
    "title": "Activity _ :",
    "section": "",
    "text": "Please ensure you are creating an activity as a PR and getting it reviewed by the team before merging it to the main branch. Thank you!"
  },
  {
    "objectID": "template/(number)activity.html#important-remove-later",
    "href": "template/(number)activity.html#important-remove-later",
    "title": "Activity _ :",
    "section": "",
    "text": "Please ensure you are creating an activity as a PR and getting it reviewed by the team before merging it to the main branch. Thank you!"
  },
  {
    "objectID": "template/(number)activity.html#description",
    "href": "template/(number)activity.html#description",
    "title": "Activity _ :",
    "section": "Description",
    "text": "Description\nAdd description of the activity"
  },
  {
    "objectID": "template/(number)activity.html#materials-required",
    "href": "template/(number)activity.html#materials-required",
    "title": "Activity _ :",
    "section": "Materials Required",
    "text": "Materials Required"
  },
  {
    "objectID": "template/(number)activity.html#steps-to-conduct-the-activity",
    "href": "template/(number)activity.html#steps-to-conduct-the-activity",
    "title": "Activity _ :",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1:\n\n\n\n\n\nStep 2:\n\n\nStep 3\nAdd more steps, if required."
  },
  {
    "objectID": "template/(number)activity.html#reflection",
    "href": "template/(number)activity.html#reflection",
    "title": "Activity _ :",
    "section": "Reflection",
    "text": "Reflection"
  },
  {
    "objectID": "template/(number)activity.html#learning-outcomes",
    "href": "template/(number)activity.html#learning-outcomes",
    "title": "Activity _ :",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:"
  },
  {
    "objectID": "template/(number)activity.html#pictures-if-required",
    "href": "template/(number)activity.html#pictures-if-required",
    "title": "Activity _ :",
    "section": "Pictures (if required)",
    "text": "Pictures (if required)\n\n\n\nPicture"
  },
  {
    "objectID": "middle_school/underwater_robotics.html",
    "href": "middle_school/underwater_robotics.html",
    "title": "Underwater Robotics Curriculum",
    "section": "",
    "text": "Welcome to the Underwater Robotics Curriculum, a 6-week program designed to teach students the fundamentals of robotics, engineering, and teamwork. Each week focuses on a specific aspect of building underwater robots, culminating in a fully functional ROV (Remotely Operated Vehicle).\nExplore the weekly breakdown below to access detailed activities and presentations.\nCost Breakdown Link\nCost Breakdown PDF"
  },
  {
<<<<<<< HEAD
    "objectID": "activities/04activity/04activity.html",
    "href": "activities/04activity/04activity.html",
    "title": "Activity 4: Block Code And Map Routes",
    "section": "",
    "text": "In this activity, students will create and navigate map routes through block code using the IPAD apps. The activity is designed with increasing difficulty based on previous coding experience, allowing students to build their programming logic as they play.\nUsing the IPAD apps, students will control their bot to traverse the different map routes they come up with. Along the way, they’ll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops - all wrapped inside a fun and interactive lesson."
  },
  {
    "objectID": "activities/04activity/04activity.html#description",
    "href": "activities/04activity/04activity.html#description",
    "title": "Activity 4: Block Code And Map Routes",
    "section": "",
    "text": "In this activity, students will create and navigate map routes through block code using the IPAD apps. The activity is designed with increasing difficulty based on previous coding experience, allowing students to build their programming logic as they play.\nUsing the IPAD apps, students will control their bot to traverse the different map routes they come up with. Along the way, they’ll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops - all wrapped inside a fun and interactive lesson."
  },
  {
    "objectID": "activities/04activity/04activity.html#grades-time-required",
    "href": "activities/04activity/04activity.html#grades-time-required",
    "title": "Activity 4: Bee Bots",
    "section": "Grades & Time Required",
    "text": "Grades & Time Required\n\nKindergarten: 45 minutes\n2nd - 4th Grade: 30 minutes\n5th & 6th Grade: 25 minutes"
  },
  {
    "objectID": "activities/04activity/04activity.html#materials-required",
    "href": "activities/04activity/04activity.html#materials-required",
    "title": "Activity 4: Block Code And Map Routes",
    "section": "Materials Required",
    "text": "Materials Required\n\nProgrammable & Drivable Robot\nIPAD\nItem Cards\nMap (optional)"
  },
  {
    "objectID": "activities/04activity/04activity.html#steps-to-conduct-the-activity",
    "href": "activities/04activity/04activity.html#steps-to-conduct-the-activity",
    "title": "Activity 4: Block Code And Map Routes",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nSplit students into groups of two. Have them spread out throughout the room, ensuring each group has room to run the activity.\nEach group should recieve one robot, one IPAD, one set of item cards, and one map, if being used.\nHave the students put the item cards on various spots on the map. These will be their route obstacles.\nDepending on the previous coding experience, students can work with pre-made or self-designed paths.\n\n\n\nDificulty Breakdown\n\nBeginner\n\nUse a guided path for the robot. These paths should have a specific rule, such as no right turns allowed.\nLimit the number of obstacles on the map to 1-3.\nFocus on simple routes using the forward, backward, and turn commands.\n🔍 Focus Skills: Object interaction, movement basics, problem-solving\n\n\n\nIntermediate\n\nStudents design the path the robot will follow. These paths should have a specific rule, such as no right turns allowed.\nIncrease the number of obstacles on the map to 3-5.\nUse simple commands (forward, backward, turns) as well as loop and conditional blocks.\n🔍 Focus Skills: Creativity, problem-solving, conditional logic"
  },
  {
    "objectID": "activities/04activity/04activity.html#reflection",
    "href": "activities/04activity/04activity.html#reflection",
    "title": "Activity 4: Bee Bots",
    "section": "Reflection",
    "text": "Reflection\n\nDiscuss with students how easy or difficult they found the activity.\nAsk them which conditions were the hardest to follow.\nInquire if there were any conditions they wanted to create but couldn’t implement."
  },
  {
    "objectID": "activities/04activity/04activity.html#summary",
    "href": "activities/04activity/04activity.html#summary",
    "title": "Activity 4: Bee Bots",
    "section": "Summary",
    "text": "Summary\nParticipating in this activity will enhance students’ computational thinking. Block coding with Bee Bots helps students understand basic coding principles and improves their programming skills. Encouraging students to create and solve obstacles in block coding will significantly boost their coding proficiency."
  },
  {
    "objectID": "activities/15activity/15activity.html",
    "href": "activities/15activity/15activity.html",
    "title": "Activity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "",
    "text": "In this action-packed session, students will tackle two creative missions with Dash: Basketball Challenge and Castle Siege. Each task is designed with increasing difficulty by grade level, allowing students to build their programming logic as they play.\nUsing Blockly, students will control Dash to move, aim, and launch in order to complete each objective. Along the way, they’ll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops—all wrapped inside a fun, interactive story."
  },
  {
    "objectID": "activities/15activity/15activity.html#description",
    "href": "activities/15activity/15activity.html#description",
    "title": "Activity 15: Arduino",
    "section": "",
    "text": "Students will be introduced to the basics of electronics using Arduino, an open-source microcontroller. They will learn to control the flow of current through LEDs, programming them to turn on and off at specified intervals. This hands-on experience with Arduino will provide them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "activities/15activity/15activity.html#materials-required",
    "href": "activities/15activity/15activity.html#materials-required",
    "title": "Activity 15: Arduino",
    "section": "Materials required",
    "text": "Materials required\n\nArduino Instructions: Intro to Basic Electronics with Arduino\nArduino Board and program\nArduino USB connector cable\n3 LEDs\n3 1k ohm resistor\nConnecting Wire"
  },
  {
    "objectID": "activities/15activity/15activity.html#steps-to-conduct-the-activity",
    "href": "activities/15activity/15activity.html#steps-to-conduct-the-activity",
    "title": "Activity 15: Arduino",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nStep 1: Accessesing Arduino Instructions\n\nAcssess insturction in order to run activity Intro to Basic Electronics with Arduino"
  },
  {
    "objectID": "activities/15activity/15activity.html#reflection",
    "href": "activities/15activity/15activity.html#reflection",
    "title": "Activity 15: Arduino",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 50-minute mark to discuss progress and challenges\nAsk students to describe what they observed from trying to get the LEDs to light up\nRelate the activity to everday use of certain electironic that work with simalr electonics like LED lights."
  },
  {
    "objectID": "activities/15activity/15activity.html#learning-outcomes",
    "href": "activities/15activity/15activity.html#learning-outcomes",
    "title": "Activity 15: Arduino",
=======
    "objectID": "middle_school/underwater_robotics.html#overview",
    "href": "middle_school/underwater_robotics.html#overview",
    "title": "Underwater Robotics Curriculum",
    "section": "",
    "text": "Welcome to the Underwater Robotics Curriculum, a 6-week program designed to teach students the fundamentals of robotics, engineering, and teamwork. Each week focuses on a specific aspect of building underwater robots, culminating in a fully functional ROV (Remotely Operated Vehicle).\nExplore the weekly breakdown below to access detailed activities and presentations.\nCost Breakdown Link\nCost Breakdown PDF"
  },
  {
    "objectID": "middle_school/underwater_robotics.html#week-breakdown",
    "href": "middle_school/underwater_robotics.html#week-breakdown",
    "title": "Underwater Robotics Curriculum",
    "section": "6-Week Breakdown",
    "text": "6-Week Breakdown\n\n  \n    \n      Week 1 Part One: Introduction to Robotics\n      Learn the basics of robotics and underwater exploration.\n    \n         \n      \n      Week 1 Part Two: Introduction to Arduino\n      Learn Basic Arduino Coding and Turn on a light\n    \n  \n  \n    \n      Week 2: Coding with Arduino\n      Understand the key principles of Arduino Programming. Arduino's can be used for ROV systems like AquaGator.\n    \n  \n  \n    \n      Week 3 Part One: ROV Design\n      Learn about frames of underwater robots.\n    \n         \n      \n      Week 3 Part Two: Building an ROV Frame\n      Construct the frame of your underwater robot.\n    \n  \n  \n    \n      Week 4: ROV Motor Control\n      Learn how to wire and power your ROV.\n    \n  \n  \n      Week 5: Catchup Week and Troubleshooting\n      Make sure the robots are operating and catch up teams on work.\n    \n  \n  \n    \n      Week 6: Testing and Deployment\n      Test your ROV in water and refine its performance."
  },
  {
    "objectID": "middle_school/underwater_robotics.html#learning-outcomes",
    "href": "middle_school/underwater_robotics.html#learning-outcomes",
    "title": "Underwater Robotics Curriculum",
>>>>>>> main
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this curriculum, students will:\n\nUnderstand the principles of underwater robotics.\nDesign and build a functional ROV.\nCollaborate in teams to solve engineering challenges.\nApply programming and electronics skills to real-world scenarios."
  },
  {
<<<<<<< HEAD
    "objectID": "activities/07activity/07activity.html",
    "href": "activities/07activity/07activity.html",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "",
    "text": "In this activity, students will be introduced to the concepts of computation thinking by navigating through a maze using basic commands. Students will develop skills in problem-solving, pattern recognition, and algorithmic thinking."
=======
    "objectID": "middle_school/underwater_robotics.html#resources",
    "href": "middle_school/underwater_robotics.html#resources",
    "title": "Underwater Robotics Curriculum",
    "section": "Resources",
    "text": "Resources\n\nSeaMATE"
  },
  {
    "objectID": "middle_school/05activity/05activity.html",
    "href": "middle_school/05activity/05activity.html",
    "title": "Activity 5: ROV Testing",
    "section": "",
    "text": "In this session, students will test their ROV motor systems after completing the build. They will observe motor behavior, identify any issues in wiring or switch configuration, and troubleshoot with peers or instructors. This hands-on testing session reinforces understanding of circuit continuity and the practical application of motor control."
>>>>>>> main
  },
  {
    "objectID": "middle_school/05activity/05activity.html#description",
    "href": "middle_school/05activity/05activity.html#description",
    "title": "Activity 5: ROV Testing",
    "section": "",
    "text": "In this session, students will test their ROV motor systems after completing the build. They will observe motor behavior, identify any issues in wiring or switch configuration, and troubleshoot with peers or instructors. This hands-on testing session reinforces understanding of circuit continuity and the practical application of motor control."
  },
  {
    "objectID": "middle_school/05activity/05activity.html#materials-required",
    "href": "middle_school/05activity/05activity.html#materials-required",
    "title": "Activity 5: ROV Testing",
    "section": "Materials Required",
    "text": "Materials Required\n\nCompleted ROV with motor system installed\n9V battery (fully charged)\nSmall testing pool or large bin of water\nExtra solder seal connectors (for repairs)\nHeat gun (if repairs needed)\nWire strippers (for quick fixes)\nTowels or drying station"
  },
  {
<<<<<<< HEAD
    "objectID": "activities/07activity/07activity.html#instructions",
    "href": "activities/07activity/07activity.html#instructions",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Instructions",
    "text": "Instructions\n\nStep 1: Introduction to Patterns\n\nBegin with a brief discussion about patterns, explaining that patterns are sequences that repeat in a certain order.\nShow examples of simple patterns using shapes and colors:\n\nShapes: ⬛⬛🔴⬛⬛🔴… (Two squares, one circle, repeat)\nColors: 🔵🟢🔵🟢🔵…(Blue, green, repeat)\nNumbers: 1, 2, 1, 2, 1, 2… (Alternating 1 and 2)\n\n\n\n\nStep 2: Identify the Pattern\n\nProvide students with sets of simple sequences and ask them to identify the pattern. Examples:\n\nShapes: 🔺🔺⚫️🔺🔺⚫️…\nColors: 🟡🟡🟠🟡🟡🟠…\nNumbers: 3, 3, 6, 3, 3, 6…\n\n\n\n\nStep 3: Extend the Pattern\n\nOnce students identify the pattern, challenge them to continue the sequence by adding the next few elements.\n\nExample: Sequence: 🔵🔵🟢🔵🔵🟢… (They add 🔵🔵🟢 next)\n\n\n\n\nStep 4: Create Your Own Pattern\n\nInstruct students to create their own simple patterns using shapes, colors, or numbers on paper.\nEncourage them to share their patterns with a partner and see if their partner can identify and extend the pattern.\n\n\n\nStep 5: Pattern Puzzles\n\nCreate “pattern puzzles” where some elements in the sequence are missing, and ask students to fill in the blanks.\n\nExample: Sequence: 🟣, 🟣, 🟤, ___, 🟣, 🟣, 🟤, ___(They fill in with 🟣, 🟣, 🟤)\n\n\n\n\nExtensions\n\nFor students who complete the exercises, introduce them to the coding challenge on Blockly Turtle. This program prompts students to code shapes."
  },
  {
    "objectID": "activities/07activity/07activity.html#reflection",
    "href": "activities/07activity/07activity.html#reflection",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Reflection",
    "text": "Reflection\n\nAfter completing the maze activity, gather students into a group and discuss:\n\nWhat challenges did you face?\nHow did you solve any problems that arose?\nWhat strategies helped you find the correct path?\nDiscuss how this activity relates to real-world computational thinking and problem-solving."
  },
  {
    "objectID": "activities/07activity/07activity.html#learning-outcomes",
    "href": "activities/07activity/07activity.html#learning-outcomes",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand basic coding principles.\nEnhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.\nTest their directions in a practical setup and debug any issues that arise to ensure the robot navigates correctly.\nDevelop computational thinking skills through planning and executing a sequence of steps.\nEnhance problem-solving abilities by identifying patterns and applying appropriate strategies."
  },
  {
    "objectID": "activities/index.html",
    "href": "activities/index.html",
    "title": "Activities",
    "section": "",
    "text": "Welcome to the page where you can find all the activities that have already been implemented. Use the categories to find activities based on grade and time required.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nActivity 1: Navigating Decisions with If-Else-Elif Statements\n\n\nTeaching students the fundamentals of if-else-elif statements through hands-on activities.\n\n\n\nGrade: 5\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n5th Grade\n\n\n30 Minutes\n\n\n\n\n\n\n\nActivity 2: Binary & Balloons\n\n\nIntroducing students to binary numbers through interactive and fun activities.\n\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n2nd Grade onwards\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 3: Different Ways a Computer Sorts\n\n\nTeaching students about sorting algorithms through hands-on activities.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st Grade onwards\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 4: Block Code And Map Routes\n\n\nEnhancing computational thinking through the creation of obstacles and routes through block coding and conditional statements.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten - 6th Grade\n\n\n30 Minutes\n\n\n\n\n\n\n\nActivity 5: Debugging\n\n\nTeaching students to identify and fix bugs in code through hands-on activities.\n\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n4th - 6th Grade\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 6: Pattern Recognition Activity - Pattern Detectives\n\n\nEngaging students in identifying, analyzing, and creating simple patterns using shapes, colors, or numbers.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\n1st Grade onwards\n\n\nVaries by grade\n\n\n\n\n\n\n\nActivity 7: Maze Navigation Activity\n\n\nIntroducing computational thinking through maze navigation and algorithmic planning.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten and beyond (Adaptable Complexity)\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 8: Internet Safety Routes\n\n\nTeaching internet safety through identifying safe and unsafe actions online using robots.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st grade onwards\n\n\n30 Minutes\n\n\n\n\n\n\n\nActivity 9: Block Code With Code.Org (Minecraft and Frozen)\n\n\nExploring Minecraft & Frozen through Block Coding on Code.org\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nAll Grades\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 10: Electrical Currents and LEDs - Arduino\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\nAll grades\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 11: Protect Your Password\n\n\nLearning the Importance of Strong Passwords\n\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\n3rd Grade onwards\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 12: Facts and Questions\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 45 Minutes\n\n\n\n\n\n\nAll grades\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 13: Conditional Color Coding\n\n\nComplete the Blue-Bot maps but make sure to follow the color code.\n\n\n\nGrade: Grade: 2\n\n\nGrade: 3\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n2nd, 3rd\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 14: Shapes and A-to-B Movements\n\n\nUse a robot to create squares and various A-to-B pathways, making sure to test different combinations of movements.\n\n\n\nGrade: Grade: 1\n\n\nGrade: 2\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st, 2nd\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege\n\n\nProgram Dash to complete two missions using launching logic and movement!\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 40 Minutes\n\n\n\n\n\n\n1st–6th\n\n\n40 minutes\n\n\n\n\n\n\n\nActivity 16: Manual Control and Bulldozing Challenge\n\n\nEngaging students in completing challenge cards that utilize the accessory packs and multi-step problem-solving.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 40 Minutes\n\n\n\n\n\n\n1st–6th\n\n\n40 minutes\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n Back to top"
=======
    "objectID": "middle_school/05activity/05activity.html#learning-outcomes",
    "href": "middle_school/05activity/05activity.html#learning-outcomes",
    "title": "Activity 5: ROV Testing",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nSafely test and evaluate motor systems\nIdentify wiring or connection issues in simple circuits\nUse troubleshooting techniques to solve hardware problems\nUnderstand the effect of wiring on motor direction and behavior\nObserve how buoyancy and balance affect ROV performance"
  },
  {
    "objectID": "middle_school/05activity/05activity.html#testing-procedure",
    "href": "middle_school/05activity/05activity.html#testing-procedure",
    "title": "Activity 5: ROV Testing",
    "section": "Testing Procedure",
    "text": "Testing Procedure\n\n1. Pre-Check\n\nEnsure the battery is charged.\nVerify all solder connections are sealed and not loose.\nTug gently on each connection to make sure it is secure.\nConfirm the motor system is waterproofed and wires are zip-tied out of the way.\n\n\n\n2. Power On\n\nInsert the 9V battery into the holder.\nFlip the main power switch ON.\nConfirm switches are in the OFF (middle) position before starting tests.\n\n\n\n3. Dry Testing (Optional)\n\nHold the ROV above a surface and flip each switch to test motor direction.\nEnsure both motors respond and spin freely.\nWatch for any rubbing, tangle, or obstruction issues.\n\n\n\n4. Pool Testing\n\nCarefully place the ROV into the small pool or bin of water.\nObserve how it floats—adjust weights if it tips or leans.\nFlip the first switch and test forward/backward motor response.\nFlip the second switch to test vertical (up/down) motor control.\nTry brief combinations of both motors.\nWatch for:\n\nDelayed or missing motor response\nWater intrusion (bubbles or shorts)\nTangled or dragging wires\n\nIf needed, remove the ROV, dry off, and perform fixes before testing again.\n\n\nExtra Pool Activities\n\nTest buoyancy - add weights as needed to have neutral buoyancy where it does not float to the top by itself or sink (ideal for ROVs)\nHave an ROV\nMake a mini obstacle course using pool noodles\n\n\n\n\n5. Troubleshooting\n\nIf a motor does not spin:\n\nCheck soldered connections.\nConfirm correct wire colors and direction.\nSwap leads to reverse spin if needed.\nCheck for shorts or loosened wires due to water.\n\nAsk for help from an instructor if you’re stuck.\n\n\n\n6. Safety Checks\n\nKeep fingers, hair, and clothing away from spinning propellers.\nDo not touch active wires with wet hands.\nImmediately report any smoking, sparking, or overheating parts."
>>>>>>> main
  },
  {
    "objectID": "middle_school/05activity/05activity.html#reflection",
    "href": "middle_school/05activity/05activity.html#reflection",
    "title": "Activity 5: ROV Testing",
    "section": "Reflection",
    "text": "Reflection\n\nDid your ROV move correctly in the pool?\nWas it balanced? Did it sink or float properly?\nWhat issues came up, and how did you fix them?\nWhat would you do differently for your next build?"
  },
  {
    "objectID": "middle_school/03activity/03activity.html",
    "href": "middle_school/03activity/03activity.html",
    "title": "Activity 3: Building an ROV Frame",
    "section": "",
<<<<<<< HEAD
    "text": "In this activity, students will mix and match a set of balloons with binany numbers (0 and 1) on them and decoding the sequences into decimal numbers. This activity will introduce to studens how different binary sequencs can represent different decimal numbers.\nThe activity is designed with increasing difficulty based on previous coding experience, allowing students to build their programming logic as they play."
=======
    "text": "In this 40-minute session, students will build their own ROV Frame for an underwater robot. It is recommended to present the ROV Presentation first. Students should be broken up into groups with a maximum of 5 in each group. The following is the requirements per robot."
>>>>>>> main
  },
  {
    "objectID": "middle_school/03activity/03activity.html#description",
    "href": "middle_school/03activity/03activity.html#description",
    "title": "Activity 3: Building an ROV Frame",
    "section": "",
<<<<<<< HEAD
    "text": "In this activity, students will mix and match a set of balloons with binany numbers (0 and 1) on them and decoding the sequences into decimal numbers. This activity will introduce to studens how different binary sequencs can represent different decimal numbers.\nThe activity is designed with increasing difficulty based on previous coding experience, allowing students to build their programming logic as they play."
=======
    "text": "In this 40-minute session, students will build their own ROV Frame for an underwater robot. It is recommended to present the ROV Presentation first. Students should be broken up into groups with a maximum of 5 in each group. The following is the requirements per robot."
>>>>>>> main
  },
  {
    "objectID": "middle_school/03activity/03activity.html#materials-required",
    "href": "middle_school/03activity/03activity.html#materials-required",
    "title": "Activity 3: Building an ROV Frame",
    "section": "Materials Required",
<<<<<<< HEAD
    "text": "Materials Required\n\nBalloons (3-4 per group)\nMarkers\nA powers of 2 reference sheet\nMaterials for calculations (paper and pencils / whiteboard and markers)"
  },
  {
    "objectID": "activities/02activity/02activity.html#steps-to-conduct-the-activity",
    "href": "activities/02activity/02activity.html#steps-to-conduct-the-activity",
    "title": "Activity 2: Binary & Balloons",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nInflate 3 balloons and secure them. Blow up one more in case an additional example is needed.\nWrite the binary digits 0 and 1 on the balloons using a permanent marker. Example provided in this folder: .\n\n\n\nDifficulty Breakdown\n\nGroup Introduction\n\nArrange the balloons in a line. You can use string or tape to ensure they stay in place.\nPrepare several different sequences for demonstration and practice (e.g., 000, 010, 011, 100, 110, 111).\nExplain to the students that each balloon represents a binary digit (bit), and the position of the balloon determines its value in the binary number system.\nExplain that the index of the first balloon is always zero and increases from there.\nExplain the formula for decoding binary into decimal numbers.\nProvide examples of how binary is used in real life.\n\n\n\nBeginner\n\nBreak the students down into small groups.\nEach group should recieve a reference sheet, some balloons, and materials for caluclations.\nHave the students take turns mixing the balloons and decoding their decimal counterart.\n🔍 Focus Skills: computational thinking, problem-solving\n\n\n\nIntermediate\n\nBreak the students down into small groups.\nEach group should recieve a reference sheet, some balloons, and materials for caluclations.\nHave the students take turns mixing the balloons and decoding their decimal counterart.\nHave the groups mix their balloons with one another. After both groups have reached a decoded answer, bring the groups together to compare their answers. If they got the same answer, discuss how they arrived at it.\n🔍 Focus Skills: computational thinking, problem-solving"
  },
  {
    "objectID": "activities/02activity/02activity.html#reflection",
    "href": "activities/02activity/02activity.html#reflection",
    "title": "Activity 2: Binary & Balloons",
    "section": "Reflection",
    "text": "Reflection\nAsk the following questions to stimulate discussion:\n\nWhat was the most challenging part of the activity?\nDid you find it easier to understand binary numbers after the activity? Why or why not?\nCan you think of other ways binary numbers might be used in the real world?"
  },
  {
    "objectID": "activities/02activity/02activity.html#learning-outcomes",
    "href": "activities/02activity/02activity.html#learning-outcomes",
    "title": "Activity 2: Binary & Balloons",
=======
    "text": "Materials Required\nPer Robot:\n\nPVC Pipe of Various Sizes:\n\n2 × 7” long ½” PVC\n4 × 6” long ½” PVC\n2 × 5” long ½” PVC\n2 × 3” long ½” PVC\n4 × 2” long ½” PVC\n6 × 1” long ½” PVC\n\n10 × ½” PVC Corner piece SxS\n6 × ½” PVC T pieces SxSxS\nZip ties\nNetting\n\nOptional: Build Frame Steps PDF"
  },
  {
    "objectID": "middle_school/03activity/03activity.html#learning-outcomes",
    "href": "middle_school/03activity/03activity.html#learning-outcomes",
    "title": "Activity 3: Building an ROV Frame",
>>>>>>> main
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nUnderstand what an ROV is and identify its core components.\nCompare different underwater movement systems and ROV layouts.\nApply design thinking and basic engineering principles to construct an ROV frame.\nCollaborate in teams to solve real-world-inspired challenges."
  },
  {
    "objectID": "middle_school/03activity/03activity.html#agenda",
    "href": "middle_school/03activity/03activity.html#agenda",
    "title": "Activity 3: Building an ROV Frame",
    "section": "Agenda",
    "text": "Agenda\n\n1. Gather Your Materials\nPull from the main supply these materials:\n\n2x 7 in long ½ in PVC Pipe\n4x 6 in long ½ in PVC Pipe\n2x 5 in long ½ in PVC Pipe\n2x 3 in long ½ in PVC Pipe\n4x 2 in long ½ PVC Pipe\n6x 1 in long ½ in PVC Pipe\n10 ½ in PVC Corner piece SxS\n6 ½ in PVC T pieces SxSxS\n\n\n\n2. Build the Frame\n\nThe Base\n\nStart with the 2 in long PVCs and use a T piece with the exit hole facing the ceiling\n\n\n\n\nBase T\n\n\n\nNow attach 2 corner pieces on the other end of the 2 inch long pieces\n\n\n\n\nBase C\n\n\n\nPut the 1 in pieces on the other end of each corner piece. It should look like a U shape\n\n\n\n\nBase C+\n\n\n\nThen attach a T piece with the middle whole facing upwards to the ends of the 1 in pieces.\n\n\n\n\nBase C+T\n\n\n\nContinuing the build the base, attach a 5 inch PVC piece to the other end of the T piece opposite of the 1 inch pieces\n\n\n\n\nBase U\n\n\n\nThen attach 2 more T piece to the other ends of the 5 inch PVC pieces\n\n\n\n\nBase U+T\n\n\n\nOn the side opposite of the 5 inch pieces, put 1 inch pieces\n\n\n\n\nBase U+T+\n\n\n\nPut 2 corner pieces on the ends of the 1 inch pieces you just places and point the end of the corner facing the ceiling\n\n\n\n\nBase Final\n\n\n\n\nVertical Motor Holder (VMH)\n\nPlace the 3-inch long PVC in each of the middle holes\n\n\n\n\nVMH start\n\n\n\nThen put a corner piece on the other ends of the 3 inch long pieces where each hole is facing towards the center\n\n\n\n\nVMH+C\n\n\n\nConnect the two corners with two 2 inch pieces on each side\n\n\n\n\nVMH+L\n\n\n\nPut a T piece in the center with the exit hole facing towards the front of the ROV\n\n\n\n\nVMH+T\n\n\n\n\nTop of the Frame\n\nPlace two 6 inch pieces in the front holes and two 6 inch pieces in the holes towards the back\n\n\n\n\nTop Start\n\n\n\nPut a corner piece on the other end of each of the 6 inch pieces with the exit hole facing towards the piece in the same line\n\n\n\n\nTop+C\n\n\n\nConnect the corners together with two 7 inch pieces\n\n\n\n\nTop+L\n\n\n\nAdd 2 more 1 inch pieces to the left over T holes. We will be using them to attach our motors later\nCarefully use a rubber mallet to make sure the pieces are all tightly in place\nNow the frame is complete\n\n\n\n\n3. Add Netting\n\nCut the Netting\n\nThe goal is to create a net pocket for weights later on. First cut a large piece of net the same width and length as your frame base but add an extra inch to the outside perimeter\n\n\n\n\nCut Netting\n\n\n\nCut a smaller piece for the pocket that is smaller than the width of the inside of the base\n\n\n\n\nCut Pocket\n\n\n\n\nZip-tie the Netting\n\nUse Zip-ties to secure the larger piece to the base PVC pieces. Make sure it is secure on all sides. Note that the open end will be for the closed part of our pocket\n\n\n\n\nZip-Ties\n\n\n\n\n\nZip-Tie Close up\n\n\n\n\n\nZip-Ties\n\n\n\nTrim excess net off the edge and cut the excess zip-tie ends\n\n\n\n\nZip-Ties and netting trimmed\n\n\n\nNow secure the pocket net piece to the the top of the base net piece. Leave one edge open enough to slip small rocks or weights into it is recommended to use the edge that will be closest to the forward/backward motor as the opening and the edge that has no PVC as a closed part with zipped ties\n\n\n\n\nZip-Tie pocket\n\n\n\n\n\nZip-Tie pocket closed end\n\n\n\n\n\nZip-Tie pocket example\n\n\n\nCut excess zip-tie ends\n\n\n\n\n4. Add Floats\n\nAttaching the Floats\n\nCut 2 pieces of pool noodle to fit on the top horizontal piece of the ROV. They have to be less than the length of the PVC piece it is on or it will not fit.\nCarefully pull out the piece you would like to attach the floats onto and slide in onto the PVC pipe.\nReattach the piece you moved\n\n\n\n\nFloats Example 1\n\n\n\n\n\nFloats Example 2\n\n\n\n\n\n5. Extensions\n\nIf there is time left over have the students design an ROV logo in Canva\nYou could also work on customizing the ROVs"
  },
  {
    "objectID": "middle_school/03activity/03activity.html#reflection",
    "href": "middle_school/03activity/03activity.html#reflection",
    "title": "Activity 3: Building an ROV Frame",
    "section": "Reflection",
    "text": "Reflection\n\nWhat challenges did you face when building your ROV frame?\nHow do you think it will perform in water?\nIf you could add one new feature or improvement to an ROV, what would it be?"
  },
  {
    "objectID": "middle_school/03activity/03activity.html#learning-outcomes-1",
    "href": "middle_school/03activity/03activity.html#learning-outcomes-1",
    "title": "Activity 3: Building an ROV Frame",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nUnderstand what an ROV is and identify its core components.\nCompare different underwater movement systems and ROV layouts.\nApply design thinking and basic engineering principles to construct an ROV frame.\nCollaborate in teams to solve real-world-inspired challenges."
  },
  {
    "objectID": "middle_school/02activity/02activity.html",
    "href": "middle_school/02activity/02activity.html",
    "title": "Activity 2: Coding with Arduino",
    "section": "",
    "text": "In this 30-minute session, students will explore coding with Arduino by building a circuit with 3 single-color LEDs and 1 RGB LED. They’ll learn how to use digital and PWM pins to control light patterns and colors, and write basic Arduino sketches to make lights blink and fade."
  },
  {
    "objectID": "middle_school/02activity/02activity.html#description",
    "href": "middle_school/02activity/02activity.html#description",
    "title": "Activity 2: Coding with Arduino",
    "section": "",
    "text": "In this 30-minute session, students will explore coding with Arduino by building a circuit with 3 single-color LEDs and 1 RGB LED. They’ll learn how to use digital and PWM pins to control light patterns and colors, and write basic Arduino sketches to make lights blink and fade."
  },
  {
    "objectID": "middle_school/02activity/02activity.html#materials-required",
    "href": "middle_school/02activity/02activity.html#materials-required",
    "title": "Activity 2: Coding with Arduino",
    "section": "Materials Required",
    "text": "Materials Required\n\n1 Arduino Uno or equivalent per student\n\n6 or more male-to-male hookup wires\n\n3 x 470 ohm resistors (or similar)\n\n3 LEDs of any color\n\n1 RGB LED"
  },
  {
    "objectID": "middle_school/02activity/02activity.html#presentation-link",
    "href": "middle_school/02activity/02activity.html#presentation-link",
    "title": "Activity 2: Coding with Arduino",
    "section": "Presentation Link",
    "text": "Presentation Link"
  },
  {
    "objectID": "middle_school/02activity/02activity.html#presentation-pdf",
    "href": "middle_school/02activity/02activity.html#presentation-pdf",
    "title": "Activity 2: Coding with Arduino",
    "section": "Presentation PDF",
    "text": "Presentation PDF"
  },
  {
    "objectID": "middle_school/02activity/02activity.html#learning-outcomes",
    "href": "middle_school/02activity/02activity.html#learning-outcomes",
    "title": "Activity 2: Coding with Arduino",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nUnderstand the difference between digital and PWM pins on Arduino\n\nBuild a circuit using multiple LEDs and resistors\n\nUse digitalWrite() to blink LEDs\n\nUse analogWrite() to control an RGB LED’s color\n\nDebug common wiring/code errors"
  },
  {
    "objectID": "middle_school/02activity/02activity.html#agenda",
    "href": "middle_school/02activity/02activity.html#agenda",
    "title": "Activity 2: Coding with Arduino",
    "section": "Agenda",
    "text": "Agenda\n\n1. Introduction to LED Control\n\nReview: What is an LED?\n\nPolarity and how to wire an LED safely\n\nUsing resistors with LEDs\n\n\n\n2. Blinking 3 LEDs\n\nConnect 3 single-color LEDs to pins 11, 12, and 13\n\nUse digitalWrite() and delay()\n\nChallenge: Create a pattern (e.g., traffic light or chase light)\n\n\n\n3. RGB LED Basics\n\nCommon Anode vs. Cathode RGB LEDs\n\nUse PWM pins (9, 10, 11) for red, green, and blue\n\nCreate solid colors and mixes using analogWrite()\n\n\n\n4. Example Code Snippets\n\nLesson 1: Blink\n/*\n  Blink\n\n  Turns an LED on for one second, then off for one second, repeatedly.\n\n  Most Arduinos have an on-board LED you can control. On the UNO, MEGA and ZERO\n  it is attached to digital pin 13, on MKR1000 on pin 6. LED_BUILTIN is set to\n  the correct LED pin independent of which board is used.\n  If you want to know what pin the on-board LED is connected to on your Arduino\n  model, check the Technical Specs of your board at:\n  https://www.arduino.cc/en/Main/Products\n\n  modified 8 May 2014\n  by Scott Fitzgerald\n  modified 2 Sep 2016\n  by Arturo Guadalupi\n  modified 8 Sep 2016\n  by Colby Newman\n\n  This example code is in the public domain.\n\n  https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink\n*/\n\n// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);  // turn the LED on (HIGH is the voltage level)\n  delay(1000);                      // wait for a second\n  digitalWrite(LED_BUILTIN, LOW);   // turn the LED off by making the voltage LOW\n  delay(1000);                      // wait for a second\n}\n\n\nLesson 2: Multiple Blinking Lights\n/*\n  Blink 3 \n*/\n\n// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(13, OUTPUT);\n  pinMode(12, OUTPUT);\n  pinMode(11, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(13, HIGH);  // turn the LED on (HIGH is the voltage level)\n  delay(1000);                      // wait for a second\n  digitalWrite(13, LOW);   // turn the LED off by making the voltage LOW\n  delay(1000);                      // wait for a second\n  digitalWrite(12, HIGH);  // turn the LED on (HIGH is the voltage level)\n  delay(1000);                      // wait for a second\n  digitalWrite(12, LOW);   // turn the LED off by making the voltage LOW\n  delay(1000);  \n  digitalWrite(11, HIGH);  // turn the LED on (HIGH is the voltage level)\n  delay(1000);                      // wait for a second\n  digitalWrite(11, LOW);   // turn the LED off by making the voltage LOW\n  delay(1000);              \n}\n\n\nLesson 3: RGB LED Mixing\n// Source https://learn.adafruit.com/adafruit-arduino-lesson-3-rgb-leds/arduino-sketch\n\nvoid setup()\n{\n  pinMode(11, OUTPUT); // Red Pin\n  pinMode(10, OUTPUT); // Green Pin\n  pinMode(9, OUTPUT);  // Blue Pin\n}\n\nvoid  loop() {\n  setColor(255, 0, 0); // Red Color\n  delay(1000);\n  setColor(0,  255, 0); // Green Color\n  delay(1000);\n  setColor(0, 0, 255); // Blue Color\n  delay(1000);\n  setColor(255, 255, 255); // White Color\n  delay(1000);\n  setColor(170, 0, 255); // Purple Color\n  delay(1000);\n  setColor(127, 127,  127); // Light Blue\n  delay(1000);\n}\n\nvoid setColor(int redValue, int greenValue,  int blueValue) {\n  analogWrite(11, redValue);\n  analogWrite(10,  greenValue);\n  analogWrite(9, blueValue);\n}\n\n\nLesson 4: Color Fade\n// Source https://www.reddit.com/r/arduino/comments/9ry4mg/fading_rgb_leds_through_the_color_spectrum/\n\nint red = 11; \nint green = 10;\nint blue = 9;\nint t = 10; // Time for delay\n\nvoid setup(){\n    pinMode(red, OUTPUT);\n    pinMode(green, OUTPUT);\n    pinMode(blue, OUTPUT);\n}\nvoid Fade(){\n  for( int i = 0; i &lt;= 255; i++){\n    analogWrite(red, i); // fade up \n    analogWrite(green, 255 - i); // fade down\n    analogWrite(blue, 0); // do nothing\n    delay(t);\n  }\n  for( int i = 0; i &lt;= 255; i++){\n    analogWrite(red, 255 - i); // fade down\n    analogWrite(green, 0); // do nothing\n    analogWrite(blue, i); // fade up \n    delay(t);\n  }\n    for( int i = 0; i &lt;= 255; i++){\n    analogWrite(red, 0); // do nothing\n    analogWrite(green, i); // fade up\n    analogWrite(blue, 255 - i); // fade down \n    delay(t);\n  }\n} \nvoid loop(){\nFade();\n}\n\n\n\n5. Extensions\n\nUse loops to fade between colors\nAdd a button to change LED patterns\nBuild a mini light show"
  },
  {
    "objectID": "middle_school/02activity/02activity.html#reflection",
    "href": "middle_school/02activity/02activity.html#reflection",
    "title": "Activity 2: Coding with Arduino",
    "section": "Reflection",
    "text": "Reflection\n\nWhich part of wiring the LEDs was most confusing?\nWhat would you try next with an RGB LED?\nHow could this be applied in real-world projects?"
  },
  {
    "objectID": "middle_school/02activity/02activity.html#questions-to-ask",
    "href": "middle_school/02activity/02activity.html#questions-to-ask",
    "title": "Activity 2: Coding with Arduino",
    "section": "Questions to Ask",
    "text": "Questions to Ask\n\nWhat’s the purpose of a resistor in your circuit?\nHow could you make your circuit interactive?\nWhat happens if you remove the delay in your code?"
  },
  {
    "objectID": "middle_school/01activity/01activity.html",
    "href": "middle_school/01activity/01activity.html",
    "title": "Activity 1: Intro to Arduino",
    "section": "",
    "text": "This 30-minute activity introduces middle school students to Arduino by guiding them through the process of wiring a basic LED circuit using a breadboard and Arduino Uno—no programming required. Students will learn the fundamentals of electronics, including how to safely and effectively connect components."
  },
  {
    "objectID": "middle_school/01activity/01activity.html#description",
    "href": "middle_school/01activity/01activity.html#description",
    "title": "Activity 1: Intro to Arduino",
    "section": "",
    "text": "This 30-minute activity introduces middle school students to Arduino by guiding them through the process of wiring a basic LED circuit using a breadboard and Arduino Uno—no programming required. Students will learn the fundamentals of electronics, including how to safely and effectively connect components."
  },
  {
    "objectID": "middle_school/01activity/01activity.html#materials-required",
    "href": "middle_school/01activity/01activity.html#materials-required",
    "title": "Activity 1: Intro to Arduino",
    "section": "Materials Required",
    "text": "Materials Required\nPer student:\n\n1 Arduino Uno or equivalent\n\n1 Breadboard\n\n2 pieces of hookup wire (male-to-male)\n\n1 LED of any color\n\n1 470 ohm resistor (or close to it)\n\n1 10k ohm resistor (or greater)\n\n1 Arduino USB cable"
  },
  {
    "objectID": "middle_school/01activity/01activity.html#presentation-link",
    "href": "middle_school/01activity/01activity.html#presentation-link",
    "title": "Activity 1: Intro to Arduino",
    "section": "Presentation Link",
    "text": "Presentation Link"
  },
  {
    "objectID": "middle_school/01activity/01activity.html#presentation-pdf",
    "href": "middle_school/01activity/01activity.html#presentation-pdf",
    "title": "Activity 1: Intro to Arduino",
    "section": "Presentation PDF",
    "text": "Presentation PDF"
  },
  {
    "objectID": "middle_school/01activity/01activity.html#learning-outcomes",
    "href": "middle_school/01activity/01activity.html#learning-outcomes",
    "title": "Activity 1: Intro to Arduino",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students will be able to:\n\nIdentify parts of the Arduino Uno\nUnderstand how breadboards function\nBuild a basic circuit to power an LED\nDemonstrate knowledge of polarity and resistance\nTroubleshoot common circuit connection issues"
  },
  {
    "objectID": "middle_school/01activity/01activity.html#activity-steps",
    "href": "middle_school/01activity/01activity.html#activity-steps",
    "title": "Activity 1: Intro to Arduino",
    "section": "Activity Steps",
    "text": "Activity Steps\n\n1. What is Arduino?\n\nOpen-source electronics platform\nUses programmable microcontrollers\nControlled via USB and written in a C++-like language\nGreat for prototyping\n\n\n\n2. Parts of the Arduino UNO\n\nUSB-B port (for programming)\nDigital pins (on/off signals)\nAnalog pins (range of values, ideal for sensors)\nPower pins (5V, 3.3V, GND)\n\n\n\n3. Breadboard Basics\n\nBlue (GND) and Red (PWR) buses connect vertically\nRows connect horizontally, separated in the middle\nEasy for prototyping and modifying connections\n\n\n\n4. LED Orientation\n\nLong leg = positive (connect to power)\nShort leg = negative (connect to ground)\nLED only lights in one direction\n\n\n\n5. Resistor Function\n\nLimits electrical current\n470Ω protects the LED\n10kΩ dims the LED significantly\nHigher resistance = dimmer LED\n\n\n\n6. Build Your First Circuit\nStep-by-step: 1. Connect GND to blue bus on breadboard\n2. Connect 5V to red bus\n3. Insert 470Ω resistor from blue bus to row 10\n4. Place short leg of LED in row 10, long leg into red bus\n5. Plug in Arduino and power it up\n6. LED should light up!"
  },
  {
    "objectID": "middle_school/01activity/01activity.html#questions-to-ask",
    "href": "middle_school/01activity/01activity.html#questions-to-ask",
    "title": "Activity 1: Intro to Arduino",
    "section": "Questions to Ask",
    "text": "Questions to Ask\n\nCan you trace the flow of electricity from GND to 5V?\nWhat changes when you use the 10kΩ resistor instead of 470Ω?\nDo different colored LEDs vary in brightness?\nCan you add a second LED with the same color and parts? (Try 2 methods!)"
  },
  {
    "objectID": "middle_school/01activity/01activity.html#reflection",
    "href": "middle_school/01activity/01activity.html#reflection",
    "title": "Activity 1: Intro to Arduino",
    "section": "Reflection",
    "text": "Reflection\n\nWhat did you find easy or hard about building the circuit?\nWhat would you change about how you built it?\nWhat else would you like to build with Arduino?"
  },
  {
    "objectID": "k-6_activities/24activity/index.html",
    "href": "k-6_activities/24activity/index.html",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "",
    "text": "Instructions given on how to use the app to control the dash bots. Have the students create a path on a whiteboard and use the app to move the Dash bot to said path. Free play for rest of time."
  },
  {
    "objectID": "k-6_activities/24activity/index.html#description",
    "href": "k-6_activities/24activity/index.html#description",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Description",
    "text": "Description\nIn this activity, students will use Dash Bots to create various paths made up of different movements, sounds, and light changes. Students will create a plan for their Dash on a whiteboard, and then take turns driving the Dash through their created path. After students progress through the unique pathways challenge, they will be free to attempt more complex challenges or experiment with free play. This approach fosters a natural creativity the students may have, and will allow them to learn more about the Dash’s abilities through firsthand experience."
  },
  {
    "objectID": "k-6_activities/24activity/index.html#time-required",
    "href": "k-6_activities/24activity/index.html#time-required",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "k-6_activities/24activity/index.html#materials-required",
    "href": "k-6_activities/24activity/index.html#materials-required",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Materials Required",
    "text": "Materials Required\n\nDash Bots\nDash Bot App: Wonder (IPAD)\nWhiteboard\nDry Erase Marker\n\n\nStep 1: Distribution of Materials\n\nStudents will be split into groups of two. Each group will be given an IPAD, a Dash bot, a dry erase marker, and a whiteboard.\nEnsure there is one Dash bot for every group of students. If there are more students than available Dash bots or IPADS, increasing the number of students per group is the best option.\n\nWhen pairing students, ensure they take equal turns using the device.\n\n\n\n\nStep 2: Making the Pathway\n\nStudents should be familiar with the Dash bot application, which uses buttons to control movement. To refresh their awareness and to help with the lesson, have them attempt to mess the Dash Bot for 2 minutes. Now that they are refreshed, have the students use their whiteboard materials to create a pathway utilizing the different aspects of the Dash bot.\nOnce the pathway has been created, have the students use the ipad to traverse the bot through the pathway they made. Make sure both students get a turn to try.\n\n\n\nStep 3: Follow-up Challenge or Free Play\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student finishes their pathway, have them reposition the Blue Bot as designated by the ipad’s new pathway.\nAfter meeting their marked goals, allow them the chpice to create another pathway or engage in free play with te Dash bot.\n\nIf partaking in another path, ask them to keep track of how many times they meet their goal."
  },
  {
    "objectID": "k-6_activities/24activity/index.html#reflection",
    "href": "k-6_activities/24activity/index.html#reflection",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask how many of them were able to complete their pathways and, if applicable, they had any troubles. Additionally, for those who kept count, ask how many times they were able to complete their pathways.\n\nWhat directional combinations were tricky and why?\nWere there any pathways you found to be easy?\nHow many times were you able to finish your pathways?"
  },
  {
    "objectID": "k-6_activities/24activity/index.html#summary",
    "href": "k-6_activities/24activity/index.html#summary",
    "title": "Activity 24: Dash Bots Pathway Challenge and Free Play",
    "section": "Summary",
    "text": "Summary\n\nBy programming Dash bots to navigate pathways with various movement, audio, and visual cues, students develop an understanding of how different condition combinations affect the final result of a program. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different sequence combinations."
  },
  {
<<<<<<< HEAD
    "objectID": "activities/16activity/16activity.html",
    "href": "activities/16activity/16activity.html",
    "title": "Activity 16: Manual Control and Bulldozing Challenge",
    "section": "",
    "text": "In this action-packed session, students will tackle two creative missions with Dash: Basketball Challenge and Castle Siege. Each task is designed with increasing difficulty by grade level, allowing students to build their programming logic as they play.\nUsing Blockly, students will control Dash to move, aim, and launch in order to complete each objective. Along the way, they’ll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops—all wrapped inside a fun, interactive story."
=======
    "objectID": "k-6_activities/21activity/index.html",
    "href": "k-6_activities/21activity/index.html",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "",
    "text": "In this activity, students will use Blue-Bots to create squares made up of forward movements and left or right turns. After students progress through the sqaure challenge, they will attempt more complex challenges of driving the BlueBot from one point to another starting from various points. This approach fosters critical thinking and problem-solving skills while enhancing their understanding of the relationship between input and output in programming."
>>>>>>> main
  },
  {
    "objectID": "k-6_activities/21activity/index.html#description",
    "href": "k-6_activities/21activity/index.html#description",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "",
    "text": "In this activity, students will use Blue-Bots to create squares made up of forward movements and left or right turns. After students progress through the sqaure challenge, they will attempt more complex challenges of driving the BlueBot from one point to another starting from various points. This approach fosters critical thinking and problem-solving skills while enhancing their understanding of the relationship between input and output in programming."
  },
  {
    "objectID": "k-6_activities/21activity/index.html#time-required",
    "href": "k-6_activities/21activity/index.html#time-required",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "k-6_activities/21activity/index.html#materials-required",
    "href": "k-6_activities/21activity/index.html#materials-required",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "Materials Required",
    "text": "Materials Required\n\nBlue-Bots\nBlue-Bot App: Blue’s Bloc (IPAD)\nBlue-Bots Map\nSquare Challenge Paper Instructions\n\n\nStep 1: Setting Up a Grid Map\n\nEach map should have at least two students, an ipad, a Blue Bot, and two copies of the paper instructions.\nEnsure there is one Blue-Bot for every Blue Bots map. If there are more students than available maps or Blue-Bots, pairing them is the best option.\n\nWhen pairing students, ensure they take equal turns using the device.\n\nUse the ipad to generate random A-to-B pathways for the students to drive the Blue Bot through and place the bot on the starting place shown on the app.\n\n\n\nStep 2: Explaining the Conditional Sheet\n\nStudents should be familiar with the Blue-Bots application, which uses code blocks or buttons to control movement. To refresh their awareness and with the help of the instruction paper, have them attempt to move the Blue Bot in two square rotations. Make one with only forward and left movements, and one with only forward and right movements.\nOnce the sqaure challenge has been completed, set up the map to resemble the A-to-B generated by the ipad. Have the students use the ipad directions to traverse the bot using different direction cobinations.\n\n\n\nStep 3: Completing the Map\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student finishes their pathway, have them reposition the Blue Bot as designated by the ipad’s new pathway.\nAfter meeting their marked goals twice, allow them to modify the A-to-B pathways and provide guidance if their courses are not conditionally possible.\nOnce modifying their courses, ask them to keep track of how many times they meet their goal."
  },
  {
    "objectID": "k-6_activities/21activity/index.html#reflection",
    "href": "k-6_activities/21activity/index.html#reflection",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "Reflection",
    "text": "Reflection\nAt the end of the activity, gather the students and ask how many of them were able to create their squares and where, if applicable, they had any troubles. Additionally, for those who kept count, ask how many times they were able to complete their pathways. - What directional combinations were tricky and why? - Were there any pathways you found to be easy? - How many times were you able to finish your A-to-B pathways?"
  },
  {
    "objectID": "k-6_activities/21activity/index.html#summary",
    "href": "k-6_activities/21activity/index.html#summary",
    "title": "Activity 21: Shapes and A-to-B Movements with Blue-Bots",
    "section": "Summary",
    "text": "Summary\nBy programming Blue-Bots to navigate maps with specific constraints, students develop an understanding of how conditions affect movement and decision-making. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different coding sequences."
  },
  {
    "objectID": "k-6_activities/19activity/index.html",
    "href": "k-6_activities/19activity/index.html",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "",
    "text": "In this fun and interactive activity, students will explore pattern recognition by first learning how to identify different patterns using shapes. After practicing identifying patterns, students will play a creative game where they can mix and match shapes to create their own unique patterns and challenge their peers to figure out how their patterns work!"
  },
  {
    "objectID": "k-6_activities/19activity/index.html#description",
    "href": "k-6_activities/19activity/index.html#description",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "",
    "text": "In this fun and interactive activity, students will explore pattern recognition by first learning how to identify different patterns using shapes. After practicing identifying patterns, students will play a creative game where they can mix and match shapes to create their own unique patterns and challenge their peers to figure out how their patterns work!"
  },
  {
    "objectID": "k-6_activities/19activity/index.html#time-required",
    "href": "k-6_activities/19activity/index.html#time-required",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "k-6_activities/19activity/index.html#important-note",
    "href": "k-6_activities/19activity/index.html#important-note",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Important Note",
    "text": "Important Note\nThis activity is similar to Activity 7. While both activities focus on identifying, creating, and extending patterns, Activity 7 is more comprehensive, incorporating pattern analysis, puzzle solving, and a coding extension using Blockly Turtle. On the other hand, Activity 19 offers a shorter, more interactive experience, where students create patterns and engage in a fun game of guessing each other’s patterns, making it more suitable for younger students."
  },
  {
    "objectID": "k-6_activities/19activity/index.html#materials-required",
    "href": "k-6_activities/19activity/index.html#materials-required",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Materials Required",
    "text": "Materials Required\n\nShape cutouts (linked below!)\n\n\nStep 1: Learning the Basics of Patterns\n\nBegin by introducing the students to different types of patterns, such as alternating shapes (e.g., circle, square, circle, square), repeating sequences (e.g., red, blue, red, blue), or growing patterns (e.g., one, two, three, four).\nUse a large whiteboard or paper to draw out simple examples of each type of pattern, explaining how each pattern works and how to identify what comes next.\n\n\n\nStep 2: Practice Identifying Patterns\n\nHand out shape cutouts to the students and ask them to identify the next shape in a given sequence.\nFor example, if the pattern is circle, square, circle, square, ask them to identify what shape comes next. You can also introduce variations such as color patterns or number patterns.\nGive the students a few different sequences to practice with, reinforcing how to spot and predict the next part of a pattern.\n\n\n\nStep 3: Creating Their Own Patterns\n\nEncourage students to mix and match the shape cutouts to create their own patterns on the paper or whiteboard.\nAs they work, ask them to think about how their patterns work—whether they repeat, alternate, or grow.\nAllow the students to share their patterns with the class and ask their peers to guess how the patterns work.\n\n\n\nStep 4: Peer Challenge Game\n\nOnce each student has created their pattern, let them challenge their peers to identify the pattern they made.\nStudents will take turns presenting their patterns to the group, while the rest of the class tries to figure out how the pattern works. This encourages teamwork and sharpens their pattern recognition skills."
  },
  {
    "objectID": "k-6_activities/19activity/index.html#link-to-the-sheets-of-patterns.",
    "href": "k-6_activities/19activity/index.html#link-to-the-sheets-of-patterns.",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Link to the sheets of patterns.",
    "text": "Link to the sheets of patterns.\nSave the sheets of patterns that can be used for the session!"
  },
  {
    "objectID": "k-6_activities/19activity/index.html#reflection",
    "href": "k-6_activities/19activity/index.html#reflection",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask them about the patterns they created. Discuss the following questions:\n\nHow did you come up with your pattern?\nWas it easy or hard to guess how your peer’s pattern worked? Why?\nWhat kinds of patterns did you like creating the most?"
  },
  {
    "objectID": "k-6_activities/19activity/index.html#summary",
    "href": "k-6_activities/19activity/index.html#summary",
    "title": "Activity 19: Paper Pattern Recognition",
    "section": "Summary",
    "text": "Summary\n\nBy creating and identifying patterns, students will strengthen their logical thinking and problem-solving skills. This activity fosters creativity while also helping young learners develop an understanding of sequences, repetition, and structure—key skills in both mathematics and everyday life."
  },
  {
    "objectID": "k-6_activities/17activity/17activity.html",
    "href": "k-6_activities/17activity/17activity.html",
    "title": "Activity 17: Facts and Questions",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of prompt engineering. Prompt engineering involves creating well-structured inputs, or prompts, that effectively guide generative AI models to produce desired outputs. Students will be presented with specific facts on various topics and tasked with matching them to corresponding questions. These questions will range from vague, incomplete inquiries to more precise, well-defined ones that align closely with the provided facts. Following this, students will create their own facts and formulate both vague and specific questions based on those facts. Other students will then review these questions and determine whether they are vague or specific. This exercise encourages critical thinking and reinforces the importance of clarity in question formulation."
  },
  {
    "objectID": "k-6_activities/17activity/17activity.html#description",
    "href": "k-6_activities/17activity/17activity.html#description",
    "title": "Activity 17: Facts and Questions",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of prompt engineering. Prompt engineering involves creating well-structured inputs, or prompts, that effectively guide generative AI models to produce desired outputs. Students will be presented with specific facts on various topics and tasked with matching them to corresponding questions. These questions will range from vague, incomplete inquiries to more precise, well-defined ones that align closely with the provided facts. Following this, students will create their own facts and formulate both vague and specific questions based on those facts. Other students will then review these questions and determine whether they are vague or specific. This exercise encourages critical thinking and reinforces the importance of clarity in question formulation."
  },
  {
    "objectID": "k-6_activities/17activity/17activity.html#materials-required",
    "href": "k-6_activities/17activity/17activity.html#materials-required",
    "title": "Activity 17: Facts and Questions",
    "section": "Materials required",
    "text": "Materials required\n\nPROMPT ENGINNERING SHEET\nPencil"
  },
  {
    "objectID": "k-6_activities/17activity/17activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/17activity/17activity.html#steps-to-conduct-the-activity",
    "title": "Activity 17: Facts and Questions",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nStudents will first complete the prompt enginnering sheet\nDirect the students to create 2 facts based on one a topic of thier choosing, then prompt then to create two question for each fact one being vauge the other being specific\nPair students in groups of two to switch sheets to ideinfity which question are vauge and specific.\nKeep switching groups until students have rotated at least three times."
  },
  {
    "objectID": "k-6_activities/17activity/17activity.html#reflection",
    "href": "k-6_activities/17activity/17activity.html#reflection",
    "title": "Activity 17: Facts and Questions",
    "section": "Reflection",
    "text": "Reflection\n\nAsk students what part of the actvity they found the hardest. Then ask if they found identifying question or creating them to be harder."
  },
  {
    "objectID": "k-6_activities/17activity/17activity.html#learning-outcomes",
    "href": "k-6_activities/17activity/17activity.html#learning-outcomes",
    "title": "Activity 17: Facts and Questions",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nAs advancements in AI technology continue to grow, prompt engineering has emerged as a critical skill, with increasing demand in the job market. Introducing students to these concepts at an early age will enhance their understanding of how prompt engineering works and how it connects to their existing curriculum, fostering essential skills for the future of technology and innovation. Requiring students to formulate more specific and detailed questions will enhance their ability to identify and construct clear, precise prompts, an essential skill in prompt engineering. This practice not only deepens their understanding of the subject matter but also strengthens their critical thinking and problem-solving abilities, which are vital for success in the evolving field of AI and technology."
  },
  {
    "objectID": "k-6_activities/15activity/15activity.html",
    "href": "k-6_activities/15activity/15activity.html",
    "title": "Activity 15: Arduino",
    "section": "",
    "text": "Students will be introduced to the basics of electronics using Arduino, an open-source microcontroller. They will learn to control the flow of current through LEDs, programming them to turn on and off at specified intervals. This hands-on experience with Arduino will provide them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "k-6_activities/15activity/15activity.html#description",
    "href": "k-6_activities/15activity/15activity.html#description",
    "title": "Activity 15: Arduino",
    "section": "",
    "text": "Students will be introduced to the basics of electronics using Arduino, an open-source microcontroller. They will learn to control the flow of current through LEDs, programming them to turn on and off at specified intervals. This hands-on experience with Arduino will provide them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "k-6_activities/15activity/15activity.html#materials-required",
    "href": "k-6_activities/15activity/15activity.html#materials-required",
    "title": "Activity 15: Arduino",
    "section": "Materials required",
    "text": "Materials required\n\nArduino Instructions: Intro to Basic Electronics with Arduino\nArduino Board and program\nArduino USB connector cable\n3 LEDs\n3 1k ohm resistor\nConnecting Wire"
  },
  {
    "objectID": "k-6_activities/15activity/15activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/15activity/15activity.html#steps-to-conduct-the-activity",
    "title": "Activity 15: Arduino",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nStep 1: Accessesing Arduino Instructions\n\nAcssess insturction in order to run activity Intro to Basic Electronics with Arduino"
  },
  {
    "objectID": "k-6_activities/15activity/15activity.html#reflection",
    "href": "k-6_activities/15activity/15activity.html#reflection",
    "title": "Activity 15: Arduino",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 50-minute mark to discuss progress and challenges\nAsk students to describe what they observed from trying to get the LEDs to light up\nRelate the activity to everday use of certain electironic that work with simalr electonics like LED lights."
  },
  {
    "objectID": "k-6_activities/15activity/15activity.html#learning-outcomes",
    "href": "k-6_activities/15activity/15activity.html#learning-outcomes",
    "title": "Activity 15: Arduino",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nIntroducing students to the fundamentals of electronics equips them with a deeper understanding of how we interact with and manipulate electronic devices. By gaining this foundational knowledge, they can comprehend the essential processes and steps required to make electronic components function effectively. This early exposure not only explains the workings of everyday technology but also fosters curiosity and encourages hands-on experimentation."
  },
  {
    "objectID": "k-6_activities/13activity/activity13.html",
    "href": "k-6_activities/13activity/activity13.html",
    "title": "Activity 13: Sphero Exploration",
    "section": "",
    "text": "Students will utilize Sphero robots to create trails with wooden blocks. This activity is designed to provide them with better practice using the devices in preparation for future activities. To maintain engagement and control, a competition involving the Spheros will be organized, as they can be challenging to maneuver initially."
  },
  {
    "objectID": "k-6_activities/13activity/activity13.html#description",
    "href": "k-6_activities/13activity/activity13.html#description",
    "title": "Activity 13: Sphero Exploration",
    "section": "",
    "text": "Students will utilize Sphero robots to create trails with wooden blocks. This activity is designed to provide them with better practice using the devices in preparation for future activities. To maintain engagement and control, a competition involving the Spheros will be organized, as they can be challenging to maneuver initially."
  },
  {
    "objectID": "k-6_activities/13activity/activity13.html#materials-required",
    "href": "k-6_activities/13activity/activity13.html#materials-required",
    "title": "Activity 13: Sphero Exploration",
    "section": "Materials Required",
    "text": "Materials Required\n\nSpheros\niPads\nWooden Blocks"
  },
  {
    "objectID": "k-6_activities/13activity/activity13.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/13activity/activity13.html#steps-to-conduct-the-activity",
    "title": "Activity 13: Sphero Exploration",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Creating Trails\n\nStart by giving students wooden blocks and direct them to create trails they can use for the Spheros.\nAllow this part to last for at least 10 minutes.\n\n\n\nStep 2: Distributing Spheros\n\nSpheros need iPads to work. Open the Sphero app on the iPad, which will start by trying to find a Sphero to connect to.\nOnce connected, distribute the Spheros to the students. If there are not enough for all the students, create pairs.\n\n\n\nStep 3: Racing Spheros\n\nAfter students have used the Spheros on their own or in pairs for 5 minutes, direct them towards making trails that will allow space for two Spheros to race one another to see who will finish first.\nKeep this part of the activity going until there are 3 minutes left."
  },
  {
    "objectID": "k-6_activities/13activity/activity13.html#reflection",
    "href": "k-6_activities/13activity/activity13.html#reflection",
    "title": "Activity 13: Sphero Exploration",
    "section": "Reflection",
    "text": "Reflection\n\nAfter students have finished cleaning up the wooden blocks, ask them if they found it hard to maneuver the Spheros."
  },
  {
    "objectID": "k-6_activities/13activity/activity13.html#summary",
    "href": "k-6_activities/13activity/activity13.html#summary",
    "title": "Activity 13: Sphero Exploration",
    "section": "Summary",
    "text": "Summary\nThis activity helps students get a better understanding of the device and exposes them to some areas of computer science."
  },
  {
    "objectID": "k-6_activities/11activity/activity11.html",
    "href": "k-6_activities/11activity/activity11.html",
    "title": "Activity 11: Minecraft Designer",
    "section": "",
    "text": "Students will use the Code.org platform to play the Minecraft block coding game. This activity introduces various uses of block coding, making it easier for students to grasp coding concepts through interactive gameplay."
  },
  {
    "objectID": "k-6_activities/11activity/activity11.html#description",
    "href": "k-6_activities/11activity/activity11.html#description",
    "title": "Activity 11: Minecraft Designer",
    "section": "",
    "text": "Students will use the Code.org platform to play the Minecraft block coding game. This activity introduces various uses of block coding, making it easier for students to grasp coding concepts through interactive gameplay."
  },
  {
    "objectID": "k-6_activities/11activity/activity11.html#materials-required",
    "href": "k-6_activities/11activity/activity11.html#materials-required",
    "title": "Activity 11: Minecraft Designer",
    "section": "Materials Required",
    "text": "Materials Required\n\niPad\nCode.org platform: Minecraft Designer"
  },
  {
    "objectID": "k-6_activities/11activity/activity11.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/11activity/activity11.html#steps-to-conduct-the-activity",
    "title": "Activity 11: Minecraft Designer",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Setup and Introduction\n\nOpen the Code.org platform on iPads.\nShow students the introductory video provided before starting the activity.\n\n\n\nStep 2: Engaging with Minecraft Blocks\n\nGuide students through the initial stages of the Minecraft block coding game.\nDisable subsequent instructional videos to encourage independent exploration."
  },
  {
    "objectID": "k-6_activities/11activity/activity11.html#reflection",
    "href": "k-6_activities/11activity/activity11.html#reflection",
    "title": "Activity 11: Minecraft Designer",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 30-minute mark to discuss progress and challenges.\nAsk students to describe what they observed Minecraft mobs doing with the block codes.\nRelate the activity to game development, emphasizing how coding principles translate into interactive gameplay experiences."
  },
  {
    "objectID": "k-6_activities/11activity/activity11.html#learning-outcomes",
    "href": "k-6_activities/11activity/activity11.html#learning-outcomes",
    "title": "Activity 11: Minecraft Designer",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nThis activity demonstrates the foundational steps in creating video games using Minecraft block coding. It explores fundamental computer science concepts, such as the use of loops in game mechanics. Students will gain insights into coding’s role in everyday activities like gaming, fostering a deeper understanding of computational thinking."
  },
  {
    "objectID": "k-6_activities/09activity/09activity.html",
    "href": "k-6_activities/09activity/09activity.html",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "",
    "text": "This activity introduces students to computational thinking by guiding a “robot” through a maze using basic commands. It helps students develop skills in problem-solving, pattern recognition, and algorithmic thinking."
  },
  {
    "objectID": "k-6_activities/09activity/09activity.html#description",
    "href": "k-6_activities/09activity/09activity.html#description",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "",
    "text": "This activity introduces students to computational thinking by guiding a “robot” through a maze using basic commands. It helps students develop skills in problem-solving, pattern recognition, and algorithmic thinking."
  },
  {
    "objectID": "k-6_activities/09activity/09activity.html#materials-required",
    "href": "k-6_activities/09activity/09activity.html#materials-required",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "Materials Required",
    "text": "Materials Required\n\nA printed or drawn maze on paper\nA small car figure or token\nA set of command cards (e.g., move forward, turn left, turn right)"
  },
  {
    "objectID": "k-6_activities/09activity/09activity.html#activity-steps",
    "href": "k-6_activities/09activity/09activity.html#activity-steps",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "Activity Steps",
    "text": "Activity Steps\n\nIntroduction\n\nExplain the concept of computational thinking, which involves breaking down problems into manageable steps, recognizing patterns, and creating algorithms to solve problems.\nIntroduce the maze activity and its goal: to navigate the robot from the start to the finish.\n\n\n\nStep 1: Setting Up\n\nProvide each student or group with a maze, a robot token, and command cards.\nClearly show the starting position and the goal on the maze.\n\n\n\nStep 2: Planning the Route\n\nAsk students to analyze the maze and plan a route for the robot.\nEncourage them to use the command cards to create a sequence of instructions that will guide the robot through the maze.\nHave students lay out the sequence of commands in order.\n\n\n\nStep 3: Executing the Plan\n\nStudents place their robot token at the starting position.\nThey follow their planned sequence of commands to navigate the robot through the maze.\nIf the robot encounters an obstacle or reaches a dead end, students should revise their plan and try again.\n\n\n\nExtension: Blockly Maze Game\n\nOnce students successfully complete the maze activity, they can advance to a more challenging and interactive coding game using an iPad, such as the Blockly Maze Game."
  },
  {
    "objectID": "k-6_activities/09activity/09activity.html#reflection",
    "href": "k-6_activities/09activity/09activity.html#reflection",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "Reflection",
    "text": "Reflection\n\nAfter completing the maze activity, gather students into a group and discuss:\n\nWhat challenges did you face?\nHow did you solve any problems that arose?\nWhat strategies helped you find the correct path?\nDiscuss how this activity relates to real-world computational thinking and problem-solving."
  },
  {
    "objectID": "k-6_activities/09activity/09activity.html#learning-outcomes",
    "href": "k-6_activities/09activity/09activity.html#learning-outcomes",
    "title": "Activity 9: Maze Navigation Activity",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nDevelop computational thinking skills through planning and executing a sequence of steps.\nEnhance problem-solving abilities by identifying patterns and applying appropriate strategies.\n\n\nPicture of the Map\n\n\n\nMap Picture"
  },
  {
    "objectID": "k-6_activities/07activity/07activity.html",
    "href": "k-6_activities/07activity/07activity.html",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "",
    "text": "Children will identify, analyze, and create simple patterns using shapes, colors, or numbers."
  },
  {
    "objectID": "k-6_activities/07activity/07activity.html#objectives",
    "href": "k-6_activities/07activity/07activity.html#objectives",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "",
    "text": "Children will identify, analyze, and create simple patterns using shapes, colors, or numbers."
  },
  {
    "objectID": "k-6_activities/07activity/07activity.html#materials-needed",
    "href": "k-6_activities/07activity/07activity.html#materials-needed",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Materials Needed",
    "text": "Materials Needed\n\nPaper and colored pencils/crayons\nPattern blocks or cut-out shapes\nOptional: A whiteboard and markers"
  },
  {
    "objectID": "k-6_activities/07activity/07activity.html#instructions",
    "href": "k-6_activities/07activity/07activity.html#instructions",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Instructions",
    "text": "Instructions\n\nStep 1: Introduction to Patterns\n\nBegin with a brief discussion about patterns, explaining that patterns are sequences that repeat in a certain order.\nShow examples of simple patterns using shapes and colors:\n\nShapes: ⬛⬛🔴⬛⬛🔴… (Two squares, one circle, repeat)\nColors: 🔵🟢🔵🟢🔵…(Blue, green, repeat)\nNumbers: 1, 2, 1, 2, 1, 2… (Alternating 1 and 2)\n\n\n\n\nStep 2: Identify the Pattern\n\nProvide students with sets of simple sequences and ask them to identify the pattern. Examples:\n\nShapes: 🔺🔺⚫️🔺🔺⚫️…\nColors: 🟡🟡🟠🟡🟡🟠…\nNumbers: 3, 3, 6, 3, 3, 6…\n\n\n\n\nStep 3: Extend the Pattern\n\nOnce students identify the pattern, challenge them to continue the sequence by adding the next few elements.\n\nExample: Sequence: 🔵🔵🟢🔵🔵🟢… (They add 🔵🔵🟢 next)\n\n\n\n\nStep 4: Create Your Own Pattern\n\nInstruct students to create their own simple patterns using shapes, colors, or numbers on paper.\nEncourage them to share their patterns with a partner and see if their partner can identify and extend the pattern.\n\n\n\nStep 5: Pattern Puzzles\n\nCreate “pattern puzzles” where some elements in the sequence are missing, and ask students to fill in the blanks.\n\nExample: Sequence: 🟣, 🟣, 🟤, ___, 🟣, 🟣, 🟤, ___(They fill in with 🟣, 🟣, 🟤)\n\n\n\n\nExtensions\n\nFor students who complete the exercises, introduce them to the coding challenge on Blockly Turtle. This program prompts students to code shapes."
  },
  {
    "objectID": "k-6_activities/07activity/07activity.html#reflection",
    "href": "k-6_activities/07activity/07activity.html#reflection",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Reflection",
    "text": "Reflection\n\nHave students display their patterns and share them with the class to foster pride in their work and appreciation for the diversity of patterns created.\nAfter completing the Blockly Turtle challenge, discuss with students the challenges they faced and how they solved coding problems."
  },
  {
    "objectID": "k-6_activities/07activity/07activity.html#learning-outcomes",
    "href": "k-6_activities/07activity/07activity.html#learning-outcomes",
    "title": "Activity 7: Pattern Recognition Activity - Pattern Detectives",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nStudents will develop the ability to recognize and extend patterns.\nStudents will enhance critical thinking and problem-solving skills.\nStudents will learn to create their own patterns and communicate them effectively."
  },
  {
    "objectID": "k-6_activities/05activity/05activity.html",
    "href": "k-6_activities/05activity/05activity.html",
    "title": "Activity 5: Ozobots",
    "section": "",
    "text": "Students will receive Ozobots and directional mats to collaboratively create intersecting paths. They will be instructed not to allow the Ozobots to collide during the activity. It’s crucial to ensure they start their paths simultaneously to maintain the challenge of avoiding collisions effectively. Initially straightforward, the activity aims to gradually increase complexity. As students master the task, consider removing mats strategically to constrain movement further, promoting continuous skill development and engagement."
  },
  {
    "objectID": "k-6_activities/05activity/05activity.html#description",
    "href": "k-6_activities/05activity/05activity.html#description",
    "title": "Activity 5: Ozobots",
    "section": "",
    "text": "Students will receive Ozobots and directional mats to collaboratively create intersecting paths. They will be instructed not to allow the Ozobots to collide during the activity. It’s crucial to ensure they start their paths simultaneously to maintain the challenge of avoiding collisions effectively. Initially straightforward, the activity aims to gradually increase complexity. As students master the task, consider removing mats strategically to constrain movement further, promoting continuous skill development and engagement."
  },
  {
    "objectID": "k-6_activities/05activity/05activity.html#materials-required",
    "href": "k-6_activities/05activity/05activity.html#materials-required",
    "title": "Activity 5: Ozobots",
    "section": "Materials Required",
    "text": "Materials Required\n\nOzo bot\nDirectional Mats"
  },
  {
    "objectID": "k-6_activities/05activity/05activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/05activity/05activity.html#steps-to-conduct-the-activity",
    "title": "Activity 5: Ozobots",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Forming groups\n\nSplit the students into groups of three\nIf there is an uneven amount of students create groups of four\nIf there is not enough Ozobots for everyone try to create groups that have at least two Ozobots\n\n\n\nStep 2: Creating their Paths\n\nAllow students for up to 10 minutes to create their paths with the option of creating intersections if they want too\nOnce it has hit the 10 minute mark they must all create paths that are intersecting with on another\n\n\n\nStep 3: Restriction\n\nIf students have successfully run through paths at least three times, require them to remove at least one of the directional mats they have. This could be forward, back, stop, dance etc.\nRemove only a maximum of two mats at a time. Do not remove mats that will not allow them to be able to move effectively at all -Example: Removing the forward and back mat at the same time"
  },
  {
    "objectID": "k-6_activities/05activity/05activity.html#reflection",
    "href": "k-6_activities/05activity/05activity.html#reflection",
    "title": "Activity 5: Ozobots",
    "section": "Reflection",
    "text": "Reflection\n\nAsk students what they found challenging about creating their paths with one another\nAsk if they found it harder or easier to work with people or to make paths by themselves\nAsk them if there was anything they wanted to do but didn’t have the time to do."
  },
  {
    "objectID": "k-6_activities/05activity/05activity.html#learning-outcomes",
    "href": "k-6_activities/05activity/05activity.html#learning-outcomes",
    "title": "Activity 5: Ozobots",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nThis activity is designed to enhance students’ computational skills by fostering adaptability and problem-solving in response to varying conditions. It promotes the development of critical thinking abilities crucial for early learners. This simplified introduction to conditional statements is particularly beneficial for kindergarteners, laying a foundational understanding essential for their initial encounters with coding concepts."
  },
  {
    "objectID": "k-6_activities/03activity/03activity.html",
    "href": "k-6_activities/03activity/03activity.html",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "",
    "text": "Kids will learn about sorting by arranging numbered paper strips in order and using different sorting approaches that a computer can take."
  },
  {
    "objectID": "k-6_activities/03activity/03activity.html#description",
    "href": "k-6_activities/03activity/03activity.html#description",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "",
    "text": "Kids will learn about sorting by arranging numbered paper strips in order and using different sorting approaches that a computer can take."
  },
  {
    "objectID": "k-6_activities/03activity/03activity.html#materials-required",
    "href": "k-6_activities/03activity/03activity.html#materials-required",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Materials Required",
    "text": "Materials Required\n\nPaper pieces labelled 1-10\nNotebook & pen"
  },
  {
    "objectID": "k-6_activities/03activity/03activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/03activity/03activity.html#steps-to-conduct-the-activity",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Introduction\n\nUsing paper pieces, label them from 1 to 10.\nInteract with students and ask why they think having things sorted and arranged can be useful.\nExplain the three different sorting methods we will be using: Bubble Sort, Selection Sort, and Insertion Sort.\n\n\n\nStep 2: How Each Sorting Method Works\n\nBubble Sort\n\nBubble Sort: Takes two adjacent pieces and compares them together, arranging them by swapping if they are in the wrong order.\nLay out the numbered paper strips in a random order.\nCompare each pair of adjacent strips and swap them if they are in the wrong order.\nRepeat this process until the strips are sorted.\n\nReference video to be played before activity: Bubble Sort Algorithm\n\n\nSelection Sort\n\nSelection Sort: Repeatedly finds the smallest item in the unsorted part and moves it to the end of the sorted part.\nLay out the numbered paper strips in a random order.\nFind the smallest number among all the strips and move it to the first position.\nFind the next smallest number from the remaining strips and place it next to the first.\nRepeat until all strips are sorted.\n\nReference video to be played before activity: Selection Sort Algorithm\n\n\nInsertion Sort\n\nInsertion Sort: Involves sorting one item at a time by comparing each new item with the items already sorted and inserting it in the correct position.\nLay out the numbered paper strips in a random order.\nStart with the second strip and compare it to the first. Insert it in the correct position (before or after the first strip).\nTake the third strip and compare it to the already sorted strips, inserting it in the correct position.\nRepeat the process until all strips are sorted.\n\nReference video to be played before activity: Insertion Sort Algorithm"
  },
  {
    "objectID": "k-6_activities/03activity/03activity.html#reflection",
    "href": "k-6_activities/03activity/03activity.html#reflection",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Reflection",
    "text": "Reflection\n\nGather back as a class and ask students which method took them the least amount of time to complete.\nIf the answers vary, ask them why they felt that way.\n\n\nAnswers on Which Algorithm is Usually Faster\n\nBubble Sort: Slow because it has to compare and swap a lot.\nSelection Sort: A little better than bubble sort but still has to make many comparisons.\nInsertion Sort: Often the fastest of the three for small lists because it finds the right spot for each item without many unnecessary moves."
  },
  {
    "objectID": "k-6_activities/03activity/03activity.html#learning-outcomes",
    "href": "k-6_activities/03activity/03activity.html#learning-outcomes",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should:\n\nUnderstand the basic concepts of sorting and why it is useful.\nLearn how to perform Bubble Sort, Selection Sort, and Insertion Sort.\nRecognize the differences in efficiency between the three sorting methods."
  },
  {
    "objectID": "k-6_activities/01activity/01activity.html",
    "href": "k-6_activities/01activity/01activity.html",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "",
    "text": "In this activity, students will learn the fundamentals of if-else-if else (elif) statements through a hands-on lesson involving a model car and a programmable robot (GoPiGo). Students will explore decision-making using block code processes by programming the robot to navigate a multi-way road with a barricade, simulating real-life scenarios where alternate routes must be taken when the primary route is blocked."
  },
  {
    "objectID": "k-6_activities/01activity/01activity.html#description",
    "href": "k-6_activities/01activity/01activity.html#description",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "",
    "text": "In this activity, students will learn the fundamentals of if-else-if else (elif) statements through a hands-on lesson involving a model car and a programmable robot (GoPiGo). Students will explore decision-making using block code processes by programming the robot to navigate a multi-way road with a barricade, simulating real-life scenarios where alternate routes must be taken when the primary route is blocked."
  },
  {
    "objectID": "k-6_activities/01activity/01activity.html#materials-required",
    "href": "k-6_activities/01activity/01activity.html#materials-required",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Materials Required",
    "text": "Materials Required\n\nModel car\nTwo-/three-way road setup. Picture of demo map is shown below.\nBarricade (mini yellow cones)\nGoPiGo robot\nLaptop configured for GoPiGo"
  },
  {
    "objectID": "k-6_activities/01activity/01activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/01activity/01activity.html#steps-to-conduct-the-activity",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Topic Explanation\n\nUse simple examples to illustrate the concept of if-else statements, such as deciding whether to bring an umbrella based on whether it is raining.\n\n\n\nStep 2: Explain the Problem\n\nShow the students a model car on a three-way road. Place a barricade on one of the roads, explaining that the primary route is blocked due to construction.\nIllustrate how and why the car needs to decide to take an alternative route if the primary route is blocked.\nBlock another route, and ask students what they would do now since two main routes are blocked.\n\n\n\nStep 3: Interactive Time\n\nAsk students what they would do if they were in this situation. Would they take the other route? How would they do it? Are there any other options they would prefer?\nDivide the class into two groups, each group with a laptop under supervision.\nUsing block code, guide each group to set up their robot (which will serve as the car) to reenact the two situations.\nAllow the students to test their code by running the robot on the road setup."
  },
  {
    "objectID": "k-6_activities/01activity/01activity.html#reflection",
    "href": "k-6_activities/01activity/01activity.html#reflection",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Reflection",
    "text": "Reflection\n\nBring the groups together to discuss their experiences. Ask each group to share their challenges and solutions."
  },
  {
    "objectID": "k-6_activities/01activity/01activity.html#learning-outcomes",
    "href": "k-6_activities/01activity/01activity.html#learning-outcomes",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nComprehend the basic structure and function of if-else-elif statements in programming.\nUse conditional statements to create decision-making processes in block coding.\nSimulate real-life problem-solving by programming a robot to navigate alternate routes when the primary path is blocked.\nEnhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.\nTest their block code in a practical setup and debug any issues that arise to ensure the robot navigates correctly."
  },
  {
    "objectID": "k-6_activities/01activity/01activity.html#picture-of-the-map",
    "href": "k-6_activities/01activity/01activity.html#picture-of-the-map",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Picture of the Map",
    "text": "Picture of the Map\n\n\n\nMap Picture"
  },
  {
    "objectID": "high_school/starship.html",
    "href": "high_school/starship.html",
    "title": "Learn Python - Starship",
    "section": "",
    "text": "Welcome to the Starship, a 5-week program designed to teach students the fundamentals of Python Programming. Each week focuses on a specific aspect of programming.\nExplore the weekly breakdown below to access detailed activities and presentations.\nHS-Coded\nIndividual Repository\nProgress Survey"
  },
  {
    "objectID": "high_school/starship.html#overview",
    "href": "high_school/starship.html#overview",
    "title": "Learn Python - Starship",
    "section": "",
    "text": "Welcome to the Starship, a 5-week program designed to teach students the fundamentals of Python Programming. Each week focuses on a specific aspect of programming.\nExplore the weekly breakdown below to access detailed activities and presentations.\nHS-Coded\nIndividual Repository\nProgress Survey"
  },
  {
    "objectID": "high_school/starship.html#week-breakdown",
    "href": "high_school/starship.html#week-breakdown",
    "title": "Learn Python - Starship",
    "section": "6-Week Breakdown",
    "text": "6-Week Breakdown\n\n  \n      Episode 1: Liftoff!\n      Learn the basics of using a Codespace and navigating through files using a terminal.\n  \n  \n      Episode 2: Cracking the code\n      Create custom variables and use Python mathematics functionality.\n  \n  \n      Episode 3: Running in Circuits\n      Learn about `if` statements and `&lt;``&gt;` symbols.\n  \n  \n      Episode 4: Droning On & On\n      Talk to the computer and use the controls.\n  \n  \n      Episode 5: Can You Dig It\n      Run soil tests and experiment with variable values"
  },
  {
    "objectID": "high_school/starship.html#learning-outcomes",
    "href": "high_school/starship.html#learning-outcomes",
    "title": "Learn Python - Starship",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this curriculum, students will:\n\nMake their own GitHub Account.\nLearn about GitHub Codespaces.\nUnderstand the principles of Python Programming."
  },
  {
    "objectID": "high_school/01activity/01activity.html",
    "href": "high_school/01activity/01activity.html",
    "title": "Activity 1: Exploring IoT Sensors with Arduino",
    "section": "",
    "text": "In this activity, you’ll learn how to use common IoT sensors with an Arduino to collect environmental data. You’ll work with a digital temperature sensor, a light-dependent resistor (LDR) sensor, and a soil moisture sensor. You’ll also control an LED based on sensor readings, reinforcing the connection between sensing and action, a core concept in IoT applications."
  },
  {
    "objectID": "high_school/01activity/01activity.html#description",
    "href": "high_school/01activity/01activity.html#description",
    "title": "Activity 1: Exploring IoT Sensors with Arduino",
    "section": "",
    "text": "In this activity, you’ll learn how to use common IoT sensors with an Arduino to collect environmental data. You’ll work with a digital temperature sensor, a light-dependent resistor (LDR) sensor, and a soil moisture sensor. You’ll also control an LED based on sensor readings, reinforcing the connection between sensing and action, a core concept in IoT applications."
  },
  {
    "objectID": "high_school/01activity/01activity.html#materials-required",
    "href": "high_school/01activity/01activity.html#materials-required",
    "title": "Activity 1: Exploring IoT Sensors with Arduino",
    "section": "Materials Required",
    "text": "Materials Required\n\nArduino Uno (or compatible board)\nUSB cable\nBreadboard and jumper wires\nGikfun DS18B20 Waterproof Digital Temperature Sensor with Adapter\nTeyleten Robot 5MM LDR Photosensitive Sensor Module\nSoil Moisture Sensor\nLED\n220Ω resistor\nComputer with Arduino IDE installed (Note: The newest version is preferred)"
  },
  {
    "objectID": "high_school/01activity/01activity.html#extra-sources",
    "href": "high_school/01activity/01activity.html#extra-sources",
    "title": "Activity 1: Exploring IoT Sensors with Arduino",
    "section": "Extra Sources",
    "text": "Extra Sources\n\nDS18B20 Tutorial\nLight Sensor Tutorial"
  },
  {
    "objectID": "high_school/01activity/01activity.html#steps-to-conduct-the-activity",
    "href": "high_school/01activity/01activity.html#steps-to-conduct-the-activity",
    "title": "Activity 1: Exploring IoT Sensors with Arduino",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Topic Explanation\n\nIntroduce the Internet of Things (IoT) as the network of devices embedded with sensors, software, and other technologies to collect and exchange data.\nExplain how sensors collect physical world data, while actuators (like LEDs or motors) perform actions based on that data.\nSensors we’ll use:\n\nDS18B20 Temperature Sensor: Measures temperature in °C and °F.\nLDR Light Sensor: Detects light levels.\nSoil Moisture Sensor: Measures the amount of moisture in the soil.\n\n\n\n\nStep 2: Explain the Problem\n\nIoT devices often monitor environmental conditions and take action automatically.\nIn this activity:\n\nWe’ll read sensor data.\nWe’ll make an LED turn on or off based on temperature or light levels.\nWe’ll monitor soil moisture for potential smart agriculture applications.\n\n\n\n\nStep 3: Interactive Time\n\nPart 1: Temperature Sensor with DS18B20\n\nSetup:\n\nConnect DS18B20:\n\nGND to GND\nDAT to Digital Pin 2\nVCC to 5V (Note: Some DS18B20 sensors require a 4.7kΩ resistor between DAT and VCC, but many breakout boards include it already.)\n\nInstall the DallasTemperature and OneWire libraries in Arduino IDE (via Library Manager).\n\n\n\n\nDallasTemperature\n\n\n\nMake sure the right baud rate is Selected : 9600\n\n\n\nCode to Read Temperature:\n#include &lt;OneWire.h&gt;\n#include &lt;DallasTemperature.h&gt;\n\n#define ONE_WIRE_BUS 2\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(&oneWire);\n\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  Serial.print(\"Temperature: \");\n  Serial.print(sensors.getTempCByIndex(0));\n  Serial.print(\"°C | \");\n  Serial.print((sensors.getTempCByIndex(0) * 9.0) / 5.0 + 32.0);\n  Serial.println(\"°F\");\n  delay(500);\n}\n\n\n\nDallasTemperature Readings\n\n\n\n\nExtend: Control an LED Based on Temperature\n\nAdd an LED to Pin 13 with a 220Ω resistor to GND.\nLED turns ON if temperature ≤ 85°F.\n\n#include &lt;OneWire.h&gt;\n#include &lt;DallasTemperature.h&gt;\n\n#define ONE_WIRE_BUS 2\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(&oneWire);\n\nvoid setup() {\n  pinMode(13, OUTPUT);\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float tempF = (sensors.getTempCByIndex(0) * 9.0) / 5.0 + 32.0;\n  \n  Serial.print(\"Temperature: \");\n  Serial.print(tempF);\n  Serial.println(\"°F\");\n\n  if (tempF &lt;= 85) {\n    digitalWrite(13, HIGH);\n    Serial.println(\"Light On!\");\n  } else {\n    digitalWrite(13, LOW);\n    Serial.println(\"Light Off!\");\n  }\n  delay(500);\n}\n\n\n\nPart 2: Light Detection with LDR Sensor\n\nSetup:\n\nConnect LDR sensor:\n\nVCC to 5V\nGND to GND\nOUT to Analog Pin A0\n\n\n\n\n\nLDR Sensor Wiring\n\n\n\n\nCode to Read Light Level:\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  unsigned int AnalogValue = analogRead(A0);\n  Serial.println(AnalogValue);\n  delay(250);\n}\n\n\nExtend: Turn LED On/Off Based on Light Level\n\nLED turns ON if light value is below threshold (e.g., &lt; 60).\n\nvoid setup() {\n  pinMode(13, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  unsigned int AnalogValue = analogRead(A0);\n  Serial.println(AnalogValue);\n\n  if (AnalogValue &lt;= 60) {\n    digitalWrite(13, HIGH);\n    Serial.println(\"Light On!\");\n  } else {\n    digitalWrite(13, LOW);\n    Serial.println(\"Light Off!\");\n  }\n  delay(250);\n}\n\n\n\nPart 3: Soil Moisture Sensor\n\nSetup:\n\nConnect moisture sensor:\n\nVCC to 5V\nGND to GND\nSignal to Analog Pin A0\nCode to Read Moisture Level:\n\n\nvoid setup() {\n  Serial.begin(9600);\n  Serial.println(\"Simple Data Reading Program - send data over serial\");\n}\n\nvoid loop() {\n  int soilMoistureValue = analogRead(A0);\n  Serial.print(\"Moisture reading: \");\n  Serial.println(soilMoistureValue);\n  delay(5000);\n}\n\nInterpret the readings: Higher values mean dry soil, lower values mean wet soil."
  },
  {
    "objectID": "high_school/01activity/01activity.html#reflection",
    "href": "high_school/01activity/01activity.html#reflection",
    "title": "Activity 1: Exploring IoT Sensors with Arduino",
    "section": "Reflection",
    "text": "Reflection\n\nWhat are some real-world applications of these sensors?\nHow could combining multiple sensors improve automation or decision-making?\nWhat challenges did you face in setting up or reading the sensors?"
  },
  {
    "objectID": "high_school/01activity/01activity.html#learning-outcomes",
    "href": "high_school/01activity/01activity.html#learning-outcomes",
    "title": "Activity 1: Exploring IoT Sensors with Arduino",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nUnderstand the role of sensors in IoT systems.\nInterface multiple types of sensors with Arduino.\nTranslate sensor data into actionable outputs (like controlling LEDs).\nGain experience troubleshooting wiring, code, and sensor behavior."
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "About",
    "section": "",
    "text": "Our mission is to foster meaningful, hands-on learning experiences in STEM that span from elementary through high school. Through a growing collaboration between the Department of Computer and Information Science at Allegheny College and Crawford Central schools, we aim to build a strong foundation in computer science, engineering, and robotics that evolves as students grow.\nThis initiative provides students in elementary, middle, and high school with opportunities to engage in creative, inquiry-based STEM activities. By offering consistent, developmentally appropriate exposure to computing and robotics, we support students in building confidence, critical thinking, and problem-solving skills that will prepare them for the future.\nWe believe that every student—regardless of age, background, or experience—deserves access to high-quality STEM education and the opportunity to imagine themselves as future engineers, scientists, and creators."
  },
  {
    "objectID": "about/index.html#our-mission-and-goal",
    "href": "about/index.html#our-mission-and-goal",
    "title": "About",
    "section": "",
    "text": "Our mission is to foster meaningful, hands-on learning experiences in STEM that span from elementary through high school. Through a growing collaboration between the Department of Computer and Information Science at Allegheny College and Crawford Central schools, we aim to build a strong foundation in computer science, engineering, and robotics that evolves as students grow.\nThis initiative provides students in elementary, middle, and high school with opportunities to engage in creative, inquiry-based STEM activities. By offering consistent, developmentally appropriate exposure to computing and robotics, we support students in building confidence, critical thinking, and problem-solving skills that will prepare them for the future.\nWe believe that every student—regardless of age, background, or experience—deserves access to high-quality STEM education and the opportunity to imagine themselves as future engineers, scientists, and creators."
  },
  {
    "objectID": "about/index.html#why-it-matters",
    "href": "about/index.html#why-it-matters",
    "title": "About",
    "section": "Why It Matters",
    "text": "Why It Matters\nSTEM education is more than coding or circuits—it’s about helping students understand the world around them, make informed decisions, and confidently explore solutions to real problems. These skills are relevant across all disciplines and vital for civic engagement, workforce development, and lifelong learning.\n\nElementary students begin exploring basic logic, teamwork, and creative problem-solving.\nMiddle school students expand into physical computing, data collection, and iterative design.\nHigh school students take on more complex projects, including robotics, control systems, and ethical use of technology.\n\nBy offering a continuous path through K–12, we support long-term engagement and academic growth in STEM fields."
  },
  {
    "objectID": "about/index.html#pennsylvania-education-framework",
    "href": "about/index.html#pennsylvania-education-framework",
    "title": "About",
    "section": "Pennsylvania Education Framework",
    "text": "Pennsylvania Education Framework\n\nSTEM in Pennsylvania\nSTEM education in Pennsylvania emphasizes access and literacy for all learners, with a focus on project-based learning, equity, reflection, iteration, and meaningful collaboration between schools, families, and community partners.\n\n\nComputer Science Literacy\nWhile the current Pennsylvania framework emphasizes grades 7–12 for formal computer science pathways, we are working to bridge this gap by creating age-appropriate, standards-aligned learning experiences for students at all levels—from elementary logic puzzles to high school robotics systems.\nThese experiences are designed to meet and extend the state’s educational goals by creating opportunities for early engagement, sustained exploration, and student-led discovery.\n\nSources\n\nPA Department of Education STEM Guidelines\nThe Framework for Computer Science 7-12 Program Guidelines"
  },
  {
    "objectID": "high_school/index.html",
    "href": "high_school/index.html",
    "title": "High School Outreach",
    "section": "",
    "text": "Welcome to the page where you can find all the activities or presentations that have already been implemented. Use the categories to find activities based on topic and time required."
  },
  {
    "objectID": "high_school/index.html#multi-week-curriculums",
    "href": "high_school/index.html#multi-week-curriculums",
    "title": "High School Outreach",
    "section": "Multi-week Curriculums",
    "text": "Multi-week Curriculums\nExplore our multi-week curriculums designed to teach middle school students essential computing skills. Click on a curriculum to learn more.\n\n  \n    \n      5 Weeks: Learn Python - Starship\n      Learn the basics of Python by coding your own starship."
  },
  {
    "objectID": "high_school/index.html#all-activities",
    "href": "high_school/index.html#all-activities",
    "title": "High School Outreach",
    "section": "All Activities",
    "text": "All Activities\nExplore all our activities. Use the categories on the side to sort the activities by type."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\nCode with Chompers\n",
    "section": "",
    "text": "Code with Chompers\n\n\nInspiring future technologists to think computationally!\n\n\nExplore our engaging and educational activities designed for young digital learners. Learn more about our exciting initiatives on the About page.\n\n\n\n\n\n\n\n\n\nFor Teachers\n\n\nLearn about how you can bring Outreach Fellows into your classroom and explore our Activities which can be conducted in classes.\n\nRegister to become an Outreach Fellow! Find Activities\n\n\n\n\n\n\n\n\nFor Outreach Fellows\n\n\nAs a Computing Outreach Fellow, you’ll guide engaging activities for students of all ages. Don’t worry—clear, step-by-step guides will be at your side to help you throughout the process. Get ready for a rewarding experience!\n\n Check out the Outreach Fellow Guide! Apply to be a Fellow!\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "k-6_activities/02activity/02activity.html",
    "href": "k-6_activities/02activity/02activity.html",
    "title": "Activity 2: Binary & Balloons",
    "section": "",
    "text": "This activity is suitable for younger kids as it involves simpler tasks but can also be adjusted to be more challenging. It involves students mixing and matching a set of balloons with binary numbers (0 and 1) on them and decoding these sequences into decimal numbers. Additionally, it introduces students to how different binary sequences can represent different decimal numbers.\nFor students unfamiliar with the powers of 2, a reference sheet will be provided to guide them."
  },
  {
    "objectID": "k-6_activities/02activity/02activity.html#description",
    "href": "k-6_activities/02activity/02activity.html#description",
    "title": "Activity 2: Binary & Balloons",
    "section": "",
    "text": "This activity is suitable for younger kids as it involves simpler tasks but can also be adjusted to be more challenging. It involves students mixing and matching a set of balloons with binary numbers (0 and 1) on them and decoding these sequences into decimal numbers. Additionally, it introduces students to how different binary sequences can represent different decimal numbers.\nFor students unfamiliar with the powers of 2, a reference sheet will be provided to guide them."
  },
  {
    "objectID": "k-6_activities/02activity/02activity.html#materials-required",
    "href": "k-6_activities/02activity/02activity.html#materials-required",
    "title": "Activity 2: Binary & Balloons",
    "section": "Materials Required",
    "text": "Materials Required\n\n3-4 Balloons\nMarkers\nA sheet with the powers of 2\nPiece of paper and pens for calculations / Whiteboards and markers"
  },
  {
    "objectID": "k-6_activities/02activity/02activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/02activity/02activity.html#steps-to-conduct-the-activity",
    "title": "Activity 2: Binary & Balloons",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Preparation\n\nInflate 3 balloons and secure them. Blow up one more in case an additional example is needed.\nWrite the binary digits 0 and 1 on the balloons using a permanent marker. Example provided in this folder: .\n\n\n\nStep 2: Implementation\n\nArrange the balloons in a line. You can use string or tape to ensure they stay in place.\nPrepare several different sequences for demonstration and practice (e.g., 000, 010, 011, 100, 110, 111).\nHave the extra balloon ready to be added to the activity so students can experiment with different examples.\n\n\n\nStep 3: Explanation\n\nExplain to the students that each balloon represents a binary digit (bit), and the position of the balloon determines its value in the binary number system.\nExplain that the index of the first balloon is always zero and increases from there.\nExplain the formula for decoding binary into decimal numbers.\nProvide examples of how binary is used in real life.\n\n\n\nStep 4: Implementation\n\nDivide students into different groups and ask them to solve the binary code.\nMix up their balloons with those of another group.\nAfter solving, bring the groups together to compare their answers. If they got the same answer, discuss how they arrived at it."
  },
  {
    "objectID": "k-6_activities/02activity/02activity.html#reflection",
    "href": "k-6_activities/02activity/02activity.html#reflection",
    "title": "Activity 2: Binary & Balloons",
    "section": "Reflection",
    "text": "Reflection\nAsk the following questions to stimulate discussion:\n\nWhat was the most challenging part of the activity?\nDid you find it easier to understand binary numbers after the activity? Why or why not?\nCan you think of other ways binary numbers might be used in the real world?"
  },
  {
    "objectID": "k-6_activities/02activity/02activity.html#learning-outcomes",
    "href": "k-6_activities/02activity/02activity.html#learning-outcomes",
    "title": "Activity 2: Binary & Balloons",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should:\n\nHave a basic understanding of binary numbers and their positional value.\nBe able to convert simple binary numbers to decimal numbers.\nDevelop problem-solving and teamwork skills through group activities."
  },
  {
    "objectID": "k-6_activities/04activity/04activity.html",
    "href": "k-6_activities/04activity/04activity.html",
    "title": "Activity 4: Bee Bots",
    "section": "",
    "text": "In this activity, students will create obstacles through conditional actions using the Bee Bot app. Students will pair up and create routes that require block coding to navigate. Block coding is a hands-on way for children to learn the basics of coding. This activity will help students understand coding concepts and the creative ways they can be applied."
  },
  {
    "objectID": "k-6_activities/04activity/04activity.html#description",
    "href": "k-6_activities/04activity/04activity.html#description",
    "title": "Activity 4: Bee Bots",
    "section": "",
    "text": "In this activity, students will create obstacles through conditional actions using the Bee Bot app. Students will pair up and create routes that require block coding to navigate. Block coding is a hands-on way for children to learn the basics of coding. This activity will help students understand coding concepts and the creative ways they can be applied."
  },
  {
    "objectID": "k-6_activities/04activity/04activity.html#grades-time-required",
    "href": "k-6_activities/04activity/04activity.html#grades-time-required",
    "title": "Activity 4: Bee Bots",
    "section": "Grades & Time Required",
    "text": "Grades & Time Required\n\nKindergarten: 45 minutes\n2nd - 4th Grade: 30 minutes\n5th & 6th Grade: 25 minutes"
  },
  {
    "objectID": "k-6_activities/04activity/04activity.html#materials-required",
    "href": "k-6_activities/04activity/04activity.html#materials-required",
    "title": "Activity 4: Bee Bots",
    "section": "Materials Required",
    "text": "Materials Required\n\nBee Bot\nPencil\nPaper\nBee Bot Map (optional)"
  },
  {
    "objectID": "k-6_activities/04activity/04activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/04activity/04activity.html#steps-to-conduct-the-activity",
    "title": "Activity 4: Bee Bots",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Forming Groups\n\nThe activity can be done individually or in groups.\nStart with individual competition to allow all students to practice creating routes independently. This will enhance their understanding of the game.\nAfter individual practice, move to group activities to foster collaboration and teamwork.\n\n\n\nStep 2: Creating Routes and Conditions\n\nEncourage students to explore Bee Bot and the different blocks available.\nExplain that they need to create a route with specific rules. For example, they could create a rule that the Bee Bot cannot move backwards.\nOn a separate sheet of paper, have students write down the rules they have created, specifying what their opponents are not allowed to do.\n\n\n\nStep 3: Completing Routes\n\nOnce students have created their routes and conditions, have them swap with their partners.\nTime the students to see who can create a route first, conducting multiple rounds with different partners.\nEnsure that only group members collaborate, with no assistance from opposing teams.\nIf a student is struggling, provide guidance on the initial steps to help them succeed."
  },
  {
    "objectID": "k-6_activities/04activity/04activity.html#reflection",
    "href": "k-6_activities/04activity/04activity.html#reflection",
    "title": "Activity 4: Bee Bots",
    "section": "Reflection",
    "text": "Reflection\n\nDiscuss with students how easy or difficult they found the activity.\nAsk them which conditions were the hardest to follow.\nInquire if there were any conditions they wanted to create but couldn’t implement."
  },
  {
    "objectID": "k-6_activities/04activity/04activity.html#summary",
    "href": "k-6_activities/04activity/04activity.html#summary",
    "title": "Activity 4: Bee Bots",
    "section": "Summary",
    "text": "Summary\nParticipating in this activity will enhance students’ computational thinking. Block coding with Bee Bots helps students understand basic coding principles and improves their programming skills. Encouraging students to create and solve obstacles in block coding will significantly boost their coding proficiency."
  },
  {
    "objectID": "k-6_activities/06activity/06activity.html",
    "href": "k-6_activities/06activity/06activity.html",
    "title": "Activity 6: Debugging",
    "section": "",
    "text": "This activity is designed to educate students on debugging and the various manifestations of bugs in code. The lesson will encompass an activity that assists students in identifying the presence of a bug, methods for resolving it, and distinguishing between syntax errors and logic errors. Syntax errors occur due to grammatical or indentation mistakes in the code, which prevent the program from running correctly. These errors are akin to misspellings or improper punctuation in written language. On the other hand, logic errors arise when the lines of code, while syntactically correct, do not produce the intended outcome. These errors are caused by flawed logic that the computer cannot interpret as intended, leading to incorrect or unexpected results. The activity will use instructions to represent syntax and logic errors that the student will need to identify. It is crucial to highlight what each example represents to ensure a clear understanding of these concepts."
  },
  {
    "objectID": "k-6_activities/06activity/06activity.html#description",
    "href": "k-6_activities/06activity/06activity.html#description",
    "title": "Activity 6: Debugging",
    "section": "",
    "text": "This activity is designed to educate students on debugging and the various manifestations of bugs in code. The lesson will encompass an activity that assists students in identifying the presence of a bug, methods for resolving it, and distinguishing between syntax errors and logic errors. Syntax errors occur due to grammatical or indentation mistakes in the code, which prevent the program from running correctly. These errors are akin to misspellings or improper punctuation in written language. On the other hand, logic errors arise when the lines of code, while syntactically correct, do not produce the intended outcome. These errors are caused by flawed logic that the computer cannot interpret as intended, leading to incorrect or unexpected results. The activity will use instructions to represent syntax and logic errors that the student will need to identify. It is crucial to highlight what each example represents to ensure a clear understanding of these concepts."
  },
  {
    "objectID": "k-6_activities/06activity/06activity.html#materials-required",
    "href": "k-6_activities/06activity/06activity.html#materials-required",
    "title": "Activity 6: Debugging",
    "section": "Materials Required",
    "text": "Materials Required\n\nDebugging Video: Bugs!\nDebugging Scenarios\nPencil\nPaper"
  },
  {
    "objectID": "k-6_activities/06activity/06activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/06activity/06activity.html#steps-to-conduct-the-activity",
    "title": "Activity 6: Debugging",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Printing out Debugging Sheets\n\nPrint out debugging sheet before activity starts or during debugging video if you are running activity with someone else\n\nDEBUGGING SHEET: Debugging Sheet\nDEBUGGING ANSWER SHEET: Answer Sheet\n\n\nStep 2: Watching Debugging Video\n\nShow students Debugging video Bugs!\nAfter the video is done ask them about what they think bugs in coding will look like\nAlso ask them if they think bugs can show up in different ways or only one.\n\nFollowing this, it is important to emphasize to the students the types of errors they may encounter while learning to code. Syntax errors occur due to grammatical or indentation mistakes in the code, which prevent the program from running correctly. These errors are akin to misspellings or improper punctuation in written language. On the other hand, logic errors arise when the lines of code, while syntactically correct, do not produce the intended outcome. These errors are caused by flawed logic that the computer cannot interpret as intended, leading to incorrect or unexpected results.\n\n\n\n\nStep 1: Identifying Bugs\n\nHand out the Sheets of paper with the identifying bugs side first\nWith the written examples in the first part of the sheet explain to students that instructions that do not make sense or are grammatically incorrect can be identified as bugs\n\n\n\nStep 2: Categorizing Bugs\n\nThe second part of the sheet has all bugs, direct the students to identify if the instruction be would syntax errors or logic errors\n\n\n\nStep 3: Practice\n\nHave students create instructions that contain Bugs , no Bugs, syntax errors, and logic errors.\nThis exercise will improve their understanding of how to identify bugs and the different types they might encounter."
  },
  {
    "objectID": "k-6_activities/06activity/06activity.html#reflection",
    "href": "k-6_activities/06activity/06activity.html#reflection",
    "title": "Activity 6: Debugging",
    "section": "Reflection",
    "text": "Reflection\n\nExplain the similarity between actual code and the activity, emphasizing how debugging requires the skills practiced in the activity.\nAsk students if they found the activity challenging and what new concepts they learned.\nInquire which was harder: identifying bugs or categorizing them."
  },
  {
    "objectID": "k-6_activities/06activity/06activity.html#summary",
    "href": "k-6_activities/06activity/06activity.html#summary",
    "title": "Activity 6: Debugging",
    "section": "Summary",
    "text": "Summary\nThis activity introduces students to the basics of debugging. It highlights common errors in code and methods for addressing them. Engagement in these activities can better prepare students for coding by providing a solid understanding of how to handle errors."
  },
  {
    "objectID": "k-6_activities/08activity/08activity.html",
    "href": "k-6_activities/08activity/08activity.html",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "",
    "text": "This activity aims to encourage students to reflect on their experiences with robots, foster creativity through drawing, and develop critical thinking skills through an engaging online coding exercise."
  },
  {
    "objectID": "k-6_activities/08activity/08activity.html#objective",
    "href": "k-6_activities/08activity/08activity.html#objective",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "",
    "text": "This activity aims to encourage students to reflect on their experiences with robots, foster creativity through drawing, and develop critical thinking skills through an engaging online coding exercise."
  },
  {
    "objectID": "k-6_activities/08activity/08activity.html#materials-needed",
    "href": "k-6_activities/08activity/08activity.html#materials-needed",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Materials Needed",
    "text": "Materials Needed\n\nPaper and pencils for drawing\nComputers or tablets with internet access for the online activity"
  },
  {
    "objectID": "k-6_activities/08activity/08activity.html#instructions",
    "href": "k-6_activities/08activity/08activity.html#instructions",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Instructions",
    "text": "Instructions\n\nStep 1: Reflection and Observation\n\nProvide each student with a piece of paper.\nAsk students to reflect on their experiences with robots, especially what they observed during their time at the camp. This includes features like distance sensors, speakers, and cameras.\nEncourage them to list as many features and details as they can remember.\n\n\n\nStep 2: Creative Drawing\n\nBased on their reflections, instruct students to draw their own robot.\nThis drawing session allows students to express their creativity and apply what they have learned about the various parts and functions of robots.\n\n\n\nStep 3: Online Coding Activity - RodoCode\n\nAfter the drawing session, introduce students to the online activity called RodoCode on Code.org.\nRodoCode is an interactive coding exercise where students use blocks to program a robot to reach its destination.\nEmphasize that this activity will enhance critical thinking and problem-solving skills while reinforcing their understanding of robotics concepts."
  },
  {
    "objectID": "k-6_activities/08activity/08activity.html#summary",
    "href": "k-6_activities/08activity/08activity.html#summary",
    "title": "Activity 8: Designing and Programming Robots",
    "section": "Summary",
    "text": "Summary\nThis activity engages students in reflecting on their robot experiences, expressing creativity through drawing, and developing coding skills through an online exercise. It combines observation, artistic expression, and computational thinking in a fun and educational manner."
  },
  {
    "objectID": "k-6_activities/10activity/activity10.html",
    "href": "k-6_activities/10activity/activity10.html",
    "title": "Activity 10: Internet Safety Routes",
    "section": "",
    "text": "This activity teaches students how to practice internet safety by identifying safe and unsafe actions on the internet. Students will watch a video about internet safety and then engage in an activity using Spheros to create and navigate routes based on safe and unsafe terms."
  },
  {
    "objectID": "k-6_activities/10activity/activity10.html#description",
    "href": "k-6_activities/10activity/activity10.html#description",
    "title": "Activity 10: Internet Safety Routes",
    "section": "",
    "text": "This activity teaches students how to practice internet safety by identifying safe and unsafe actions on the internet. Students will watch a video about internet safety and then engage in an activity using Spheros to create and navigate routes based on safe and unsafe terms."
  },
  {
    "objectID": "k-6_activities/10activity/activity10.html#materials-required",
    "href": "k-6_activities/10activity/activity10.html#materials-required",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Materials Required",
    "text": "Materials Required\n\nInternet safety flashcards\nWooden blocks\nSpheros\niPad"
  },
  {
    "objectID": "k-6_activities/10activity/activity10.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/10activity/activity10.html#steps-to-conduct-the-activity",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Internet Safety Video\n\nStart by discussing with students their experiences using the internet and activities they have done online.\nExplain the importance of learning safe practices for internet use.\nPlay the Twinkl video on internet safety: Twinkl Internet Safety Video.\nAfter watching, ask students what they learned from the video.\n\n\n\nStep 2: Flashcards\n\nDivide students into two groups and provide them with flashcards containing safe and unsafe terms/actions.\nInstruct students to sort the flashcards into safe and unsafe categories.\nReview the sorted flashcards to ensure understanding before proceeding.\n\n\n\nStep 3: Creating Routes\n\nUsing wooden blocks and the sorted flashcards, have students create two routes: one for safe terms/actions and one for unsafe terms/actions that their Sphero can navigate through.\nKindergarteners will focus on creating routes without the flashcard sorting component.\n\n\n\nStep 4: Using Spheros\n\nAllow students to use Spheros to navigate through the routes they created.\nEncourage students to create new routes for their Spheros after completing the initial ones."
  },
  {
    "objectID": "k-6_activities/10activity/activity10.html#reflection",
    "href": "k-6_activities/10activity/activity10.html#reflection",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Reflection",
    "text": "Reflection\n\nConduct a reflection session after watching the video.\nAsk students what they learned about internet safety and what actions they might do differently online after watching the video."
  },
  {
    "objectID": "k-6_activities/10activity/activity10.html#summary",
    "href": "k-6_activities/10activity/activity10.html#summary",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Summary",
    "text": "Summary\nThis activity aims to enhance students’ understanding of internet safety by actively engaging them in identifying safe and unsafe online behaviors. By using Spheros to navigate through created routes, students apply their knowledge in a practical and interactive manner, reinforcing internet safety practices."
  },
  {
    "objectID": "k-6_activities/10activity/activity10.html#examples-of-flashcards",
    "href": "k-6_activities/10activity/activity10.html#examples-of-flashcards",
    "title": "Activity 10: Internet Safety Routes",
    "section": "Examples of Flashcards",
    "text": "Examples of Flashcards\n\n\n\nMap Picture"
  },
  {
    "objectID": "k-6_activities/12activity/activity12.html",
    "href": "k-6_activities/12activity/activity12.html",
    "title": "Activity 12: Blue-Blocs",
    "section": "",
    "text": "Students will use the Blue-Bot robots to play with the Blue-Bloc app. The activity incorperates the use of blocking coding, a ataic used to simply the understading of code for students. The activity will also include the use of conditional statements that require new ays of thinking and improve skills in computational thinking."
  },
  {
    "objectID": "k-6_activities/12activity/activity12.html#description",
    "href": "k-6_activities/12activity/activity12.html#description",
    "title": "Activity 12: Blue-Blocs",
    "section": "",
    "text": "Students will use the Blue-Bot robots to play with the Blue-Bloc app. The activity incorperates the use of blocking coding, a ataic used to simply the understading of code for students. The activity will also include the use of conditional statements that require new ays of thinking and improve skills in computational thinking."
  },
  {
    "objectID": "k-6_activities/12activity/activity12.html#time-required",
    "href": "k-6_activities/12activity/activity12.html#time-required",
    "title": "Activity 12: Blue-Blocs",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 4th grade: 35min, 5th & 6th: 30min"
  },
  {
    "objectID": "k-6_activities/12activity/activity12.html#materials-required",
    "href": "k-6_activities/12activity/activity12.html#materials-required",
    "title": "Activity 12: Blue-Blocs",
    "section": "Materials Required",
    "text": "Materials Required\n\nBlue-Bot\nBlue-Bot Map\nFlashcards\nIPAD\nPencil\n\nPaper\n\n\nStep 1: Forming Groups\n\nPut students in groups of two at each Map, giving them each three rows of space to put down blank flashcards for obstacles and one picture flashcard as their goal.\nEach student needs a paper, pencil and IPAD to connect to their Blue-Bot\n\n\n\nStep 2: Creating Routes\n\nEncourage students to play around with Bee Bot to see the different blocks available to them for 5 minutes max.\nUsing the flashcards and three rows avaliable to them, tell students to create routes they can run their Blue-Bots through. Give students up to 10 minutes to complete this\n\n\n\nStep 3: Creating Conditions\n\nWith the paper and pencil tell students to create two restictions based upon the avaiable blocks on Blue-Blocs, they cannot have the same restrictions as their partner on the map\n\nExamples: No forward block, No turning 45 degrees, Only 45 degree blocks for turns, Can only turn left etc…\n\n\n\n\nStep 4: Completing Routes and Switching\n\nHave the students run through their own routes with conditions and once completed, switch with their partner and abide by their restrictions.\nOnce both students have done each other routes wait for another group to be done so they can switch places.\nHave the students keep their paper at their original map and use the new ones they find when switching\nKeep the students switching until they have done all the diffrent routes avaliable."
  },
  {
    "objectID": "k-6_activities/12activity/activity12.html#reflection",
    "href": "k-6_activities/12activity/activity12.html#reflection",
    "title": "Activity 12: Blue-Blocs",
    "section": "Reflection",
    "text": "Reflection\n\nLeave at least 5 minutes of the activity to ask questions about what they did\nExplore with students how easy or hard they found the activity\nAsk the students what they found were the hardest conditions to abide by.\nAsk them if there were any conditions they tried making but weren’t able to."
  },
  {
    "objectID": "k-6_activities/12activity/activity12.html#summary",
    "href": "k-6_activities/12activity/activity12.html#summary",
    "title": "Activity 12: Blue-Blocs",
    "section": "Summary",
    "text": "Summary\n\nParticipation in the activity is meant to improve students computational thinking. Block coding helps students get a better understanding of how coding works and can help them improve their skills in programming. Encouraging students to create and solve obstacles for block coding will greatly improve their coding skills."
  },
  {
    "objectID": "k-6_activities/14activity/14activity.html",
    "href": "k-6_activities/14activity/14activity.html",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "",
    "text": "Students will engage with the Code.org platform to play an interactive coding game inspired by the movie “Frozen.” Through this activity, they will utilize block-based coding to deepen their comprehension of fundamental programming concepts. As they progress through the game, students will learn how to construct sequences, loops, and conditional statements, and observe how these elements interact to produce the desired outcomes. This hands-on experience aims to enhance their understanding of how coding works in a fun and educational environment, fostering their problem-solving skills and creativity"
  },
  {
    "objectID": "k-6_activities/14activity/14activity.html#description",
    "href": "k-6_activities/14activity/14activity.html#description",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "",
    "text": "Students will engage with the Code.org platform to play an interactive coding game inspired by the movie “Frozen.” Through this activity, they will utilize block-based coding to deepen their comprehension of fundamental programming concepts. As they progress through the game, students will learn how to construct sequences, loops, and conditional statements, and observe how these elements interact to produce the desired outcomes. This hands-on experience aims to enhance their understanding of how coding works in a fun and educational environment, fostering their problem-solving skills and creativity"
  },
  {
    "objectID": "k-6_activities/14activity/14activity.html#materials-required",
    "href": "k-6_activities/14activity/14activity.html#materials-required",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "Materials required",
    "text": "Materials required\n\nIPAD\nCode.org platform: Code with Anna and Elsa"
  },
  {
    "objectID": "k-6_activities/14activity/14activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/14activity/14activity.html#steps-to-conduct-the-activity",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nStep 1: Setup and Introduction\n\nOpen the Code.org platform on iPads.\nShow students the introductory video provided before starting the activity.\n\n\n\nStep 2: Engaging with Minecraft Blocks\n\nGuide students through the initial stages of the Frozen block coding game.\nDisable subsequent instructional videos to encourage independent exploration."
  },
  {
    "objectID": "k-6_activities/14activity/14activity.html#reflection",
    "href": "k-6_activities/14activity/14activity.html#reflection",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 30-minute mark to discuss progress and challenges.\nAsk students to describe what they observed Minecraft mobs doing with the block codes.\nRelate the activity to game development, emphasizing how coding principles translate into interactive gameplay experiences."
  },
  {
    "objectID": "k-6_activities/14activity/14activity.html#learning-outcomes",
    "href": "k-6_activities/14activity/14activity.html#learning-outcomes",
    "title": "Activity 14: Code with Anna and Elsa",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nBy introducing them to basic coding principles, students will develop a stronger grasp of programming, leading to improved comprehension when they encounter more complex coding tasks in the future. This early exposure aims to build their confidence and proficiency in understanding and applying code effectively."
  },
  {
    "objectID": "k-6_activities/16activity/16activity.html",
    "href": "k-6_activities/16activity/16activity.html",
    "title": "Activity 16: Protect Your Password",
    "section": "",
    "text": "In this activity, students will learn about the importance of creating strong passwords to protect their online accounts. Through interactive games and discussions, students will understand the concept of a strong password, learn why weak passwords can be easily guessed, and practice creating secure passwords using a mix of characters. This hands-on activity helps introduce cybersecurity concepts and promotes safe online behavior."
  },
  {
    "objectID": "k-6_activities/16activity/16activity.html#description",
    "href": "k-6_activities/16activity/16activity.html#description",
    "title": "Activity 16: Protect Your Password",
    "section": "",
    "text": "In this activity, students will learn about the importance of creating strong passwords to protect their online accounts. Through interactive games and discussions, students will understand the concept of a strong password, learn why weak passwords can be easily guessed, and practice creating secure passwords using a mix of characters. This hands-on activity helps introduce cybersecurity concepts and promotes safe online behavior."
  },
  {
    "objectID": "k-6_activities/16activity/16activity.html#materials-required",
    "href": "k-6_activities/16activity/16activity.html#materials-required",
    "title": "Activity 16: Protect Your Password",
    "section": "Materials Required",
    "text": "Materials Required\n\nWhiteboard or digital presentation for demonstrating concepts\nPaper and pencils for password creation practice\nPrintouts or projector for displaying examples of strong and weak passwords\nOnline password strength meter"
  },
  {
    "objectID": "k-6_activities/16activity/16activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/16activity/16activity.html#steps-to-conduct-the-activity",
    "title": "Activity 16: Protect Your Password",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nStep 1: Introduction to Passwords\n\nStart by asking students what passwords are and why they are used.\nExplain that passwords help protect personal information from being accessed by others online.\nDiscuss the importance of using passwords that are hard to guess, and introduce the term “strong password.”\n\n\n\nStep 2: What Makes a Strong Password?\n\nWrite examples of weak passwords on the board (e.g., 123456, password, abc123) and explain why these are easy to guess.\nDiscuss what makes a strong password, including:\n\nA mix of uppercase and lowercase letters\nNumbers\nSymbols (e.g., @, #, $, etc.)\nAvoiding common words or personal information (like names and birthdays)\n\n\n\n\nStep 3: Password Creation Game\n\nDivide the students into small groups.\nChallenge each group to come up with a easy password and a strong password following the rules discussed.\nGive them a reason to come up with this idea (Like a treasure password).\nOnce groups have created their passwords, have them test their passwords using an online password strength meter\nThen have a game play out where different group guess each of their passwords to see if it is easy to guess the passwords.\n\n\n\nStep 4: Password Protection Tips\n\nDiscuss how to keep passwords safe:\n\nDon’t share passwords with others.\nUse different passwords for different websites.\nChange passwords regularly.\nUse a password manager.\n\n\n\n\nStep 5: Reflection and Wrap-Up\n\nAsk students why it’s important to use strong passwords and how they can protect themselves online.\nLet them share their own tips for staying safe online."
  },
  {
    "objectID": "k-6_activities/16activity/16activity.html#learning-outcomes",
    "href": "k-6_activities/16activity/16activity.html#learning-outcomes",
    "title": "Activity 16: Protect Your Password",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should:\n\nUnderstand the importance of strong passwords in cybersecurity.\nLearn how to create secure passwords using a combination of letters, numbers, and symbols.\nRecognize the risks of using weak passwords and sharing them with others.\nGain confidence in protecting their personal information online."
  },
  {
    "objectID": "k-6_activities/18activity/18activity.html",
    "href": "k-6_activities/18activity/18activity.html",
    "title": "Activity 18: Play Doh Lights",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of electronics by making a simple circuit. The Play Doh conducts electricity and can be used to turn the LEDs on."
  },
  {
    "objectID": "k-6_activities/18activity/18activity.html#description",
    "href": "k-6_activities/18activity/18activity.html#description",
    "title": "Activity 18: Play Doh Lights",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of electronics by making a simple circuit. The Play Doh conducts electricity and can be used to turn the LEDs on."
  },
  {
    "objectID": "k-6_activities/18activity/18activity.html#materials-required",
    "href": "k-6_activities/18activity/18activity.html#materials-required",
    "title": "Activity 18: Play Doh Lights",
    "section": "Materials required",
    "text": "Materials required\n\nPlay Doh in a variety of colors\nLEDs in a variety of colors\n5V Batteries with 5V Battery Holders (Alternative option is an Arduino with a laptop)\nNon-conductive Clay (optional)\nPrint out this Worksheet"
  },
  {
    "objectID": "k-6_activities/18activity/18activity.html#steps-to-conduct-the-activity",
    "href": "k-6_activities/18activity/18activity.html#steps-to-conduct-the-activity",
    "title": "Activity 18: Play Doh Lights",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nShow this video to the class on playdoh circuits YouTube Link\nSet up the station by organizing the materials\nExplain to the students that batteries have both a positive (red) and negative (black) side and in order to turn anything on a circuit needs to connect these two sides using the lights and the play doh. A circuit is like a trail and the negative needs to be able to walk back to the battery through the postive.\nDemonstrate the creation of a playdoh light system. Start by creating two blobs of playdough connect the red end of the battery to one and the black end to the other blob. Explain that the light has a long leg and a short leg. The short leg always has to be on the negative (black) side and the long leg always has to be towards the postive (red) side. Then connect the light to the blobs. Explain that the blobs can not touch out the electricity will skip past the light and not turn it on (this is called a short circuit). After connecting the light correctly the light should turn on. Explain if the light does not turn on when they try the first thing to test is to switch the direction of the legs (this is the most common mistake).\n\n\n\n\nLED_pins\n\n\n\n\n\nsingle_circuit\n\n\n\nShow the students it is possible to connect two lights by creating 3 blobs of playdoh and the outer blobs should be the postivie and negative ends connected to the play dough. Then use a light to connect the blobs with the long leg always facing the postive side. This is a series circuit.\n\n\n\n\nseries_circuit\n\n\n\nShow the students it is possible to connect more than one light in the same section. Connect a second LED in the same direction as the one next to it. This is called a parallel circuit.\n\n\n\n\nparellel_circuit\n\n\n\nNon-conductive clay can be used to block current and connect the creations. Try not to mix the play doh with the clay.\nNow give each of the students their materials to make their own. Here are some example challengegs to give them to try\n\nCan you follow the path that electricity takes to light up starting with the black wire?\nCan you get all the different colors to light up?\nCan you get more than 3 blobs of playdoh connected in a circuit?\n\nAn alternative method of this activity is using an arduino. Set up an Arduino with the following blink code using the Arduino IDE changing the pin 13 to whatever pin/s you plan to use. The Arduino IDE can be used on any laptop. An Arduino can run more than one playdoh circuit at a time by adding more pins. You can also try to add the pins to light up at different times to create a christmas light display. Make sure the black wire is connected to the GND on the Ardunio and the red wire is connected to the digital pin number.\n\n\n\n\narduino_blink\n\n\n\n\n\narduino_pins\n\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(13, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  digitalWrite(13, LOW);\n  delay(1000);\n  digitalWrite(13, HIGH); \n}"
  },
  {
    "objectID": "k-6_activities/18activity/18activity.html#reflection",
    "href": "k-6_activities/18activity/18activity.html#reflection",
    "title": "Activity 18: Play Doh Lights",
    "section": "Reflection",
    "text": "Reflection\n\nAsk students what part of the actvity they found the hardest.\nAsk them what their favorite part of the activity was."
  },
  {
    "objectID": "k-6_activities/18activity/18activity.html#learning-outcomes",
    "href": "k-6_activities/18activity/18activity.html#learning-outcomes",
    "title": "Activity 18: Play Doh Lights",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nThis activity is a foundation for learning simple circuits. Understanding how electricity works is vital to working with electronic equipment and making electronic circuits. This activity requires creativity to be able to make different versions of the circuit while also understanding logic and electrical component relationships."
  },
  {
    "objectID": "k-6_activities/20activity/index.html",
    "href": "k-6_activities/20activity/index.html",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "",
    "text": "In this activity, students will use Blue-Bots to navigate maps filled with conditional statements that require them to adhere to specific constraints. Each student will receive a color-coded reference sheet outlining the conditions that must be followed when standing on a particular color. As students progress through the obstacles, they will gradually encounter more complex challenges incorporating additional conditional statements. This structured approach fosters critical thinking and problem-solving skills while enhancing their understanding of conditional logic in programming."
  },
  {
    "objectID": "k-6_activities/20activity/index.html#description",
    "href": "k-6_activities/20activity/index.html#description",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "",
    "text": "In this activity, students will use Blue-Bots to navigate maps filled with conditional statements that require them to adhere to specific constraints. Each student will receive a color-coded reference sheet outlining the conditions that must be followed when standing on a particular color. As students progress through the obstacles, they will gradually encounter more complex challenges incorporating additional conditional statements. This structured approach fosters critical thinking and problem-solving skills while enhancing their understanding of conditional logic in programming."
  },
  {
    "objectID": "k-6_activities/20activity/index.html#time-required",
    "href": "k-6_activities/20activity/index.html#time-required",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "k-6_activities/20activity/index.html#materials-required",
    "href": "k-6_activities/20activity/index.html#materials-required",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "Materials Required",
    "text": "Materials Required\n\nBlue-Bots\nBlue-Bot App: Blue’s Bloc (IPAD)\nBlue-Bots Map\nConditional Color Sheet () Condtional Color Sheet\nColored Flashcards\n\n\nStep 1: Setting Up a Conditional Map\n\nEach map should have at least two students, with each assigned three columns for their obstacle course. A fifth colored flashcard should mark the end goal in the top row.\nEnsure there is one Blue-Bot for every three columns. If there are more students than available maps or Blue-Bots, pairing them is the best option.\n\nWhen pairing students, ensure they take equal turns using the device.\n\nDesign the course using flashcards so that students encounter at least five conditions regardless of their chosen path to the goal.\n\n\n\nStep 2: Explaining the Conditional Sheet\n\nStudents should be familiar with the Blue-Bots application, which uses code blocks to control movement. If unfamiliar, they may complete up to four condition-free obstacles before progressing.\nIntroduce the color-coded sheet, which specifies conditions requiring either the use or restriction of certain code blocks.\nSince some conditions involve turning at specific angles, ensure students understand the difference between 45-degree and 90-degree turns.\nClearly state each color used and the required action when landing on it.\n\n\n\nStep 3: Completing the Map\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student achieves their goal, have them reposition the marked goal within the top row of their three columns.\nAfter meeting their marked goals twice, allow them to modify the flashcards and provide guidance if their courses are not conditionally possible.\nOnce modifying their courses, ask them to keep track of how many times they meet their goal."
  },
  {
    "objectID": "k-6_activities/20activity/index.html#reflection",
    "href": "k-6_activities/20activity/index.html#reflection",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask them which conditional color they had the hardest time passing and why. Additionally, for those who kept count, ask how many times they were able to complete their obstacles.\n\nWhat color did you find the hardest to pass and why?\nWere there any colors you found too easy to pass by?\nHow many times were you able to finish your obstacle courses?"
  },
  {
    "objectID": "k-6_activities/20activity/index.html#summary",
    "href": "k-6_activities/20activity/index.html#summary",
    "title": "Activity 20: Conditional Color Coding with Blue-Bots",
    "section": "Summary",
    "text": "Summary\n\nBy programming Blue-Bots to navigate maps with specific constraints, students develop an understanding of how conditions affect movement and decision-making. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different coding sequences."
  },
  {
    "objectID": "k-6_activities/22activity/index.html",
    "href": "k-6_activities/22activity/index.html",
    "title": "Activity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "",
    "text": "In this action-packed session, students will tackle two creative missions with Dash: Basketball Challenge and Castle Siege. Each task is designed with increasing difficulty by grade level, allowing students to build their programming logic as they play.\nUsing Blockly, students will control Dash to move, aim, and launch in order to complete each objective. Along the way, they’ll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops—all wrapped inside a fun, interactive story."
  },
  {
    "objectID": "k-6_activities/22activity/index.html#overview",
    "href": "k-6_activities/22activity/index.html#overview",
    "title": "Activity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "",
    "text": "In this action-packed session, students will tackle two creative missions with Dash: Basketball Challenge and Castle Siege. Each task is designed with increasing difficulty by grade level, allowing students to build their programming logic as they play.\nUsing Blockly, students will control Dash to move, aim, and launch in order to complete each objective. Along the way, they’ll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops—all wrapped inside a fun, interactive story."
  },
  {
    "objectID": "k-6_activities/22activity/index.html#duration",
    "href": "k-6_activities/22activity/index.html#duration",
    "title": "Activity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Duration",
    "text": "Duration\n\nEstimated Time: 40 minutes"
  },
  {
    "objectID": "k-6_activities/22activity/index.html#materials",
    "href": "k-6_activities/22activity/index.html#materials",
    "title": "Activity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Materials",
    "text": "Materials\n\nDash Robot (with Launcher add-on)\n\n3 soft balls per robot\n\nPlastic cups, blocks, or small boxes\n\nTape or tiles for making paths\n\nTablets with Blockly app\n\nOptional: cones, obstacles, or themed props for story immersion (Note: You can create your own unique story for the kids)"
  },
  {
    "objectID": "k-6_activities/22activity/index.html#challenge-1-dashs-basketball-mission",
    "href": "k-6_activities/22activity/index.html#challenge-1-dashs-basketball-mission",
    "title": "Activity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Challenge 1: Dash’s Basketball Mission 🏀",
    "text": "Challenge 1: Dash’s Basketball Mission 🏀\n\nStoryline\nStory 1: Dash dreams of being a pro basketball player. Today, he’s stepping up to take 3 shots at the hoop, but he needs your help to get the ball in every time.\n\n\nSetup\n\nPlace a cup or small container at a reasonable distance.\n\nDash must move to a firing position and attempt to land all 3 balls in the target.\n\nDepending on the grade, students can work with pre-made or self-designed paths.\n\n\n\nGrade-Level Breakdown\nGrades 1–2 (Getting Started)\n- Use a guided path for Dash.\n- Focus on simple commands like forward, turn, and launch.\n- One shot at a time, 3 total.\n- 🔍 Focus Skill: Following instructions, cause-and-effect logic.\nGrades 3–4 (Growing Coders)\n- Students design the path to the hoop.\n- Adjust launch strength to score.\n- Use blocks like launch at __%, repeat, and basic conditionals.\n- 🔍 Focus Skill: Adjusting variables, learning loops.\nGrades 5–6 (Code Pros)\n- Students must build their own obstacle course and hit all 3 shots using a single sequence of blocks.\n- Encourage use of loops, variables, and conditions to optimize.\n- 🔍 Focus Skill: Efficiency, strategic thinking, and testing."
  },
  {
    "objectID": "k-6_activities/22activity/index.html#challenge-2-dashs-castle-siege",
    "href": "k-6_activities/22activity/index.html#challenge-2-dashs-castle-siege",
    "title": "Activity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Challenge 2: Dash’s Castle Siege 🏰",
    "text": "Challenge 2: Dash’s Castle Siege 🏰\n\nStoryline\nA princess is locked inside a castle made of blocks. Dash is on a quest to bring down the gates and rescue her with his launcher, but the walls are tougher than they look.\n\n\nSetup\n\nCreate a “castle” out of stacked cups or blocks.\n\nDash will move into range and fire at lower blocks to topple the wall.\n\nAdd extra conditions or obstacles for upper levels.\n\n\n\nGrade-Level Breakdown\nGrades 1–2 (New Knights)\n- Follow a path to the castle.\n- Aim and fire to knock down the wall.\n- 🔍 Focus Skill: Object interaction and movement basics.\nGrades 3–4 (Castle Crushers)\n- Allow retries with loops.\n- Focus on hitting weak points in the wall.\n- Use repeat blocks and conditional retries.\n- 🔍 Focus Skill: Recognizing patterns, problem-solving.\nGrades 5–6 (Master Coders)\n- Add rules: “If wall is still up, fire again.”\n- Include extra steps like navigating inside the castle after it falls.\n- Must use a complete block sequence with minimal trial edits.\n- 🔍 Focus Skill: Conditional logic, multi-step planning."
  },
  {
    "objectID": "k-6_activities/22activity/index.html#discussion-reflection",
    "href": "k-6_activities/22activity/index.html#discussion-reflection",
    "title": "Activity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter both challenges, gather the class for a quick debrief. We can ask:\n\nWhat changes made your shots or launches more accurate?\nDid your code work the first time? If not, how did you fix it?\nWhat strategy did you use for loops or conditionals?\nWhat part did you enjoy the most?"
  },
  {
    "objectID": "k-6_activities/22activity/index.html#wrap-up",
    "href": "k-6_activities/22activity/index.html#wrap-up",
    "title": "Activity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nThese themed Dash activities blend creative storytelling with foundational programming skills. By adjusting challenge levels and allowing room for imagination, students stay engaged while learning how to think like a programmer: plan, test, adjust, and try again!"
  },
  {
    "objectID": "k-6_activities/index.html",
    "href": "k-6_activities/index.html",
    "title": "K-6 Activities",
    "section": "",
    "text": "Welcome to the page where you can find all the activities that have already been implemented. Use the categories to find activities based on grade and time required.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nActivity 1: Navigating Decisions with If-Else-Elif Statements\n\n\nTeaching students the fundamentals of if-else-elif statements through hands-on activities.\n\n\n\nGrade: 5\n\n\nTime: 1 Hour\n\n\n\n\n\n\n5th Grade\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 2: Binary & Balloons\n\n\nIntroducing students to binary numbers through interactive and fun activities.\n\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n2nd Grade onwards\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 3: Different Ways a Computer Sorts\n\n\nTeaching students about sorting algorithms through hands-on activities.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st Grade onwards\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 4: Bee Bots\n\n\nEngaging students in creating obstacles and routes through block coding with Bee Bots.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten - 6th Grade\n\n\nVaries by grade\n\n\n\n\n\n\n\nActivity 5: Ozobots\n\n\nImproving students computational thinking skills through an conditional activity.\n\n\n\nGrade: Kindergarten\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten\n\n\n30 mintues\n\n\n\n\n\n\n\nActivity 6: Debugging\n\n\nTeaching students to identify and fix bugs in code through hands-on activities.\n\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n4th - 6th Grade\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 7: Pattern Recognition Activity - Pattern Detectives\n\n\nEngaging students in identifying, analyzing, and creating simple patterns using shapes, colors, or numbers.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\n1st Grade onwards\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 8: Designing and Programming Robots\n\n\nEncouraging creativity and critical thinking through robot design and online coding.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarden - 5th grade\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 9: Maze Navigation Activity\n\n\nIntroducing computational thinking through maze navigation and algorithmic planning.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten and beyond (Adaptable Complexity)\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 10: Internet Safety Routes\n\n\nTeaching internet safety through identifying safe and unsafe actions online using Spheros.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\n1st grade onwards\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 11: Minecraft Designer\n\n\nExploring Minecraft through Block Coding on Code.org\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nAll Grades\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 12: Blue-Blocs\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: Varies\n\n\n\n\n\n\n4th, 5th, and 6th grade\n\n\nVaries by grade\n\n\n\n\n\n\n\nActivity 13: Sphero Exploration\n\n\nProviding students with practice using Sphero robots through a fun and engaging competition.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st Grade onwards\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 14: Code with Anna and Elsa\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nAll grades\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 15: Arduino\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\nAll grades\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 16: Protect Your Password\n\n\nLearning the Importance of Strong Passwords\n\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 1 Hour\n\n\n\n\n\n\n3rd Grade onwards\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 17: Facts and Questions\n\n\nEnhancing Computational Thinking through Interactive Coding Challenges.\n\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 45 Minutes\n\n\n\n\n\n\nAll grades\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 18: Play Doh Lights\n\n\nEnhancing Knowledge of Electricity and Inspiring Creativity.\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nAll grades\n\n\n1 hour\n\n\n\n\n\n\n\nActivity 19: Paper Pattern Recognition\n\n\nLearn more about pattern recognition by creating your own patterns!\n\n\n\nGrade: Kindergarten\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nTime: 30 Minutes\n\n\n\n\n\n\nKindergarten, 1st, 2nd, 3rd\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 20: Conditional Color Coding with Blue-Bots\n\n\nComplete the Blue-Bot maps but make sure to follow the color code.\n\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n2nd, 3rd\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 21: Shapes and A-to-B Movements with Blue-Bots\n\n\nUse the Blue-Bot to create squares and various A-to-B pathways, making sure to test different combinations of movements.\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st, 2nd\n\n\n30 minutes\n\n\n\n\n\n\n\nActivity 22: Dash’s Adventure Series – Basketball Challenge & Castle Siege\n\n\nProgram Dash to complete two missions using launching logic and movement!\n\n\n\nGrade: 1\n\n\nGrade: 2\n\n\nGrade: 3\n\n\nGrade: 4\n\n\nGrade: 5\n\n\nGrade: 6\n\n\nTime: 40 Minutes\n\n\n\n\n\n\n1st–6th\n\n\n40 minutes\n\n\n\n\n\n\n\nActivity 23: Dash Bots Pathway Challenge and Free Play\n\n\nUse the Dash Bot to create unique pathways, making sure to test various directional movements, sounds, and light changes.\n\n\n\nGrade: Grade: 1\n\n\nGrade: 2\n\n\nTime: 30 Minutes\n\n\n\n\n\n\n1st, 2nd\n\n\n30 minutes\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n Back to top"
  },
  {
    "objectID": "middle_school/01presentation/01presentation.html",
    "href": "middle_school/01presentation/01presentation.html",
    "title": "Presentation 1: Intro to Robotics",
    "section": "",
    "text": "This lesson introduces middle school students to the exciting world of robotics. Students will learn about the wide range of applications for robots, explore different types of robotic systems (like manipulators, wheeled, legged, humanoid, aerial, and underwater robots), and understand why robotics is a growing field with strong career prospects. This is designed to inspire curiosity and introduce core ideas in STEM through discussion and examples."
  },
  {
    "objectID": "middle_school/01presentation/01presentation.html#description",
    "href": "middle_school/01presentation/01presentation.html#description",
    "title": "Presentation 1: Intro to Robotics",
    "section": "",
    "text": "This lesson introduces middle school students to the exciting world of robotics. Students will learn about the wide range of applications for robots, explore different types of robotic systems (like manipulators, wheeled, legged, humanoid, aerial, and underwater robots), and understand why robotics is a growing field with strong career prospects. This is designed to inspire curiosity and introduce core ideas in STEM through discussion and examples."
  },
  {
    "objectID": "middle_school/01presentation/01presentation.html#materials-required",
    "href": "middle_school/01presentation/01presentation.html#materials-required",
    "title": "Presentation 1: Intro to Robotics",
    "section": "Materials Required",
    "text": "Materials Required\n\nProjector or computer with presentation\nOptional: toy robots, robot arms, or images/videos of real-world robots for demonstration"
  },
  {
    "objectID": "middle_school/01presentation/01presentation.html#presentation-link",
    "href": "middle_school/01presentation/01presentation.html#presentation-link",
    "title": "Presentation 1: Intro to Robotics",
    "section": "Presentation Link",
    "text": "Presentation Link"
  },
  {
    "objectID": "middle_school/01presentation/01presentation.html#presentation-pdf",
    "href": "middle_school/01presentation/01presentation.html#presentation-pdf",
    "title": "Presentation 1: Intro to Robotics",
    "section": "Presentation PDF",
    "text": "Presentation PDF"
  },
  {
    "objectID": "middle_school/01presentation/01presentation.html#questions-to-ask",
    "href": "middle_school/01presentation/01presentation.html#questions-to-ask",
    "title": "Presentation 1: Intro to Robotics",
    "section": "Questions to Ask",
    "text": "Questions to Ask\n\nWhat are some examples of robots you’ve seen or heard about?\nWhy do you think robots are useful in dangerous environments?\nHow are wheeled robots different from legged robots?\nWhat is one job you think a robot could never do?\nWhich type of robot do you think is the coolest? Why?\nWould you like to design or work with robots someday?"
  },
  {
    "objectID": "middle_school/01presentation/01presentation.html#learning-outcomes",
    "href": "middle_school/01presentation/01presentation.html#learning-outcomes",
    "title": "Presentation 1: Intro to Robotics",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nStudents will be able to:\n\nIdentify common uses of robots in various fields like manufacturing, healthcare, and space.\nDescribe at least three types of robots and their applications.\nUnderstand how robots help increase safety, efficiency, and convenience in daily life.\nDiscuss the role of robotics in future careers and its impact on society."
  },
  {
    "objectID": "middle_school/01presentation/01presentation.html#reflection",
    "href": "middle_school/01presentation/01presentation.html#reflection",
    "title": "Presentation 1: Intro to Robotics",
    "section": "Reflection",
    "text": "Reflection\n\nWhat is one thing you learned today that surprised you?\nWhich type of robot would you want to build or work with?\nHow might robotics change the world in the next 10 years?\nDo you think robots will make more jobs or take jobs away? Why?"
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html",
    "href": "middle_school/02presentation/02presentation.html",
    "title": "Presentation 2: ROV Design",
    "section": "",
    "text": "This presentation introduces students to the design and construction of Remotely Operated Vehicles (ROVs). Students will explore what ROVs are, their uses, core systems, and engage in building their own basic frame using PVC parts See Activity 3."
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html#description",
    "href": "middle_school/02presentation/02presentation.html#description",
    "title": "Presentation 2: ROV Design",
    "section": "",
    "text": "This presentation introduces students to the design and construction of Remotely Operated Vehicles (ROVs). Students will explore what ROVs are, their uses, core systems, and engage in building their own basic frame using PVC parts See Activity 3."
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html#materials-required",
    "href": "middle_school/02presentation/02presentation.html#materials-required",
    "title": "Presentation 2: ROV Design",
    "section": "Materials Required",
    "text": "Materials Required\n\nProjector or computer with presentation\nOptional: ROV for demonstration"
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html#presentation-link",
    "href": "middle_school/02presentation/02presentation.html#presentation-link",
    "title": "Presentation 2: ROV Design",
    "section": "Presentation Link",
    "text": "Presentation Link"
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html#presentation-pdf",
    "href": "middle_school/02presentation/02presentation.html#presentation-pdf",
    "title": "Presentation 2: ROV Design",
    "section": "Presentation PDF",
    "text": "Presentation PDF"
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html#questions-to-ask",
    "href": "middle_school/02presentation/02presentation.html#questions-to-ask",
    "title": "Presentation 2: ROV Design",
    "section": "Questions to Ask",
    "text": "Questions to Ask\n\nWhat is an ROV and what makes it different from other robots?\nWhy might we want an ROV to be tethered?\nWhich systems are most important for underwater movement?\nHow do buoyancy and propulsion interact?\nWhat kinds of tasks can ROVs be designed for?"
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html#activities",
    "href": "middle_school/02presentation/02presentation.html#activities",
    "title": "Presentation 2: ROV Design",
    "section": "Activities",
    "text": "Activities\n\nStep 1: What is an ROV?\nStudents learn about the concept of remotely operated vehicles, tethering, and real-world use cases like underwater archaeology and water quality monitoring.\n\n\nStep 2: Understanding ROV Systems\nIntroduce students to essential subsystems: - Frame - Buoyancy - Propulsion - Power - Control - Tether - (Optionally mention sensors/payloads)\n\n\nStep 3: ROV Design Styles\nCompare orthogonal and vector motor configurations: - Orthogonal: Surge, Heave, Yaw, Sway - Vector: Surge, Heave (vectored), Yaw, Sway (vectored)\n\n\nStep 4: Build Your Own Frame\nUse the provided cut PVC pieces and connectors to assemble a 2-motor orthogonal ROV frame. One motor for horizontal motion and one for vertical.\nSee Activity 3 for an online version the building activity.\nBuild instructions link:\nPDF Instructions"
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html#reflection",
    "href": "middle_school/02presentation/02presentation.html#reflection",
    "title": "Presentation 2: ROV Design",
    "section": "Reflection",
    "text": "Reflection\n\nWhat challenges do you think you will face when building your ROV frame?\nHow do you think certain designs perform in water?\nIf you could add one new feature or improvement to an ROV, what would it be?"
  },
  {
    "objectID": "middle_school/02presentation/02presentation.html#learning-outcomes",
    "href": "middle_school/02presentation/02presentation.html#learning-outcomes",
    "title": "Presentation 2: ROV Design",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nUnderstand what an ROV is and identify its core components.\nCompare different underwater movement systems and ROV layouts.\nApply design thinking and basic engineering principles to construct an ROV frame.\nCollaborate in teams to solve real-world-inspired challenges."
  },
  {
    "objectID": "middle_school/04activity/04activity.html",
    "href": "middle_school/04activity/04activity.html",
    "title": "Activity 4: ROV Motor Control",
    "section": "",
    "text": "In this hour session, students will learn about motors and create their own motor systems for their ROVs. Students will go step-by-step through the process of connecting a battery pack, switches, and tethered motors, eventually waterproofing the system and customizing their builds."
  },
  {
    "objectID": "middle_school/04activity/04activity.html#description",
    "href": "middle_school/04activity/04activity.html#description",
    "title": "Activity 4: ROV Motor Control",
    "section": "",
    "text": "In this hour session, students will learn about motors and create their own motor systems for their ROVs. Students will go step-by-step through the process of connecting a battery pack, switches, and tethered motors, eventually waterproofing the system and customizing their builds."
  },
  {
    "objectID": "middle_school/04activity/04activity.html#materials-required",
    "href": "middle_school/04activity/04activity.html#materials-required",
    "title": "Activity 4: ROV Motor Control",
    "section": "Materials Required",
    "text": "Materials Required\n\nProjector or computer with presentation\nOptional: ROV for demonstration\n3 ft long 2-strand white wire\n9V battery holder\nRed and green solder seal wire connectors\nWire strippers\nSharpie\nHeat gun\nRed and black wire spools\n2 switches\nControl box (base and top)\n6-wire black tether\nBlue and yellow wire spools\nScrewdriver\nBolts for control box\nElectrical tape\n2 motors and propeller parts\n2 PVC motor holders\nCoax seal\nZip ties\n\nROV Motor Control Presentation PDF\nROV Motor Control Presentation Link\nOptional: ROV Motor Control Steps PDF"
  },
  {
    "objectID": "middle_school/04activity/04activity.html#learning-outcomes",
    "href": "middle_school/04activity/04activity.html#learning-outcomes",
    "title": "Activity 4: ROV Motor Control",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nIdentify the basic components used in ROV motor systems\nUnderstand the electrical connections for powering and controlling motors\nSafely use solder seal connectors and heat tools\nBuild and waterproof an underwater motor system\nTest and troubleshoot an ROV motor system"
  },
  {
    "objectID": "middle_school/04activity/04activity.html#agenda",
    "href": "middle_school/04activity/04activity.html#agenda",
    "title": "Activity 4: ROV Motor Control",
    "section": "Agenda",
    "text": "Agenda\n\n1. Make Battery Connections\n\n1.1 Gather Your Materials\n\n1x 3 ft long 2 strand white wire\n1x 9v battery holder\nRed Solder Seal Wire Connectors (Share with Others)\nWire Strippers (Share with others)\nSharpie (Share with others)\nHeatgun (Share with others)\n\n\n\n\nMaterials\n\n\n\n\n1.2 Battery to Wires\n\nSeparate a small amount of the white wire at the ends. Strip the ends of the white wires carefully to about ½ in to 1 inch long on all 4 ends.\n\n\n\n\nWhite Wire\n\n\n\n\n\nWhite Wire\n\n\n\n\n\nWhite Wire\n\n\n\nStrip the battery holder wires ¼–½ inch.\n\n\n\n\nBattery Holder Wire\n\n\n\n\n\nBattery Holder Wire\n\n\n\nMark one side of the white wire on both ends with Sharpie to label it GND.\n\n\n\n\nWhite Wire Labeled\n\n\n\nTwist all wire ends so they are neat.\n\n\n\n\nTwisted Wires\n\n\n\nPick one end of the white wire with the sharpie mark to connect to the black wire of the battery holder. Use a solder seal wire connector to connect the black wire of the box and the sharpie marked wire together. Put the ends of the wires inside the seal piece and make sure the silver part in the middle (solder) is touching both wires. You may have to push the wires in further ro reach properly.\n\n\n\n\nSolder Connector\n\n\n\n\n\nSolder Connector\n\n\n\nUse the heat gun about 3 inches away from the wire to very carefully to shrink the connector ON A HEAT SAFE SURFACE - the regular wood of the table will burn so use a piece of scrap wood. Wait until the solder in the middle has melted to stop heating it. Don’t touch it with your fingers until it has cooled. Try your best not to melt the wires themselves and if you see that happening turn off the heat gun and ask for help.\n\n\n\n\nHeat Gun\n\n\n\n\n\nHeat Gun\n\n\n\nWait till it has cooled and check that the wires are secure in the connector and don’t move when you lightly tug on them.\nNow on the same end of the white wire take the side you did not mark and connect it to the red wire. Make sure the metal in the connector is touching both the wires. Use the heat gun very carefully to shrink the connector. Don’t touch it with your fingers until it has cooled.\n\n\n\n\nBattery Connection\n\n\n\n\n\nBattery Connection\n\n\n\n\n1.3 Wires to the Switches\nRequirements - Red wire spool - Black wire spool - 2 switches - Control box\n\nCut two 8-inch red and two 8-inch black wires.\n\n\n\n\nCut Wires\n\n\n\nStrip the ends of the loose black and red wires about ½ in and twist the ends so they are neat.\n\n\n\n\nCut Wires\n\n\n\n\n\nCut Wires\n\n\n\nIdentify the GND (Sharpie) side of the white wire and twist it with the two black wires.\n\n\n\n\nCut GND Wires\n\n\n\n\n\nCut GND Wires\n\n\n\nUse a green solder connector and run it over both the black wires and bring it to the point where the wires are twisted. Make sure the silver middle is overtop the twisted wires. Again carefully use the heat gun on a safe surface to shrink the connector. Do not touch it will your hands until it has cooled.\n\n\n\n\nConnected Wire\n\n\n\n\n\nConnected Wire\n\n\n\nTwist the unmarked white wire with the two red wires and connect using another solder connector.Run a green solder connector over top both of the red wires and bring it to the point the wires are twisted. Make sure the silver middle is overtop the twisted wires. Again carefully use the heat gun on a safe surface to shrink the connector. Do not touch it will your hands until it has cooled.\n\n\n\n\nConnected Red Wire\n\n\n\n\n\nConnected Red Wire\n\n\n\n\n\nConnected Red Wire\n\n\n\n\n\nConnected Red Wire\n\n\n\n\n\nConnected Red Wire\n\n\n\nRoute wires through the hole in the control box and tie a knot to prevent slipping.\n\n\n\n\nWires in the box\n\n\n\n\n\nWires in the box\n\n\n\n\n\nWires in the box\n\n\n\nLoosen switch screws and hook a red wire to one middle terminal of the switch. You do not have to take them out all the way. While it is hooked tighten the screw so that the red wire is stuck underneath it and it is snug enough you can not tug it out easily\n\n\n\n\nSwitch\n\n\n\n\n\nSwitch\n\n\n\n\n\nSwitch\n\n\n\n\n\nSwitch\n\n\n\n\n\nSwitch\n\n\n\nHook a black wire to the opposite middle terminal and tighten.\n\n\n\n\nSwitch\n\n\n\n\n\nSwitch\n\n\n\n\n\nSwitch\n\n\n\nRepeat for the second switch with the remaining red and black wires.\n\n\n\n1.4 Motor Tether to the Switches\nRequirements - 6 wire black tether - Blue wire spool - Yellow wire spool - Screwdriver - Wire strippers - 2x Switches and switch secures - Control box base and top - Bolts for control box lids - Electrical tape\n\nTake the black tether and strip the ends so that the colored wires are showing. Strip the black about 6 inches on one side and 3 inches on the other.\n\n \n\nStrip the yellow, white, orange and green colored wires ½ inch and twist the ends of the wires so they are neat.\nPush the 6-inch tether side through the same control box hole.\n\n\n\n\nControl Box\n\n\n\nCut two blue and two yellow wires about 2½ inches long and strip ends.\n\n\n\n\nBlue-Yellow\n\n\n\nConnect the white tether wire + a short blue wire to one switch terminal (above black wire).\n\n\n\n\nBlue White Wire\n\n\n\n\n\nBlue White Wire\n\n\n\nConnect the other end of the blue wire diagonally opposite (below black wire).\n\n\n\n\nBlue Diagonal\n\n\n\nConnect the orange wire + yellow wire to the opposite top terminal (above red wire).\n\n\n\n\nYellow Wire\n\n\n\nConnect the other end of the yellow wire diagonally opposite (below red wire).\n\n\n\n\nYellow Wire Diagonal\n\n\n\nRepeat for the second switch using the yellow and green tether wires + other yellow/blue jumpers. Screw the other end of the small yellow wire into the pole diagonal from it so below the black wire Now take the green tether wire and the short blue wire and screw them into the top right pole (above the black wire).Screw the other end of the blue wire diagonally across from it so underneath the red wire. The end result should be a cross shape\n\n\n\n\nSecond Switch\n\n\n\n\n\nSecond Switch\n\n\n\n\n\nSecond Switch\n\n\n\n\n\nSecond Switch\n\n\n\nNow check both switches for straggly wires that might accidentally touch other poles. You can trim them away or try to tuck them. Crossing poles is not good and your robot won’t work\n\n\n\n\nTrim Stragglers\n\n\n\nMount switches into the lid: white/orange switch on right, yellow/green on left.\n\n\n\n\nSwitch Box\n\n\n\nUse this order on each switch: on/off label, washer, nut, rubber topper (optional).\n\n\n\n\nSwitch Order\n\n\n\n\n\nSwitch Box\n\n\n\nUse electrical tape to secure white wire and tether inside the box.\n\n\n\n\nSwitch Box Tapped\n\n\n\nBolt the lid onto the control box.\n\n\n\n\n2. Make Motor-to-Tether Connections\n\n2.1 Prep the Motors\nRequirements - 2 motors and propellor parts - 2 PVC motor holders 1. Attach propellers to the motors using the presentation link.\n\n\n\nMotor\n\n\n\nMount motors into ROV: back motor facing backward, vertical motor facing up.\n\n\n\n\nMotor Mounted\n\n\n\n\n\nMotor Mounted\n\n\n\nStrip brown and black wires of both motors.\n\n\n\n\nMotor Wires\n\n\n\n\n2.2 Connect the Tether to the Motors\n\nStrip the orange, white, yellow, and green tether wires ½ inch.\n\n\n\n\nMotor Wires\n\n\n\n\n\nMotor Wires\n\n\n\nConnect white tether wire to brown motor wire using solder connector. Carefully use the heat gun to melt the solder. Do not touch the wires till they have cooled. Make sure to do this on a safe surface such as the scrap wood.\n\n\n\n\nMotor Wires\n\n\n\nConnect orange tether wire to black motor wire.\n\n\n\n\nMotor Wires\n\n\n\nFor vertical motor, connect yellow tether wire to brown motor wire.\n\n\n\n\nMotor Wires\n\n\n\nConnect green tether wire to black motor wire.\n\n\n\n\nMotor Wires\n\n\n\nUse heat gun to seal all connections safely.\n\n\n\n\n3. Plug it In\n\nCheck that no wires are in motor paths.\nPlug in 9V battery and flip switch on.\nUse switches to test motor direction.\nIf issues arise, check wire connections or ask for help.\n\n\n\n4. Waterproofing and Zip Tie\n\nWrap motor-to-tether solder joints with coax seal—fully squish and cover.\n\n\n\n\nWaterproofing\n\n\n\n\n\nWaterproofing\n\n\n\nSeal the tether base where wires emerge.\n\n\n\n\nWaterproofing\n\n\n\nCover red and black tether wires if unused.\nUse zip ties to cleanly attach wires to the frame.\nAdjust balance by compensating if wires add weight to one side.\nTrim zip ties.\n\n\n\n\nRobot Complete\n\n\n\n\n5. Extensions\n\nTest the finished ROV in a small pool.\nAllow time for students to decorate or customize their ROVs."
  },
  {
    "objectID": "middle_school/04activity/04activity.html#reflection",
    "href": "middle_school/04activity/04activity.html#reflection",
    "title": "Activity 4: ROV Motor Control",
    "section": "Reflection",
    "text": "Reflection\nReflect on what went well and where challenges occurred during motor assembly. Were any parts difficult to connect? Did waterproofing work as expected? What improvements could be made?"
  },
  {
    "objectID": "middle_school/index.html",
    "href": "middle_school/index.html",
    "title": "Middle School Outreach",
    "section": "",
    "text": "Welcome to the page where you can find all the activities or presentations that have already been implemented. Use the categories to find activities based on topic and time required."
  },
  {
    "objectID": "middle_school/index.html#multi-week-curriculums",
    "href": "middle_school/index.html#multi-week-curriculums",
    "title": "Middle School Outreach",
    "section": "Multi-week Curriculums",
    "text": "Multi-week Curriculums\nExplore our multi-week curriculums designed to teach middle school students essential computing skills. Click on a curriculum to learn more.\n\n  \n    \n      6 Weeks: Underwater Robotics\n      Learn the basics of underwater robotics with hands-on activities to build your own robot."
  },
  {
    "objectID": "middle_school/index.html#all-activities",
    "href": "middle_school/index.html#all-activities",
    "title": "Middle School Outreach",
    "section": "All Activities",
    "text": "All Activities\nExplore all our activities. Use the categories on the side to sort the activities by type."
  },
  {
    "objectID": "technical-leader-guide/index.html",
    "href": "technical-leader-guide/index.html",
    "title": "Guide for Computing Outreach Fellows",
    "section": "",
    "text": "Computing outreach involves engaging K-12 students in regular, hands-on computing activities to foster interest and competency in computational skills. This includes introducing students to computational thinking and problem-solving through events, workshops, classroom activities, and using technologies. The goal is to provide consistent exposure to the computing field in a fun and engaging way."
  },
  {
    "objectID": "technical-leader-guide/index.html#what-is-the-computing-outreach-program",
    "href": "technical-leader-guide/index.html#what-is-the-computing-outreach-program",
    "title": "Guide for Computing Outreach Fellows",
    "section": "",
    "text": "Computing outreach involves engaging K-12 students in regular, hands-on computing activities to foster interest and competency in computational skills. This includes introducing students to computational thinking and problem-solving through events, workshops, classroom activities, and using technologies. The goal is to provide consistent exposure to the computing field in a fun and engaging way."
  },
  {
    "objectID": "technical-leader-guide/index.html#what-to-expect-as-a-computing-outreach-fellow",
    "href": "technical-leader-guide/index.html#what-to-expect-as-a-computing-outreach-fellow",
    "title": "Guide for Computing Outreach Fellows",
    "section": "What to Expect as a Computing Outreach Fellow",
    "text": "What to Expect as a Computing Outreach Fellow\n\nYou will be tasked with activities that will vary depending on the grades you are working with.\nAll activities will be held in groups that can vary depending on the size of the class.\nWorking with younger students (K to 2nd grade) will involve activities that are more focused on reading and explaining methods of computational thinking.\nOlder students (5th to 6th grade) will involve the use of robotics in activities, requiring fellows to understand how the robots work and how they fit into the activities.\nYou will be given outlines that will guide you through the necessary steps for conducting activities."
  },
  {
    "objectID": "technical-leader-guide/index.html#key-responsibilities",
    "href": "technical-leader-guide/index.html#key-responsibilities",
    "title": "Guide for Computing Outreach Fellows",
    "section": "Key Responsibilities",
    "text": "Key Responsibilities\n\nWorking with children and teenagers across different age groups.\nCollaborating with faculty at Meadville public schools.\nRunning through and understanding activities beforehand.\nReading books and using resources that improve students’ understanding of computational skills.\nAdapting activities to suit the age group and skill level of the students."
  },
  {
    "objectID": "k-6_activities/23activity/index.html",
    "href": "k-6_activities/23activity/index.html",
    "title": "Activity 23: Dash Bots Pathway Challenge and Free Play",
    "section": "",
    "text": "Instructions given on how to use the app to control the dash bots. Have the students create a path on a whiteboard and use the app to move the Dash bot to said path. Free play for rest of time."
  },
  {
    "objectID": "k-6_activities/23activity/index.html#description",
    "href": "k-6_activities/23activity/index.html#description",
    "title": "Activity 23: Dash Bots Pathway Challenge and Free Play",
    "section": "Description",
    "text": "Description\nIn this activity, students will use Dash Bots to create various paths made up of different movements, sounds, and light changes. Students will create a plan for their Dash on a whiteboard, and then take turns driving the Dash through their created path. After students progress through the unique pathways challenge, they will be free to attempt more complex challenges or experiment with free play. This approach fosters a natural creativity the students may have, and will allow them to learn more about the Dash’s abilities through firsthand experience."
  },
  {
    "objectID": "k-6_activities/23activity/index.html#time-required",
    "href": "k-6_activities/23activity/index.html#time-required",
    "title": "Activity 23: Dash Bots Pathway Challenge and Free Play",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "k-6_activities/23activity/index.html#materials-required",
    "href": "k-6_activities/23activity/index.html#materials-required",
    "title": "Activity 23: Dash Bots Pathway Challenge and Free Play",
    "section": "Materials Required",
    "text": "Materials Required\n\nDash Bots\nDash Bot App: Wonder (IPAD)\nWhiteboard\nDry Erase Marker\n\n\nStep 1: Distribution of Materials\n\nStudents will be split into groups of two. Each group will be given an IPAD, a Dash bot, a dry erase marker, and a whiteboard.\nEnsure there is one Dash bot for every group of students. If there are more students than available Dash bots or IPADS, increasing the number of students per group is the best option.\n\nWhen pairing students, ensure they take equal turns using the device.\n\n\n\n\nStep 2: Making the Pathway\n\nStudents should be familiar with the Dash bot application, which uses buttons to control movement. To refresh their awareness and to help with the lesson, have them attempt to mess the Dash Bot for 2 minutes. Now that they are refreshed, have the students use their whiteboard materials to create a pathway utilizing the different aspects of the Dash bot.\nOnce the pathway has been created, have the students use the ipad to traverse the bot through the pathway they made. Make sure both students get a turn to try.\n\n\n\nStep 3: Follow-up Challenge or Free Play\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student finishes their pathway, have them reposition the Blue Bot as designated by the ipad’s new pathway.\nAfter meeting their marked goals, allow them the chpice to create another pathway or engage in free play with te Dash bot.\n\nIf partaking in another path, ask them to keep track of how many times they meet their goal."
  },
  {
    "objectID": "k-6_activities/23activity/index.html#reflection",
    "href": "k-6_activities/23activity/index.html#reflection",
    "title": "Activity 23: Dash Bots Pathway Challenge and Free Play",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask how many of them were able to complete their pathways and, if applicable, they had any troubles. Additionally, for those who kept count, ask how many times they were able to complete their pathways.\n\nWhat directional combinations were tricky and why?\nWere there any pathways you found to be easy?\nHow many times were you able to finish your pathways?"
  },
  {
    "objectID": "k-6_activities/23activity/index.html#summary",
    "href": "k-6_activities/23activity/index.html#summary",
    "title": "Activity 23: Dash Bots Pathway Challenge and Free Play",
    "section": "Summary",
    "text": "Summary\n\nBy programming Dash bots to navigate pathways with various movement, audio, and visual cues, students develop an understanding of how different condition combinations affect the final result of a program. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different sequence combinations."
  },
  {
<<<<<<< HEAD
    "objectID": "activities/03activity/03activity.html#time-required",
    "href": "activities/03activity/03activity.html#time-required",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/03activity/03activity.html#discussion-reflection",
    "href": "activities/03activity/03activity.html#discussion-reflection",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhich method took them the least amount of time to complete?\nIf the answers vary, ask them why they felt that way.\n\n\nAnswers on Which Algorithm is Usually Faster\n\nBubble Sort: Slow because it has to compare and swap a lot.\nSelection Sort: A little better than bubble sort but still has to make many comparisons.\nInsertion Sort: Often the fastest of the three for small lists because it finds the right spot for each item without many unnecessary moves."
  },
  {
    "objectID": "activities/15activity/15activity.html#overview",
    "href": "activities/15activity/15activity.html#overview",
    "title": "Activity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "",
    "text": "In this action-packed session, students will tackle two creative missions with Dash: Basketball Challenge and Castle Siege. Each task is designed with increasing difficulty by grade level, allowing students to build their programming logic as they play.\nUsing Blockly, students will control Dash to move, aim, and launch in order to complete each objective. Along the way, they’ll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops—all wrapped inside a fun, interactive story."
  },
  {
    "objectID": "activities/15activity/15activity.html#duration",
    "href": "activities/15activity/15activity.html#duration",
    "title": "Activity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Duration",
    "text": "Duration\n\nEstimated Time: 40 minutes"
  },
  {
    "objectID": "activities/15activity/15activity.html#materials",
    "href": "activities/15activity/15activity.html#materials",
    "title": "Activity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Materials",
    "text": "Materials\n\nDash Robot (with Launcher add-on)\n\n3 soft balls per robot\n\nPlastic cups, blocks, or small boxes\n\nTape or tiles for making paths\n\nTablets with Blockly app\n\nOptional: cones, obstacles, or themed props for story immersion (Note: You can create your own unique story for the kids)"
  },
  {
    "objectID": "activities/15activity/15activity.html#challenge-1-dashs-basketball-mission",
    "href": "activities/15activity/15activity.html#challenge-1-dashs-basketball-mission",
    "title": "Activity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Challenge 1: Dash’s Basketball Mission 🏀",
    "text": "Challenge 1: Dash’s Basketball Mission 🏀\n\nStoryline\nStory 1: Dash dreams of being a pro basketball player. Today, he’s stepping up to take 3 shots at the hoop, but he needs your help to get the ball in every time.\n\n\nSetup\n\nPlace a cup or small container at a reasonable distance.\n\nDash must move to a firing position and attempt to land all 3 balls in the target.\n\nDepending on the grade, students can work with pre-made or self-designed paths.\n\n\n\nGrade-Level Breakdown\nGrades 1–2 (Getting Started)\n- Use a guided path for Dash.\n- Focus on simple commands like forward, turn, and launch.\n- One shot at a time, 3 total.\n- 🔍 Focus Skill: Following instructions, cause-and-effect logic.\nGrades 3–4 (Growing Coders)\n- Students design the path to the hoop.\n- Adjust launch strength to score.\n- Use blocks like launch at __%, repeat, and basic conditionals.\n- 🔍 Focus Skill: Adjusting variables, learning loops.\nGrades 5–6 (Code Pros)\n- Students must build their own obstacle course and hit all 3 shots using a single sequence of blocks.\n- Encourage use of loops, variables, and conditions to optimize.\n- 🔍 Focus Skill: Efficiency, strategic thinking, and testing."
  },
  {
    "objectID": "activities/15activity/15activity.html#challenge-2-dashs-castle-siege",
    "href": "activities/15activity/15activity.html#challenge-2-dashs-castle-siege",
    "title": "Activity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Challenge 2: Dash’s Castle Siege 🏰",
    "text": "Challenge 2: Dash’s Castle Siege 🏰\n\nStoryline\nA princess is locked inside a castle made of blocks. Dash is on a quest to bring down the gates and rescue her with his launcher, but the walls are tougher than they look.\n\n\nSetup\n\nCreate a “castle” out of stacked cups or blocks.\n\nDash will move into range and fire at lower blocks to topple the wall.\n\nAdd extra conditions or obstacles for upper levels.\n\n\n\nGrade-Level Breakdown\nGrades 1–2 (New Knights)\n- Follow a path to the castle.\n- Aim and fire to knock down the wall.\n- 🔍 Focus Skill: Object interaction and movement basics.\nGrades 3–4 (Castle Crushers)\n- Allow retries with loops.\n- Focus on hitting weak points in the wall.\n- Use repeat blocks and conditional retries.\n- 🔍 Focus Skill: Recognizing patterns, problem-solving.\nGrades 5–6 (Master Coders)\n- Add rules: “If wall is still up, fire again.”\n- Include extra steps like navigating inside the castle after it falls.\n- Must use a complete block sequence with minimal trial edits.\n- 🔍 Focus Skill: Conditional logic, multi-step planning."
  },
  {
    "objectID": "activities/15activity/15activity.html#discussion-reflection",
    "href": "activities/15activity/15activity.html#discussion-reflection",
    "title": "Activity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter both challenges, gather the class for a quick debrief. We can ask:\n\nWhat changes made your shots or launches more accurate?\nDid your code work the first time? If not, how did you fix it?\nWhat strategy did you use for loops or conditionals?\nWhat part did you enjoy the most?"
  },
  {
    "objectID": "activities/15activity/15activity.html#wrap-up",
    "href": "activities/15activity/15activity.html#wrap-up",
    "title": "Activity 15: Dash’s Adventure Series – Basketball Challenge & Castle Siege",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nThese themed Dash activities blend creative storytelling with foundational programming skills. By adjusting challenge levels and allowing room for imagination, students stay engaged while learning how to think like a programmer: plan, test, adjust, and try again!"
  },
  {
    "objectID": "activities/13activity/13activity.html",
    "href": "activities/13activity/13activity.html",
    "title": "Activity 13: Conditional Color Coding",
    "section": "",
    "text": "In this activity, students will use robots to navigate maps filled with conditional statements that require them to adhere to specific constraints. Each student will receive a color-coded reference sheet outlining the conditions that must be followed when standing on a particular color. As students progress through the obstacles, they will gradually encounter more complex challenges incorporating additional conditional statements. This structured approach fosters critical thinking and problem-solving skills while enhancing their understanding of conditional logic in programming."
  },
  {
    "objectID": "activities/13activity/13activity.html#description",
    "href": "activities/13activity/13activity.html#description",
    "title": "Activity 13: Conditional Color Coding",
    "section": "",
    "text": "In this activity, students will use robots to navigate maps filled with conditional statements that require them to adhere to specific constraints. Each student will receive a color-coded reference sheet outlining the conditions that must be followed when standing on a particular color. As students progress through the obstacles, they will gradually encounter more complex challenges incorporating additional conditional statements. This structured approach fosters critical thinking and problem-solving skills while enhancing their understanding of conditional logic in programming."
  },
  {
    "objectID": "activities/13activity/13activity.html#time-required",
    "href": "activities/13activity/13activity.html#time-required",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Time Required",
    "text": "Time Required\n\nTime Required: 30 minutes"
  },
  {
    "objectID": "activities/13activity/13activity.html#materials-required",
    "href": "activities/13activity/13activity.html#materials-required",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Materials Required",
    "text": "Materials Required\n\nProgramable and driveable robot\nIPAD\nMap (an example is shown below)\nCondtional Color Sheet\nColored Flashcards"
  },
  {
    "objectID": "activities/13activity/13activity.html#reflection",
    "href": "activities/13activity/13activity.html#reflection",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Reflection",
    "text": "Reflection\n\nAt the end of the activity, gather the students and ask them which conditional color they had the hardest time passing and why. Additionally, for those who kept count, ask how many times they were able to complete their obstacles.\n\nWhat color did you find the hardest to pass and why?\nWere there any colors you found too easy to pass by?\nHow many times were you able to finish your obstacle courses?"
  },
  {
    "objectID": "activities/13activity/13activity.html#summary",
    "href": "activities/13activity/13activity.html#summary",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Summary",
    "text": "Summary\n\nBy programming Blue-Bots to navigate maps with specific constraints, students develop an understanding of how conditions affect movement and decision-making. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different coding sequences."
  },
  {
    "objectID": "activities/11activity/11activity.html",
    "href": "activities/11activity/11activity.html",
    "title": "Activity 11: Protect Your Password",
    "section": "",
    "text": "In this activity, students will learn about the importance of creating strong passwords to protect their online accounts. Through interactive games and discussions, students will understand the concept of a strong password, learn why weak passwords can be easily guessed, and practice creating secure passwords using a mix of characters. This hands-on activity helps introduce cybersecurity concepts and promotes safe online behavior."
  },
  {
    "objectID": "activities/11activity/11activity.html#description",
    "href": "activities/11activity/11activity.html#description",
    "title": "Activity 11: Protect Your Password",
    "section": "",
    "text": "In this activity, students will learn about the importance of creating strong passwords to protect their online accounts. Through interactive games and discussions, students will understand the concept of a strong password, learn why weak passwords can be easily guessed, and practice creating secure passwords using a mix of characters. This hands-on activity helps introduce cybersecurity concepts and promotes safe online behavior."
  },
  {
    "objectID": "activities/11activity/11activity.html#materials-required",
    "href": "activities/11activity/11activity.html#materials-required",
    "title": "Activity 11: Protect Your Password",
    "section": "Materials Required",
    "text": "Materials Required\n\nWhiteboard or digital presentation for demonstrating concepts\nPaper and pencils for password creation practice\nPrintouts or projector for displaying examples of strong and weak passwords\nOnline password strength meter"
  },
  {
    "objectID": "activities/11activity/11activity.html#steps-to-conduct-the-activity",
    "href": "activities/11activity/11activity.html#steps-to-conduct-the-activity",
    "title": "Activity 11: Protect Your Password",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nDivide the students into small groups.\nHand each group a piece of paper and a pencil to use later in the activity.\n\n\n\nDifficulty Breakdown\n\nIntroduction\n\nStart by asking students what passwords are and why they are used.\nExplain that passwords help protect personal information from being accessed by others online.\nDiscuss the importance of using passwords that are hard to guess, and introduce the term “strong password.”\nWrite examples of weak passwords on the board (e.g., 123456, password, abc123) and explain why these are easy to guess.\nDiscuss what makes a strong password, including:\n\nA mix of uppercase and lowercase letters\nNumbers\nSymbols (e.g., @, #, $, etc.)\nAvoiding common words or personal information (like names and birthdays)\n\n\n\n\nInstructions\n\nChallenge each group to come up with a easy password and a strong password following the rules discussed.\nGive them a reason to come up with this idea (Like a treasure password).\nOnce groups have created their passwords, have them test their passwords using an online password strength meter\nThen have a game play out where different group guess each of their passwords to see if it is easy to guess the passwords.\nDiscuss how to keep passwords safe:\n\nDon’t share passwords with others.\nUse different passwords for different websites.\nChange passwords regularly.\nUse a password manager."
  },
  {
    "objectID": "activities/11activity/11activity.html#learning-outcomes",
    "href": "activities/11activity/11activity.html#learning-outcomes",
    "title": "Activity 11: Protect Your Password",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should:\n\nUnderstand the importance of strong passwords in cybersecurity.\nLearn how to create secure passwords using a combination of letters, numbers, and symbols.\nRecognize the risks of using weak passwords and sharing them with others.\nGain confidence in protecting their personal information online."
  },
  {
    "objectID": "activities/09activity/activity09.html",
    "href": "activities/09activity/activity09.html",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "",
    "text": "Students will use the Code.org platform to play with either the Minecraft or Frozen games. Through this activity, they will utilize block-based coding to deepen their comprehension of fundamental programming concepts. As they progress through the game, students will learn how to construct sequences, loops, and conditional statements, and observe how these elements interact to produce the desired outcomes. This hands-on experience aims to enhance their understanding of how coding works in a fun and educational environment, fostering their problem-solving skills and creativity"
  },
  {
    "objectID": "activities/09activity/activity09.html#description",
    "href": "activities/09activity/activity09.html#description",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "",
    "text": "Students will use the Code.org platform to play with either the Minecraft or Frozen games. Through this activity, they will utilize block-based coding to deepen their comprehension of fundamental programming concepts. As they progress through the game, students will learn how to construct sequences, loops, and conditional statements, and observe how these elements interact to produce the desired outcomes. This hands-on experience aims to enhance their understanding of how coding works in a fun and educational environment, fostering their problem-solving skills and creativity"
  },
  {
    "objectID": "activities/09activity/activity09.html#materials-required",
    "href": "activities/09activity/activity09.html#materials-required",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "Materials Required",
    "text": "Materials Required\n\nIPAD\nCode.org platform: Minecraft Designer\nCode.org platform: Code with Anna and Elsa"
  },
  {
    "objectID": "activities/09activity/activity09.html#steps-to-conduct-the-activity",
    "href": "activities/09activity/activity09.html#steps-to-conduct-the-activity",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up & Introduction\n\nOpen the Code.org platform on IPADs.\nHave students watch the introductory video provided before starting the activity.\nGuide students through the initial stages of their chosen block coding game.\nDisable subsequent instructional videos to encourage independent exploration (optional)."
  },
  {
    "objectID": "activities/09activity/activity09.html#reflection",
    "href": "activities/09activity/activity09.html#reflection",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 30-minute mark to discuss progress and challenges.\nAsk students to describe what they observed Minecraft mobs doing with the block codes.\nRelate the activity to game development, emphasizing how coding principles translate into interactive gameplay experiences."
  },
  {
    "objectID": "activities/09activity/activity09.html#learning-outcomes",
    "href": "activities/09activity/activity09.html#learning-outcomes",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand basic coding principles.\nUse conditional statements to create decision-making processes in block coding.\nEnhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.\nTest their block code in a practical setup and debug any issues that arise."
  },
  {
    "objectID": "activities/07activity/07activity.html#description",
    "href": "activities/07activity/07activity.html#description",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "",
    "text": "In this activity, students will be introduced to the concepts of computation thinking by navigating through a maze using basic commands. Students will develop skills in problem-solving, pattern recognition, and algorithmic thinking."
  },
  {
    "objectID": "activities/07activity/07activity.html#materials-required",
    "href": "activities/07activity/07activity.html#materials-required",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Materials Required",
    "text": "Materials Required\n\nA map (An example is shown below)\nA small car figure or token\nA set of command cards (e.g., move forward, turn left, turn right)"
  },
  {
    "objectID": "activities/07activity/07activity.html#activity-steps",
    "href": "activities/07activity/07activity.html#activity-steps",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Activity Steps",
    "text": "Activity Steps\n\nIntroduction\n\nExplain the concept of computational thinking, which involves breaking down problems into manageable steps, recognizing patterns, and creating algorithms to solve problems.\nIntroduce the maze activity and its goal: to navigate the robot from the start to the finish.\n\n\n\nStep 1: Setting Up\n\nProvide each student or group with a maze, a robot token, and command cards.\nClearly show the starting position and the goal on the maze.\n\n\n\nStep 2: Planning the Route\n\nAsk students to analyze the maze and plan a route for the robot.\nEncourage them to use the command cards to create a sequence of instructions that will guide the robot through the maze.\nHave students lay out the sequence of commands in order.\n\n\n\nStep 3: Executing the Plan\n\nStudents place their robot token at the starting position.\nThey follow their planned sequence of commands to navigate the robot through the maze.\nIf the robot encounters an obstacle or reaches a dead end, students should revise their plan and try again.\n\n\n\nExtension: Blockly Maze Game\n\nOnce students successfully complete the maze activity, they can advance to a more challenging and interactive coding game using an iPad, such as the Blockly Maze Game."
  },
  {
    "objectID": "activities/05activity/05activity.html#summary",
    "href": "activities/05activity/05activity.html#summary",
    "title": "Activity 5: Debugging",
    "section": "Summary",
    "text": "Summary\nThis activity introduces students to the basics of debugging. It highlights common errors in code and methods for addressing them. Engagement in these activities can better prepare students for coding by providing a solid understanding of how to handle errors."
  },
  {
    "objectID": "activities/02activity/02activity.html#time-required",
    "href": "activities/02activity/02activity.html#time-required",
    "title": "Activity 2: Binary & Balloons",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/02activity/02activity.html#discussion-reflection",
    "href": "activities/02activity/02activity.html#discussion-reflection",
    "title": "Activity 2: Binary & Balloons",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhat challenges did you have with the activity?\nDid you find it easier to understand binary numbers after the activity? Why or why not?\n\nCan you think of other ways binary numbers might be used in the real world?\n\nWhat part did you enjoy the most?"
  },
  {
    "objectID": "activities/02activity/02activity.html#wrap-up",
    "href": "activities/02activity/02activity.html#wrap-up",
    "title": "Activity 2: Binary & Balloons",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nParticipating in this activity will enhance students’ computational thinking. The concept of binary numbers will help students understand the basics of how technology functions as its simplest levels. Encouraging students to create their own binary numbers and decode them will boost their computational understanding."
  },
  {
    "objectID": "activities/01activity/01activity.html#time-required",
    "href": "activities/01activity/01activity.html#time-required",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/01activity/01activity.html#discussion-reflection",
    "href": "activities/01activity/01activity.html#discussion-reflection",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nDid you code work the first time? If not, how did you fix it?\nWhat strategy did you use for loops or conditionals?\nWhat part did you enjoy the most?"
  },
  {
    "objectID": "activities/01activity/01activity.html#wrap-up",
    "href": "activities/01activity/01activity.html#wrap-up",
    "title": "Activity 1: Navigating Decisions with If-Else-Elif Statements",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nParticipating in this activity will enhance students’ computational thinking. Block coding with the robot helps students understand basic coding principles and improves their programming skills. Encouraging students to create and solve obstacles in block coding will significantly boost their coding proficiency."
  },
  {
    "objectID": "activities/04activity/04activity.html#time-required",
    "href": "activities/04activity/04activity.html#time-required",
    "title": "Activity 4: Block Code And Map Routes",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/04activity/04activity.html#discussion-reflection",
    "href": "activities/04activity/04activity.html#discussion-reflection",
    "title": "Activity 4: Block Code And Map Routes",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhat changes made your path easier to navigate?\nDid you code work the first time? If not, how did you fix it?\nWhat strategy did you use for loops or conditionals?\nWhat part did you enjoy the most?"
  },
  {
    "objectID": "activities/04activity/04activity.html#wrap-up",
    "href": "activities/04activity/04activity.html#wrap-up",
    "title": "Activity 4: Block Code And Map Routes",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nParticipating in this activity will enhance students’ computational thinking. Block coding with the robot helps students understand basic coding principles and improves their programming skills. Encouraging students to create and solve obstacles in block coding will significantly boost their coding proficiency."
  },
  {
    "objectID": "activities/04activity/04activity.html#learning-outcomes",
    "href": "activities/04activity/04activity.html#learning-outcomes",
    "title": "Activity 4: Block Code And Map Routes",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand basic coding principles.\nUse conditional statements to create decision-making processes in block coding.\nSimulate real-life problem-solving by programming a robot to navigate alternate routes when the primary path is blocked.\nEnhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.\nTest their block code in a practical setup and debug any issues that arise to ensure the robot navigates correctly."
  },
  {
    "objectID": "activities/06activity/06activity.html#objectives",
    "href": "activities/06activity/06activity.html#objectives",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "",
    "text": "Children will identify, analyze, and create simple patterns using shapes, colors, or numbers."
  },
  {
    "objectID": "activities/06activity/06activity.html#materials-needed",
    "href": "activities/06activity/06activity.html#materials-needed",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "Materials Needed",
    "text": "Materials Needed\n\nPaper and colored pencils/crayons\nPattern Materials (blocks or cut-out shapes)"
  },
  {
    "objectID": "activities/06activity/06activity.html#instructions",
    "href": "activities/06activity/06activity.html#instructions",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "Instructions",
    "text": "Instructions\n\nStep 1: Introduction to Patterns\n\nBegin with a brief discussion about patterns, explaining that patterns are sequences that repeat in a certain order.\nShow examples of simple patterns using shapes and colors:\n\nShapes: ⬛⬛🔴⬛⬛🔴… (Two squares, one circle, repeat)\nColors: 🔵🟢🔵🟢🔵…(Blue, green, repeat)\nNumbers: 1, 2, 1, 2, 1, 2… (Alternating 1 and 2)\n\n\n\n\nStep 2: Identify the Pattern\n\nProvide students with sets of simple sequences and ask them to identify the pattern. Examples:\n\nShapes: 🔺🔺⚫️🔺🔺⚫️…\nColors: 🟡🟡🟠🟡🟡🟠…\nNumbers: 3, 3, 6, 3, 3, 6…\n\n\n\n\nStep 3: Extend the Pattern\n\nOnce students identify the pattern, challenge them to continue the sequence by adding the next few elements.\n\nExample: Sequence: 🔵🔵🟢🔵🔵🟢… (They add 🔵🔵🟢 next)\n\n\n\n\nStep 4: Create Your Own Pattern\n\nInstruct students to create their own simple patterns using shapes, colors, or numbers on paper.\nEncourage them to share their patterns with a partner and see if their partner can identify and extend the pattern.\n\n\n\nStep 5: Pattern Puzzles\n\nCreate “pattern puzzles” where some elements in the sequence are missing, and ask students to fill in the blanks.\n\nExample: Sequence: 🟣, 🟣, 🟤, ___, 🟣, 🟣, 🟤, ___(They fill in with 🟣, 🟣, 🟤)\n\n\n\n\nExtensions\n\nFor students who complete the exercises, introduce them to the coding challenge on Blockly Turtle. This program prompts students to code shapes."
  },
  {
    "objectID": "activities/06activity/06activity.html#learning-outcomes",
    "href": "activities/06activity/06activity.html#learning-outcomes",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nRecognize and extend patterns.\nStudents will enhance critical thinking and problem-solving skills.\nCreate their own patterns and communicate them effectively."
  },
  {
    "objectID": "activities/08activity/activity08.html",
    "href": "activities/08activity/activity08.html",
    "title": "Activity 8: Internet Safety Routes",
    "section": "",
    "text": "In this activity, students will practice internet safety by identifying safe and unsafe actions on the internet. Students will watch a video about internet safety and then engage in an activity using robots to create and navigate routes based on safe and unsafe terms."
  },
  {
    "objectID": "activities/08activity/activity08.html#description",
    "href": "activities/08activity/activity08.html#description",
    "title": "Activity 8: Internet Safety Routes",
    "section": "",
    "text": "In this activity, students will practice internet safety by identifying safe and unsafe actions on the internet. Students will watch a video about internet safety and then engage in an activity using robots to create and navigate routes based on safe and unsafe terms."
  },
  {
    "objectID": "activities/08activity/activity08.html#materials-required",
    "href": "activities/08activity/activity08.html#materials-required",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Materials Required",
    "text": "Materials Required\n\nInternet Safety Cards\nWooden blocks\nProgrammable & Drivable Robot\nIPAD"
  },
  {
    "objectID": "activities/08activity/activity08.html#steps-to-conduct-the-activity",
    "href": "activities/08activity/activity08.html#steps-to-conduct-the-activity",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nDifficulty Breakdown\n\nIntroduction\n\nDiscuss with students about their experiences using the internet and activities they have done online.\nExplain the importance of learning safe practices for internet use.\nPlay the Twinkl video on internet safety: Twinkl Internet Safety Video.\nAfter watching, ask students what they learned from the video.\n\n\n\nBeginner\n\nDivide students into two groups and provide them with flashcards containing safe and unsafe terms/actions.\nInstruct students to sort the flashcards into safe and unsafe categories. Review the sorted flashcards to ensure understanding before proceeding.\nUsing wooden blocks as barriors, have students create a route that their robot can navigate through.\nAllow students to use their robot to navigate through the routes they created.\nEncourage students to create new routes for their robot after completing the initial one.\n🔍 Focus Skills: internet safety, unsafe activity recognition\n\n\n\nIntermediate\n\nDivide students into two groups and provide them with flashcards containing safe and unsafe terms/actions.\nInstruct students to sort the flashcards into safe and unsafe categories. Review the sorted flashcards to ensure understanding before proceeding.\nUsing wooden blocks and the sorted flashcards, have students create two routes: one for safe terms/actions and one for unsafe terms/actions that their robot can navigate through.\nAllow students to use their robot to navigate through the routes they created.\nEncourage students to create new routes for their robot after completing the initial one.\n🔍 Focus Skills: internet safety, unsafe activity recognition"
  },
  {
    "objectID": "activities/08activity/activity08.html#reflection",
    "href": "activities/08activity/activity08.html#reflection",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Reflection",
    "text": "Reflection\n\nConduct a reflection session after watching the video.\nAsk students what they learned about internet safety and what actions they might do differently online after watching the video."
  },
  {
    "objectID": "activities/08activity/activity08.html#summary",
    "href": "activities/08activity/activity08.html#summary",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Summary",
    "text": "Summary\nThis activity aims to enhance students’ understanding of internet safety by actively engaging them in identifying safe and unsafe online behaviors. By using Spheros to navigate through created routes, students apply their knowledge in a practical and interactive manner, reinforcing internet safety practices."
  },
  {
    "objectID": "activities/08activity/activity08.html#examples-of-flashcards",
    "href": "activities/08activity/activity08.html#examples-of-flashcards",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Examples of Flashcards",
    "text": "Examples of Flashcards\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/10activity/10activity.html",
    "href": "activities/10activity/10activity.html",
    "title": "Activity 10: Electrical Currents and LEDs - Arduino",
    "section": "",
    "text": "In this activity, students will engage in an activity designed to introduce them to the fundamentals of electronics by making a simple circuit. Through levels of increasing difficulty, students will get a hands-on experience that provides them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "activities/10activity/10activity.html#description",
    "href": "activities/10activity/10activity.html#description",
    "title": "Activity 10: Electrical Currents and LEDs - Arduino",
    "section": "",
    "text": "In this activity, students will engage in an activity designed to introduce them to the fundamentals of electronics by making a simple circuit. Through levels of increasing difficulty, students will get a hands-on experience that provides them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "activities/10activity/10activity.html#materials-required",
    "href": "activities/10activity/10activity.html#materials-required",
    "title": "Activity 10: Electrical Currents and LEDs - Arduino",
    "section": "Materials required",
    "text": "Materials required\n\nArduino Instructions: Intro to Basic Electronics with Arduino\nArduino Board and program\nArduino USB connector cable\n3 LEDs\n3 1k ohm resistor\nConnecting Wire"
  },
  {
    "objectID": "activities/10activity/10activity.html#steps-to-conduct-the-activity",
    "href": "activities/10activity/10activity.html#steps-to-conduct-the-activity",
    "title": "Activity 10: Electrical Currents and LEDs - Arduino",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nDifficulty Breakdown\n\nIntroduction\n\nAcssess insturction in order to run activity.\n\n\n\nBeginner\n\nFollow the instructions through to the end of the single LED circuits.\n🔍 Focus Skills: creativity, problem-solving, electrical component relationships\n\n\n\nIntermediate\n\nFollow the instructions through to the end of the single LED circuits.\nFor increasing difficulty, continue the activity through the multiple LED circuits.\n🔍 Focus Skills: creativity, problem-solving, electrical component relationships"
  },
  {
    "objectID": "activities/10activity/10activity.html#reflection",
    "href": "activities/10activity/10activity.html#reflection",
    "title": "Activity 10: Electrical Currents and LEDs",
    "section": "Reflection",
    "text": "Reflection\n\nPause at the 50-minute mark to discuss progress and challenges\nAsk students to describe what they observed from trying to get the LEDs to light up\nRelate the activity to everday use of certain electironic that work with simalr electonics like LED lights."
  },
  {
    "objectID": "activities/10activity/10activity.html#learning-outcomes",
    "href": "activities/10activity/10activity.html#learning-outcomes",
    "title": "Activity 10: Electrical Currents and LEDs - Arduino",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand the function of an LED.\nBuild a simple circuit.\nExplore how LEDs interact with other elextrical components.\nUnderstand the difference between different kinds of circuits."
  },
  {
    "objectID": "activities/12activity/12activity.html",
    "href": "activities/12activity/12activity.html",
    "title": "Activity 12: Facts and Questions",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of prompt engineering. Prompt engineering involves creating well-structured inputs, or prompts, that effectively guide generative AI models to produce desired outputs. Students will be presented with specific facts on various topics and tasked with matching them to corresponding questions. These questions will range from vague, incomplete inquiries to more precise, well-defined ones that align closely with the provided facts. Following this, students will create their own facts and formulate both vague and specific questions based on those facts. Other students will then review these questions and determine whether they are vague or specific. This exercise encourages critical thinking and reinforces the importance of clarity in question formulation."
  },
  {
    "objectID": "activities/12activity/12activity.html#description",
    "href": "activities/12activity/12activity.html#description",
    "title": "Activity 12: Facts and Questions",
    "section": "",
    "text": "Students will engage in an activity designed to introduce them to the fundamentals of prompt engineering. Prompt engineering involves creating well-structured inputs, or prompts, that effectively guide generative AI models to produce desired outputs. Students will be presented with specific facts on various topics and tasked with matching them to corresponding questions. These questions will range from vague, incomplete inquiries to more precise, well-defined ones that align closely with the provided facts. Following this, students will create their own facts and formulate both vague and specific questions based on those facts. Other students will then review these questions and determine whether they are vague or specific. This exercise encourages critical thinking and reinforces the importance of clarity in question formulation."
  },
  {
    "objectID": "activities/12activity/12activity.html#materials-required",
    "href": "activities/12activity/12activity.html#materials-required",
    "title": "Activity 12: Facts and Questions",
    "section": "Materials required",
    "text": "Materials required\n\nPROMPT ENGINNERING SHEET\nPencil"
  },
  {
    "objectID": "activities/12activity/12activity.html#steps-to-conduct-the-activity",
    "href": "activities/12activity/12activity.html#steps-to-conduct-the-activity",
    "title": "Activity 12: Facts and Questions",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nPass out the engineering sheet.\n\n\n\nInstructions\n\nStudents should first complete the prompt enginnering sheet.\nDirect the students to create 2 facts based on one a topic of their choosing, then prompt then to create two question for each fact one being vauge the other being specific.\nPair students in groups of two to switch sheets to ideinfity which question are vauge and specific.\nKeep switching groups until students have rotated at least three times."
  },
  {
    "objectID": "activities/12activity/12activity.html#reflection",
    "href": "activities/12activity/12activity.html#reflection",
    "title": "Activity 12: Facts and Questions",
    "section": "Reflection",
    "text": "Reflection\n\nAsk students what part of the actvity they found the hardest. Then ask if they found identifying question or creating them to be harder."
  },
  {
    "objectID": "activities/12activity/12activity.html#learning-outcomes",
    "href": "activities/12activity/12activity.html#learning-outcomes",
    "title": "Activity 12: Facts and Questions",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nCreate detailed questions or prompts.\nReview the questions or prompts given by their peers to determine whether or not they are vague or specific."
  },
  {
    "objectID": "activities/14activity/14activity.html#time-required",
    "href": "activities/14activity/14activity.html#time-required",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/14activity/14activity.html#summary",
    "href": "activities/14activity/14activity.html#summary",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Summary",
    "text": "Summary\nBy programming Blue-Bots to navigate maps with specific constraints, students develop an understanding of how conditions affect movement and decision-making. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different coding sequences."
  },
  {
    "objectID": "activities/16activity/16activity.html#overview",
    "href": "activities/16activity/16activity.html#overview",
    "title": "Activity 16: Manual Control and Bulldozing Challenge",
    "section": "",
    "text": "In this action-packed session, students will tackle two creative missions with Dash: Basketball Challenge and Castle Siege. Each task is designed with increasing difficulty by grade level, allowing students to build their programming logic as they play.\nUsing Blockly, students will control Dash to move, aim, and launch in order to complete each objective. Along the way, they’ll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops—all wrapped inside a fun, interactive story."
  },
  {
    "objectID": "activities/16activity/16activity.html#duration",
    "href": "activities/16activity/16activity.html#duration",
    "title": "Activity 16: Manual Control and Bulldozing Challenge",
    "section": "Duration",
    "text": "Duration\n\nEstimated Time: 40 minutes"
  },
  {
    "objectID": "activities/16activity/16activity.html#materials",
    "href": "activities/16activity/16activity.html#materials",
    "title": "Activity 16: Manual Control and Bulldozing Challenge",
    "section": "Materials",
    "text": "Materials\n\nDash Robot (with Launcher add-on)\n\n3 soft balls per robot\n\nPlastic cups, blocks, or small boxes\n\nTape or tiles for making paths\n\nTablets with Blockly app\n\nOptional: cones, obstacles, or themed props for story immersion (Note: You can create your own unique story for the kids)"
  },
  {
    "objectID": "activities/16activity/16activity.html#challenge-1-dashs-basketball-mission",
    "href": "activities/16activity/16activity.html#challenge-1-dashs-basketball-mission",
    "title": "Activity 16: Manual Control and Bulldozing Challenge",
    "section": "Challenge 1: Dash’s Basketball Mission 🏀",
    "text": "Challenge 1: Dash’s Basketball Mission 🏀\n\nStoryline\nStory 1: Dash dreams of being a pro basketball player. Today, he’s stepping up to take 3 shots at the hoop, but he needs your help to get the ball in every time.\n\n\nSetup\n\nPlace a cup or small container at a reasonable distance.\n\nDash must move to a firing position and attempt to land all 3 balls in the target.\n\nDepending on the grade, students can work with pre-made or self-designed paths.\n\n\n\nGrade-Level Breakdown\nGrades 1–2 (Getting Started)\n- Use a guided path for Dash.\n- Focus on simple commands like forward, turn, and launch.\n- One shot at a time, 3 total.\n- 🔍 Focus Skill: Following instructions, cause-and-effect logic.\nGrades 3–4 (Growing Coders)\n- Students design the path to the hoop.\n- Adjust launch strength to score.\n- Use blocks like launch at __%, repeat, and basic conditionals.\n- 🔍 Focus Skill: Adjusting variables, learning loops.\nGrades 5–6 (Code Pros)\n- Students must build their own obstacle course and hit all 3 shots using a single sequence of blocks.\n- Encourage use of loops, variables, and conditions to optimize.\n- 🔍 Focus Skill: Efficiency, strategic thinking, and testing."
  },
  {
    "objectID": "activities/16activity/16activity.html#challenge-2-dashs-castle-siege",
    "href": "activities/16activity/16activity.html#challenge-2-dashs-castle-siege",
    "title": "Activity 16: Manual Control and Bulldozing Challenge",
    "section": "Challenge 2: Dash’s Castle Siege 🏰",
    "text": "Challenge 2: Dash’s Castle Siege 🏰\n\nStoryline\nA princess is locked inside a castle made of blocks. Dash is on a quest to bring down the gates and rescue her with his launcher, but the walls are tougher than they look.\n\n\nSetup\n\nCreate a “castle” out of stacked cups or blocks.\n\nDash will move into range and fire at lower blocks to topple the wall.\n\nAdd extra conditions or obstacles for upper levels.\n\n\n\nGrade-Level Breakdown\nGrades 1–2 (New Knights)\n- Follow a path to the castle.\n- Aim and fire to knock down the wall.\n- 🔍 Focus Skill: Object interaction and movement basics.\nGrades 3–4 (Castle Crushers)\n- Allow retries with loops.\n- Focus on hitting weak points in the wall.\n- Use repeat blocks and conditional retries.\n- 🔍 Focus Skill: Recognizing patterns, problem-solving.\nGrades 5–6 (Master Coders)\n- Add rules: “If wall is still up, fire again.”\n- Include extra steps like navigating inside the castle after it falls.\n- Must use a complete block sequence with minimal trial edits.\n- 🔍 Focus Skill: Conditional logic, multi-step planning."
  },
  {
    "objectID": "activities/16activity/16activity.html#discussion-reflection",
    "href": "activities/16activity/16activity.html#discussion-reflection",
    "title": "Activity 16: Manual Control and Bulldozing Challenge",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter both challenges, gather the class for a quick debrief. We can ask:\n\nWhat changes made your shots or launches more accurate?\nDid your code work the first time? If not, how did you fix it?\nWhat strategy did you use for loops or conditionals?\nWhat part did you enjoy the most?"
  },
  {
    "objectID": "activities/16activity/16activity.html#wrap-up",
    "href": "activities/16activity/16activity.html#wrap-up",
    "title": "Activity 16: Manual Control and Bulldozing Challenge",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nThese themed Dash activities blend creative storytelling with foundational programming skills. By adjusting challenge levels and allowing room for imagination, students stay engaged while learning how to think like a programmer: plan, test, adjust, and try again!"
  },
  {
    "objectID": "activities/03activity/03activity.html#wrap-up",
    "href": "activities/03activity/03activity.html#wrap-up",
    "title": "Activity 3: Different Ways a Computer Sorts",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nParticipating in this activity will enhance students’ computational thinking. The added visual and hands-on application of the paper slips will help students undertsand the concepts of sorting and improve their understanding of coding efficiency."
  },
  {
    "objectID": "activities/05activity/05activity.html#time-required",
    "href": "activities/05activity/05activity.html#time-required",
    "title": "Activity 5: Debugging",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/05activity/05activity.html#set-up",
    "href": "activities/05activity/05activity.html#set-up",
    "title": "Activity 5: Debugging",
    "section": "Set-Up",
    "text": "Set-Up\n\nPrint out debugging sheet before activity starts or during debugging video (if you are running activity with someone else).\nEach student should recieve a copy of the debugging sheet, a pencil, and a\n\n\nDifficulty Breakdown\n\nIntroduction\n\nGather all the students together and show them the debugging video.\n\nAfter the video is done, ask them about what they think bugs in coding will look like. Can bugs show up in differeny ways, or just one?\n\nExplain to students the different types of errors they may encounter when learning to code.\n\nSyntax Errors:\n\ndue to grammatical or indentation mistakes in the code, which prevents the program from running correctly\nsimilar to missspellings or improper punctuation in written language\n\nLogic Errors:\n\nwhen lines of code, while syntactically correct, do not produce the intended outcome\ncaused by flawed logic that the computer cannot interpret as intended, leading to incorrect or unexpected results\n\n\n\n\n\nBeginner\n\nHand out a copy of the Debugging Sheet to every student. Make sure they recieve the ‘Identifying Bugs’ side first.\nUsng the written examples, explain to students that any instructions that do not make sense or are grammatically incorrect can be identified as bugs.\nFlip the sheet over. Have students try to identify if the bugs on this side would be syntax errors or logic errors.\n🔍 Focus Skills: critical thinking, categorization\n\n\n\nIntermediate\n\nHand out a copy of the Debugging Sheet to every student. Make sure they recieve the ‘Identifying Bugs’ side first.\nUsing the written examples, explain to students that any instructions that do not make sense or are grammatically incorrect can be identified as bugs.\nFlip the sheet over. Have students try to identify the locations of bugs and if they would be syntax errors or logic errors.\nHave students create instructions that contain Bugs, no Bugs, syntax errors, and logic errors.\n🔍 Focus Skills: critical thinking, categorization, error handling"
  },
  {
    "objectID": "activities/05activity/05activity.html#discussion-reflection",
    "href": "activities/05activity/05activity.html#discussion-reflection",
    "title": "Activity 5: Debugging",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can:\n\nExplain the similarity between actual code and the activity, emphasizing how debugging requires the skills practiced in the activity.\nAsk students if they found the activity challenging and what new concepts they learned.\nInquire which was harder: identifying bugs or categorizing them."
  },
  {
    "objectID": "activities/05activity/05activity.html#wrap-up",
    "href": "activities/05activity/05activity.html#wrap-up",
    "title": "Activity 5: Debugging",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nThis activity introduces students to the basics of debugging. It highlights common errors in code and methods for addressing them. Engagement in these activities can better prepare students for coding by providing a solid understanding of how to handle errors."
  },
  {
    "objectID": "activities/06activity/06activity.html#time-required",
    "href": "activities/06activity/06activity.html#time-required",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/06activity/06activity.html#discussion-reflection",
    "href": "activities/06activity/06activity.html#discussion-reflection",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can:\n\nHave students display their patterns and share them with the class to foster pride in their work and appreciation for the diversity of patterns created.\nAsk if there were any patterns they had trouble completing. If so, which ones and why?"
  },
  {
    "objectID": "activities/06activity/06activity.html#wrap-up",
    "href": "activities/06activity/06activity.html#wrap-up",
    "title": "Activity 6: Pattern Recognition Activity - Pattern Detectives",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nParticipating in this activity will enhance students’ critical thinking. By progressively increasing the difficulty of patterns, students will utilize problem-solving principles and improve their recognition skills. Encouraging students to create and present their patterns will invite them to feel prideful in their work."
  },
  {
    "objectID": "activities/07activity/07activity.html#time-required",
    "href": "activities/07activity/07activity.html#time-required",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/07activity/07activity.html#steps-to-conduct-the-activity",
    "href": "activities/07activity/07activity.html#steps-to-conduct-the-activity",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nProvide each student or group with a map, a robot token, and command cards.\nPlace the robot at the starting position.\n\n\n\nDifficulty Breakdown\n\nIntroduction\n\nExplain the concept of computational thinking, which involves breaking down problems into manageable steps, recognizing patterns, and creating algorithms to solve problems.\nIntroduce the maze activity and its goal: to navigate the robot from the start to the finish.\nClearly explain where the starting and goal spots are.\n\n\n\nBeginner\n\nAsk students to analyze the maze and plan a route for the robot.\nEncourage them to use the command cards to create a sequence of instructions that will guide the robot through the maze.\nHave students lay out the sequence of commands in order.\nWith their bot at the starting position, have the students follow their planned sequence of commands to navigate through the maze.\nIf the robot encounters an obstacle or reaches a dead end, students should revise their plan and try again.\n🔍 Focus Skills: creating manageable steps, movement basics, problem-solving\n\n\n\nIntermediate\n\nAsk students to analyze the maze and plan a route for the robot.\nEncourage them to use the command cards to create a sequence of instructions that will guide the robot through the maze.\nHave students lay out the sequence of commands in order.\nWith their bot at the starting position, have the students follow their planned sequence of commands to navigate through the maze.\nIf the robot encounters an obstacle or reaches a dead end, students should revise their plan and try again.\nOnce students successfully complete the maze activity, they can advance to a more challenging and interactive coding game using an iPad, such as the Blockly Maze Game.\n🔍 Focus Skills: creating manageable steps, movement basics, problem-solving"
  },
  {
    "objectID": "activities/07activity/07activity.html#discussion-reflection",
    "href": "activities/07activity/07activity.html#discussion-reflection",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhat challenges did you face?\nHow did you solve any problems that arose?\nWhat strategies helped you find the correct path?\nDiscuss how this activity relates to real-world computational thinking and problem-solving."
  },
  {
    "objectID": "activities/07activity/07activity.html#wrap-up",
    "href": "activities/07activity/07activity.html#wrap-up",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nParticipating in this activity will enhance students’ computational thinking. Navigating the robot using directional cards helps students understand basic coding principles through the use of a visual aid and improves their programming skills. Encouraging students to revise their navigation plan will significantly boost their coding proficiency and will allow them to think critically while problem-solving."
  },
  {
    "objectID": "activities/07activity/07activity.html#example-map",
    "href": "activities/07activity/07activity.html#example-map",
    "title": "Activity 7: Maze Navigation Activity",
    "section": "Example Map",
    "text": "Example Map\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/08activity/activity08.html#time-required",
    "href": "activities/08activity/activity08.html#time-required",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/08activity/activity08.html#discussion-reflection",
    "href": "activities/08activity/activity08.html#discussion-reflection",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhat did you learn about internet safety?\nWhat might you do differently online after watching the video?"
  },
  {
    "objectID": "activities/08activity/activity08.html#wrap-up",
    "href": "activities/08activity/activity08.html#wrap-up",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nThis activity aims to enhance students’ understanding of internet safety by actively engaging them in identifying safe and unsafe online behaviors. By using robots to navigate through created routes, students apply their knowledge in a practical and interactive manner, reinforcing internet safety practices."
  },
  {
    "objectID": "activities/08activity/activity08.html#learning-outcomes",
    "href": "activities/08activity/activity08.html#learning-outcomes",
    "title": "Activity 8: Internet Safety Routes",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand basic safety practices when using the internet or other online tools.\nReflect on their previous online usage to establish any necessary changes."
  },
  {
    "objectID": "activities/09activity/activity09.html#time-required",
    "href": "activities/09activity/activity09.html#time-required",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 30-45 minutes"
  },
  {
    "objectID": "activities/09activity/activity09.html#discussion-reflection",
    "href": "activities/09activity/activity09.html#discussion-reflection",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the students have worked for about a half hour, gather the class for a quick debrief. We can ask:\n\nWhat did you observed the Minecraft mobs or Frozen characters doing with the block codes?\nRelate the activity to game development, emphasizing how coding principles translate into interactive gameplay experiences."
  },
  {
    "objectID": "activities/09activity/activity09.html#wrap-up",
    "href": "activities/09activity/activity09.html#wrap-up",
    "title": "Activity 9: Block Code With Code.Org (Minecraft and Frozen)",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nBy introducing them to basic coding principles, students will develop a stronger grasp of programming, leading to improved comprehension when they encounter more complex coding tasks in the future. This early exposure aims to build their confidence and proficiency in understanding and applying code effectively."
  },
  {
    "objectID": "activities/17Activity/17activity.html",
    "href": "activities/17Activity/17activity.html",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "",
    "text": "In this activity, students will engage in an activity designed to introduce them to the fundamentals of electronics by making a simple circuit. Through levels of increasing difficulty, students will get a hands-on experience that provides them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "activities/17Activity/17activity.html#description",
    "href": "activities/17Activity/17activity.html#description",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "",
    "text": "In this activity, students will engage in an activity designed to introduce them to the fundamentals of electronics by making a simple circuit. Through levels of increasing difficulty, students will get a hands-on experience that provides them with a foundational understanding of how electronic circuits and programming interact."
  },
  {
    "objectID": "activities/17Activity/17activity.html#time-required",
    "href": "activities/17Activity/17activity.html#time-required",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 1 Hour"
  },
  {
    "objectID": "activities/17Activity/17activity.html#materials-required",
    "href": "activities/17Activity/17activity.html#materials-required",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "Materials required",
    "text": "Materials required\n\nPlay Doh (in a variety of colors)\nLEDs (in a variety of colors)\n5V Batteries with 5V Battery Holders\nNon-conductive Clay (optional)\nWorksheet"
  },
  {
    "objectID": "activities/17Activity/17activity.html#steps-to-conduct-the-activity",
    "href": "activities/17Activity/17activity.html#steps-to-conduct-the-activity",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "Steps to conduct the activity",
    "text": "Steps to conduct the activity\n\nSet-up\n\nPrint out multiple copies of the worksheet mentioned above.\nSet up the station by organizing the materials.\n\n\nIntroduction\n\nShow this video to the class on playdoh circuits YouTube Link\nExplain to the students that batteries have both a positive (red) and negative (black) side and in order to turn anything on a circuit needs to connect these two sides using the lights and the play doh. A circuit is like a trail and the negative needs to be able to walk back to the battery through the postive.\nDemonstrate the creation of a playdoh light system.\n\nStart by creating two blobs of playdough connect the red end of the battery to one and the black end to the other blob.\nExplain that the light has a long leg and a short leg. The short leg always has to be on the negative (black) side and the long leg always has to be towards the postive (red) side. Then connect the light to the blobs.\nExplain that the blobs can not touch out the electricity will skip past the light and not turn it on (this is called a short circuit).\nAfter connecting the light correctly the light should turn on. Explain if the light does not turn on when they try the first thing to test is to switch the direction of the legs (this is the most common mistake).\n\n\n\n\n\nLED_pins\n\n\n\n\n\nsingle_circuit\n\n\n\nShow the students it is possible to connect two lights by creating 3 blobs of playdoh and the outer blobs should be the postivie and negative ends connected to the play dough. Then use a light to connect the blobs with the long leg always facing the postive side. This is a series circuit.\n\n\n\n\nseries_circuit\n\n\n\nShow the students it is possible to connect more than one light in the same section. Connect a second LED in the same direction as the one next to it. This is called a parallel circuit.\n\n\n\n\nparellel_circuit\n\n\n\nNon-conductive clay can be used to block current and connect the creations. Try not to mix the play doh with the clay.\n\n\n\nBeginner\n\nNow give each of the students their materials to make their own. Here are some example challengegs to give them to try:\n\nCan you follow the path that electricity takes to light up starting with the black wire?\nCan you get all the different colors to light up?\n\n🔍 Focus Skills: creativity, problem-solving, electrical component relationships\n\n\n\nIntermediate\n\n\nNow give each of the students their materials to make their own. Here are some example challengegs to give them to try:\n\nCan you follow the path that electricity takes to light up starting with the black wire?\nCan you get all the different colors to light up?\nCan you complete both a series and a parallel circuit with PlayDoh blobs?\nCan you get more than 3 blobs of PlayDoh connected in a circuit?\n\n\n🔍 Focus Skills: creativity, problem-solving, electrical component relationships"
  },
  {
    "objectID": "activities/17Activity/17activity.html#reflection",
    "href": "activities/17Activity/17activity.html#reflection",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "Reflection",
    "text": "Reflection\n\nAsk students what part of the actvity they found the hardest.\nAsk them what their favorite part of the activity was."
  },
  {
    "objectID": "activities/17Activity/17activity.html#learning-outcomes",
    "href": "activities/17Activity/17activity.html#learning-outcomes",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand the function of an LED.\nBuild a simple circuit.\nExplore how LEDs interact with other elextrical components.\nUnderstand the difference between different kinds of circuits."
  },
  {
    "objectID": "activities/10activity/10activity.html#time-required",
    "href": "activities/10activity/10activity.html#time-required",
    "title": "Activity 10: Electrical Currents and LEDs - Arduino",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 1 Hour"
  },
  {
    "objectID": "activities/10activity/10activity.html#discussion-reflection",
    "href": "activities/10activity/10activity.html#discussion-reflection",
    "title": "Activity 10: Electrical Currents and LEDs - Arduino",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhat did you observe from trying to get the LEDs to light up?\nRelate the activity to everday use of certain electironic that work with simalr electonics like LED lights."
  },
  {
    "objectID": "activities/10activity/10activity.html#wrap-up",
    "href": "activities/10activity/10activity.html#wrap-up",
    "title": "Activity 10: Electrical Currents and LEDs - Arduino",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nIntroducing students to the fundamentals of electronics equips them with a deeper understanding of how we interact with and manipulate electronic devices. By gaining this foundational knowledge, they can comprehend the essential processes and steps required to make electronic components function effectively. This early exposure not only explains the workings of everyday technology but also fosters curiosity and encourages hands-on experimentation."
  },
  {
    "objectID": "activities/17Activity/17activity.html#discussion-reflection",
    "href": "activities/17Activity/17activity.html#discussion-reflection",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhat part of the actvity they found the hardest?\nWhat was your favorite part of the activity?"
  },
  {
    "objectID": "activities/17Activity/17activity.html#wrap-up",
    "href": "activities/17Activity/17activity.html#wrap-up",
    "title": "Activity 17: Electrical Currents and LEDs - Play Doh",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nThis activity is a foundation for learning simple circuits. Understanding how electricity works is vital to working with electronic equipment and making electronic circuits. This activity requires creativity to be able to make different versions of the circuit while also understanding logic and electrical component relationships."
  },
  {
    "objectID": "activities/11activity/11activity.html#time-required",
    "href": "activities/11activity/11activity.html#time-required",
    "title": "Activity 11: Protect Your Password",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 1 Hour"
  },
  {
    "objectID": "activities/11activity/11activity.html#discussion-reflection",
    "href": "activities/11activity/11activity.html#discussion-reflection",
    "title": "Activity 11: Protect Your Password",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhy is it important to use strong passwords?\nHow can you protect yourself online?\nLet them share their own tips for staying safe online."
  },
  {
    "objectID": "activities/11activity/11activity.html#wrap-up",
    "href": "activities/11activity/11activity.html#wrap-up",
    "title": "Activity 11: Protect Your Password",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nThis activity aims to enhance students’ understanding of internet safety by actively engaging them in identifying safe and unsafe passwords. By allowing students to make and guess each others’ passwords, students apply their knowledge in a practical and interactive manner, reinforcing internet safety practices."
  },
  {
    "objectID": "activities/12activity/12activity.html#time-required",
    "href": "activities/12activity/12activity.html#time-required",
    "title": "Activity 12: Facts and Questions",
    "section": "Time Required",
    "text": "Time Required\n\nEstimated Time: 1 Hour"
  },
  {
    "objectID": "activities/12activity/12activity.html#discussion-reflection",
    "href": "activities/12activity/12activity.html#discussion-reflection",
    "title": "Activity 12: Facts and Questions",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhat part of the acitivty was the hardest?\nDid you find identifying question or creating them to be harder?"
  },
  {
    "objectID": "activities/12activity/12activity.html#wrap-up",
    "href": "activities/12activity/12activity.html#wrap-up",
    "title": "Activity 12: Facts and Questions",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nAs advancements in AI technology continue to grow, prompt engineering has emerged as a critical skill, with increasing demand in the job market. Introducing students to these concepts at an early age will enhance their understanding of how prompt engineering works and how it connects to their existing curriculum, fostering essential skills for the future of technology and innovation. Requiring students to formulate more specific and detailed questions will enhance their ability to identify and construct clear, precise prompts, an essential skill in prompt engineering. This practice not only deepens their understanding of the subject matter but also strengthens their critical thinking and problem-solving abilities, which are vital for success in the evolving field of AI and technology."
  },
  {
    "objectID": "activities/13activity/13activity.html#picture-of-the-map",
    "href": "activities/13activity/13activity.html#picture-of-the-map",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Picture of the Map",
    "text": "Picture of the Map\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/13activity/13activity.html#steps-to-conduct-the-activity",
    "href": "activities/13activity/13activity.html#steps-to-conduct-the-activity",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Steps to Conduct the Activity",
    "text": "Steps to Conduct the Activity\n\nSet-Up\n\nEach map should have at least two students, with each assigned three columns for their obstacle course. A fifth colored flashcard should mark the end goal in the top row.\nEnsure there is one robot for every three columns. If there are more students than available maps or robots, pairing them is the best option.\n\nWhen pairing students, ensure they take equal turns using the device.\n\nDesign the course using flashcards so that students encounter at least five conditions regardless of their chosen path to the goal.\n\n\n\nDifficulty Breakdown\n\nIntroduction\n\nIntroduce the color-coded sheet, which specifies conditions requiring either the use or restriction of certain code blocks.\nSince some conditions involve turning at specific angles, ensure students understand the difference between 45-degree and 90-degree turns.\nClearly state each color used and the required action when landing on it.\n\n\n\nBeginner\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student achieves their goal, have them reposition the marked goal within the top row of their three columns.\n🔍 Focus Skills: Object interaction, movement basics, problem-solving\n\n\n\nIntermediate\n\nEncourage students to complete the course independently and assist those who are confused or struggling with the task.\nIf students are hesitant to help, involve a nearby teacher to better manage the situation.\nOnce a student achieves their goal, have them reposition the marked goal within the top row of their three columns.\nAfter meeting their marked goals twice, allow them to modify the flashcards and provide guidance if their courses are not conditionally possible.\nOnce modifying their courses, ask them to keep track of how many times they meet their goal.\n🔍 Focus Skills: Creativity, problem-solving, conditional logic"
  },
  {
    "objectID": "activities/13activity/13activity.html#discussion-reflection",
    "href": "activities/13activity/13activity.html#discussion-reflection",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nWhich conditional color did you have the hardest time passing and why?\nWere there any colors you found too easy to pass by?\nHow many times were you able to finish your obstacle courses?\nAdditionally, for those who kept count, how many times were you able to complete your obstacles?"
  },
  {
    "objectID": "activities/13activity/13activity.html#wrap-up",
    "href": "activities/13activity/13activity.html#wrap-up",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nBy programming robots to navigate maps with specific constraints, students develop an understanding of how conditions affect movement and decision-making. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different coding sequences."
  },
  {
    "objectID": "activities/13activity/13activity.html#learning-outcomes",
    "href": "activities/13activity/13activity.html#learning-outcomes",
    "title": "Activity 13: Conditional Color Coding",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of this activity, students should be able to:\n\nUnderstand basic coding principles.\nUse conditional statements to create decision-making processes in block coding.\nEnhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.\nTest their block code in a practical setup and debug any issues that arise to ensure the robot navigates correctly."
  },
  {
    "objectID": "activities/14activity/14activity.html#picture-of-the-map",
    "href": "activities/14activity/14activity.html#picture-of-the-map",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Picture of the Map",
    "text": "Picture of the Map\n\n\n\nMap Picture"
  },
  {
    "objectID": "activities/14activity/14activity.html#discussion-reflection",
    "href": "activities/14activity/14activity.html#discussion-reflection",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Discussion & Reflection",
    "text": "Discussion & Reflection\nAfter the activity has been completed, gather the class for a quick debrief. We can ask:\n\nHow many of you were able to complete the squares?\nDid you have any troubles? Where?\nWhat directional combinations were tricky and why?\nWere there any pathways you found to be easy?\nHow many times were you able to finish your A-to-B pathways?\nFor those who kept count, how many times were you able to complete the pathway?"
  },
  {
    "objectID": "activities/14activity/14activity.html#wrap-up",
    "href": "activities/14activity/14activity.html#wrap-up",
    "title": "Activity 14: Shapes and A-to-B Movements",
    "section": "Wrap-Up",
    "text": "Wrap-Up\nBy programming Blue-Bots to navigate maps with specific constraints, students develop an understanding of how conditions affect movement and decision-making. The activity reinforces computational thinking, logical reasoning, and teamwork while encouraging students to experiment with different coding sequences."
=======
    "objectID": "technical-leader-guide/index.html#helping-middle-school-students",
    "href": "technical-leader-guide/index.html#helping-middle-school-students",
    "title": "Guide for Computing Outreach Fellows",
    "section": "Helping Middle School Students",
    "text": "Helping Middle School Students\nMiddle school students (grades 6-8) are at a critical stage where they can begin to explore more advanced computational concepts. As a fellow, you will:\n\nIntroduce students to programming concepts using beginner-friendly languages like Python.\nFacilitate hands-on activities that involve building and programming robots or creating simple games.\nEncourage teamwork and collaboration through group projects that solve real-world problems using computational thinking.\nProvide guidance on how computing skills can be applied in various fields, such as science, art, and engineering."
  },
  {
    "objectID": "technical-leader-guide/index.html#helping-high-school-students",
    "href": "technical-leader-guide/index.html#helping-high-school-students",
    "title": "Guide for Computing Outreach Fellows",
    "section": "Helping High School Students",
    "text": "Helping High School Students\nHigh school students (grades 9-12) are ready to dive deeper into computing and explore career opportunities in the field. As a fellow, you will:\n\nTeach students more advanced programming concepts, such as algorithms, data structures, and web development.\nGuide students in creating their own projects, such as websites, apps, or robotics projects.\nOrganize workshops to encourage creativity and problem-solving.\nDiscuss career paths in computing, including software development, data science, cybersecurity, and artificial intelligence.\nProvide mentorship and resources for students interested in pursuing computing-related college programs or certifications."
>>>>>>> main
  }
]