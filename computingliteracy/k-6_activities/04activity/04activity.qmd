---
title: "Activity 4: Block Code And Map Routes"
subtitle: "Enhancing computational thinking through the creation of obstacles and routes through block coding and conditional statements."
grades: Kindergarten - 6th Grade
time_required: "30 Minutes"
categories: ["Grade: Kindergarten", "Grade: 1", "Grade: 2", "Grade: 3", "Grade: 4", "Grade: 5", "Grade: 6", "Time: 30 Minutes"]
toc: true
page-layout: full
---

## Description

In this activity, students will create and navigate map routes through block code using the IPAD apps. The activity is designed with increasing difficulty based on previous coding experience, allowing students to build their programming logic as they play.

Using the IPAD apps, students will control their bot to traverse the different map routes they come up with. Along the way, they'll explore fundamental computer science concepts like sequencing, debugging, conditionals, and loops - all wrapped inside a fun and interactive lesson.

## Time Required

- **Estimated Time**: 30-45 minutes

## Materials Required

- Programmable & Drivable Robot
- IPAD
- Item Cards
- Map (optional)

## Steps to Conduct the Activity

### Set-Up

- Split students into groups of two. Have them spread out throughout the room, ensuring each group has room to run the activity.
- Each group should recieve one robot, one IPAD, one set of item cards, and one map, if being used.
- Have the students put the item cards on various spots on the map. These will be their route obstacles.
- Depending on the previous coding experience, students can work with pre-made or self-designed paths.

### Dificulty Breakdown

#### Beginner
- Use a guided path for the robot. These paths should have a specific rule, such as no right turns allowed.
- Limit the number of obstacles on the map to 1-3.
- Focus on simple routes using the forward, backward, and turn commands.
- üîç *Focus Skills*: Object interaction, movement basics, problem-solving

#### Intermediate
- Students design the path the robot will follow. These paths should have a specific rule, such as no right turns allowed.
- Increase the number of obstacles on the map to 3-5.
- Use simple commands (forward, backward, turns) as well as loop and conditional blocks.
- üîç *Focus Skills*: Creativity, problem-solving, conditional logic

## Discussion & Reflection

After the activity has been completed, gather the class for a quick debrief. We can ask:

- What changes made your path easier to navigate?
- Did you code work the first time? If not, how did you fix it?
- What strategy did you use for loops or conditionals?
- What part did you enjoy the most?

## Wrap-Up

Participating in this activity will enhance students' computational thinking. Block coding with the robot helps students understand basic coding principles and improves their programming skills. Encouraging students to create and solve obstacles in block coding will significantly boost their coding proficiency.

## Learning Outcomes

By the end of this activity, students should be able to:

- Understand basic coding principles.
- Use conditional statements to create decision-making processes in block coding.
- Simulate real-life problem-solving by programming a robot to navigate alternate routes when the primary path is blocked.
- Enhance their computational thinking skills by breaking down a problem into smaller, manageable conditions and actions.
- Test their block code in a practical setup and debug any issues that arise to ensure the robot navigates correctly.
